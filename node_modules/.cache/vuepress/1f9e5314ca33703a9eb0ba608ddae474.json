{"remainingRequest":"D:\\1\\实训一\\study\\study\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!D:\\1\\实训一\\study\\study\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!D:\\1\\实训一\\study\\study\\node_modules\\vue-loader\\lib\\index.js??ref--1-1!D:\\1\\实训一\\study\\study\\lib\\webpack\\markdownLoader.js??ref--1-2!D:\\1\\实训一\\study\\study\\src\\zh\\miniapp\\wepy组件通信.md?vue&type=template&id=b291c8a0&","dependencies":[{"path":"D:\\1\\实训一\\study\\study\\src\\zh\\miniapp\\wepy组件通信.md","mtime":1557200317076},{"path":"D:\\1\\实训一\\study\\study\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\1\\实训一\\study\\study\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"D:\\1\\实训一\\study\\study\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\1\\实训一\\study\\study\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\1\\实训一\\study\\study\\lib\\webpack\\markdownLoader.js","mtime":1557200316988}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _vm._m(0)\n}\nvar staticRenderFns = [\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"content\" }, [\n      _c(\"h1\", { attrs: { id: \"组件通信\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: { href: \"#组件通信\", \"aria-hidden\": \"true\" }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" 组件通信\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"h5\", { attrs: { id: \"emit\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: { href: \"#emit\", \"aria-hidden\": \"true\" }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" $emit\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"blockquote\", [_c(\"p\", [_vm._v(\"子向父通信\")])]),\n      _vm._v(\" \"),\n      _c(\"h5\", { attrs: { id: \"broadcast\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: { href: \"#broadcast\", \"aria-hidden\": \"true\" }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" $broadcast\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"blockquote\", [_c(\"p\", [_vm._v(\"父向子通信\")])]),\n      _vm._v(\" \"),\n      _c(\"h5\", { attrs: { id: \"父子通信：父组件传递数据给子组件\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: {\n              href: \"#父子通信：父组件传递数据给子组件\",\n              \"aria-hidden\": \"true\"\n            }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" 父子通信：父组件传递数据给子组件\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [_c(\"strong\", [_vm._v(\"1、通过props传值\")])]),\n      _vm._v(\" \"),\n      _c(\"ol\", [\n        _c(\"li\", [_vm._v(\"如果需要传递动态属性值需要添加.sync修饰符\")]),\n        _vm._v(\" \"),\n        _c(\"li\", [\n          _vm._v(\n            \"如果要在子组件中修改父组件数据需要在接受的时候添加 twoWay: true\"\n          )\n        ]),\n        _vm._v(\" \"),\n        _c(\"li\", [_vm._v(\"如果需要数据双向绑定需要（.sync 和  twoWay 同时）\")])\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _c(\"strong\", [_vm._v(\"2、实用$broadcast将数据广播到所有子组件中\")])\n      ]),\n      _vm._v(\" \"),\n      _c(\"h5\", { attrs: { id: \"子父通信：子组件传递数据给父组件\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: {\n              href: \"#子父通信：子组件传递数据给父组件\",\n              \"aria-hidden\": \"true\"\n            }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" 子父通信：子组件传递数据给父组件\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"ol\", [\n        _c(\"li\", [\n          _vm._v(\"在父组件中events中定义事件，在子组件$emit触发  （推荐）\")\n        ]),\n        _vm._v(\" \"),\n        _c(\"li\", [\n          _vm._v(\n            \"在父组件methods中添加方法，在子组件中this.$invoke('../', '函数名称')\"\n          )\n        ]),\n        _vm._v(\" \"),\n        _c(\"li\", [\n          _vm._v(\n            \"在子组件中通过this.$parent获取到父组件实例，调用父组件回调函数给父组件发送数据\"\n          )\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"h5\", { attrs: { id: \"同级：a、b两个同级组件的数据发送\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: {\n              href: \"#同级：a、b两个同级组件的数据发送\",\n              \"aria-hidden\": \"true\"\n            }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" 同级：A、B两个同级组件的数据发送\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"ol\", [\n        _c(\"li\", [\n          _vm._v(\n            \"在A组件中通过this.$invoke('../B', '函数名称')  调用B组件中的回调函数传递数据\"\n          )\n        ]),\n        _vm._v(\" \"),\n        _c(\"li\", [\n          _vm._v(\"将数据发送到父组件，父组件在传递给另一个子组件（代理方式）\")\n        ]),\n        _vm._v(\" \"),\n        _c(\"li\", [_vm._v(\"自己封装一个发布订阅器（eventbus）\")])\n      ]),\n      _vm._v(\" \"),\n      _c(\"h5\", { attrs: { id: \"跨级：\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: { href: \"#跨级：\", \"aria-hidden\": \"true\" }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" 跨级：\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"ol\", [\n        _c(\"li\", [_vm._v(\"逐层传递\")]),\n        _vm._v(\" \"),\n        _c(\"li\", [_vm._v(\"this.$invoke('组件路径', '函数名称')\")])\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [_c(\"strong\", [_vm._v(\"使用redux可以做所有的数据管理\")])])\n    ])\n  }\n]\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}