{"remainingRequest":"D:\\1\\实训一\\study\\study\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\1\\实训一\\study\\study\\lib\\default-theme\\Sidebar.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\1\\实训一\\study\\study\\lib\\default-theme\\Sidebar.vue","mtime":1557200316955},{"path":"D:\\1\\实训一\\study\\study\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\1\\实训一\\study\\study\\node_modules\\babel-loader\\lib\\index.js","mtime":1526583314000},{"path":"D:\\1\\实训一\\study\\study\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\1\\实训一\\study\\study\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport SidebarGroup from './SidebarGroup.vue'\r\nimport SidebarLink from './SidebarLink.vue'\r\nimport NavLinks from './NavLinks.vue'\r\nimport { isActive } from './util'\r\n\r\nexport default {\r\n  components: { SidebarGroup, SidebarLink, NavLinks },\r\n\r\n  props: ['items'],\r\n\r\n  data () {\r\n    return {\r\n      openGroupIndex: 0\r\n    }\r\n  },\r\n\r\n  created () {\r\n    this.refreshIndex()\r\n  },\r\n\r\n  watch: {\r\n    '$route' () {\r\n      this.refreshIndex()\r\n    }\r\n  },\r\n\r\n  methods: {\r\n    refreshIndex () {\r\n      const index = resolveOpenGroupIndex(\r\n        this.$route,\r\n        this.items\r\n      )\r\n      if (index > -1) {\r\n        this.openGroupIndex = index\r\n      }\r\n    },\r\n\r\n    toggleGroup (index) {\r\n      this.openGroupIndex = index === this.openGroupIndex ? -1 : index\r\n    },\r\n\r\n    isActive (page) {\r\n      return isActive(this.$route, page.path)\r\n    }\r\n  }\r\n}\r\n\r\nfunction resolveOpenGroupIndex (route, items) {\r\n  for (let i = 0; i < items.length; i++) {\r\n    const item = items[i]\r\n    if (item.type === 'group' && item.children.some(c => isActive(route, c.path))) {\r\n      return i\r\n    }\r\n  }\r\n  return -1\r\n}\r\n",{"version":3,"sources":["Sidebar.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAsBA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Sidebar.vue","sourceRoot":"lib/default-theme","sourcesContent":["<template>\r\n  <div class=\"sidebar\">\r\n    <NavLinks/>\r\n    <slot name=\"top\"/>\r\n    <ul class=\"sidebar-links\" v-if=\"items.length\">\r\n      <li v-for=\"(item, i) in items\" :key=\"i\">\r\n        <SidebarGroup\r\n          v-if=\"item.type === 'group'\"\r\n          :item=\"item\"\r\n          :first=\"i === 0\"\r\n          :open=\"i === openGroupIndex\"\r\n          :collapsable=\"item.collapsable || item.collapsible\"\r\n          @toggle=\"toggleGroup(i)\"\r\n        />\r\n        <SidebarLink v-else :item=\"item\"/>\r\n      </li>\r\n    </ul>\r\n    <slot name=\"bottom\"/>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport SidebarGroup from './SidebarGroup.vue'\r\nimport SidebarLink from './SidebarLink.vue'\r\nimport NavLinks from './NavLinks.vue'\r\nimport { isActive } from './util'\r\n\r\nexport default {\r\n  components: { SidebarGroup, SidebarLink, NavLinks },\r\n\r\n  props: ['items'],\r\n\r\n  data () {\r\n    return {\r\n      openGroupIndex: 0\r\n    }\r\n  },\r\n\r\n  created () {\r\n    this.refreshIndex()\r\n  },\r\n\r\n  watch: {\r\n    '$route' () {\r\n      this.refreshIndex()\r\n    }\r\n  },\r\n\r\n  methods: {\r\n    refreshIndex () {\r\n      const index = resolveOpenGroupIndex(\r\n        this.$route,\r\n        this.items\r\n      )\r\n      if (index > -1) {\r\n        this.openGroupIndex = index\r\n      }\r\n    },\r\n\r\n    toggleGroup (index) {\r\n      this.openGroupIndex = index === this.openGroupIndex ? -1 : index\r\n    },\r\n\r\n    isActive (page) {\r\n      return isActive(this.$route, page.path)\r\n    }\r\n  }\r\n}\r\n\r\nfunction resolveOpenGroupIndex (route, items) {\r\n  for (let i = 0; i < items.length; i++) {\r\n    const item = items[i]\r\n    if (item.type === 'group' && item.children.some(c => isActive(route, c.path))) {\r\n      return i\r\n    }\r\n  }\r\n  return -1\r\n}\r\n</script>\r\n\r\n<style lang=\"stylus\">\r\n@import './styles/config.styl'\r\n\r\n.sidebar\r\n  ul\r\n    padding 0\r\n    margin 0\r\n    list-style-type none\r\n  a\r\n    display inline-block\r\n  .nav-links\r\n    display none\r\n    border-bottom 1px solid $borderColor\r\n    padding 0.5rem 0 0.75rem 0\r\n    a\r\n      font-weight 600\r\n    .nav-item, .repo-link\r\n      display block\r\n      line-height 1.25rem\r\n      font-size 1.1em\r\n      padding 0.5rem 0 0.5rem 1.5rem\r\n  .sidebar-links\r\n    padding 1.5rem 0\r\n\r\n@media (max-width: $MQMobile)\r\n  .sidebar\r\n    .nav-links\r\n      display block\r\n      .dropdown-wrapper .nav-dropdown .dropdown-item a.router-link-active::after\r\n        top calc(1rem - 2px)\r\n    .sidebar-links\r\n      padding 1rem 0\r\n</style>\r\n"]}]}