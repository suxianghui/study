{"remainingRequest":"D:\\1\\实训一\\study\\study\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!D:\\1\\实训一\\study\\study\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!D:\\1\\实训一\\study\\study\\node_modules\\vue-loader\\lib\\index.js??ref--1-1!D:\\1\\实训一\\study\\study\\lib\\webpack\\markdownLoader.js??ref--1-2!D:\\1\\实训一\\study\\study\\src\\zh\\guide\\deploy.md?vue&type=template&id=2c67fd6a&","dependencies":[{"path":"D:\\1\\实训一\\study\\study\\src\\zh\\guide\\deploy.md","mtime":1557200317062},{"path":"D:\\1\\实训一\\study\\study\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\1\\实训一\\study\\study\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"D:\\1\\实训一\\study\\study\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\1\\实训一\\study\\study\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\1\\实训一\\study\\study\\lib\\webpack\\markdownLoader.js","mtime":1557200316988}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", { staticClass: \"content\" }, [\n    _vm._m(0),\n    _vm._v(\" \"),\n    _c(\"p\", [_vm._v(\"下述的指南基于以下条件：\")]),\n    _vm._v(\" \"),\n    _vm._m(1),\n    _vm._v(\" \"),\n    _vm._m(2),\n    _vm._m(3),\n    _vm._v(\" \"),\n    _vm._m(4),\n    _vm._v(\" \"),\n    _vm._m(5),\n    _vm._m(6),\n    _vm._v(\" \"),\n    _vm._m(7),\n    _vm._v(\" \"),\n    _vm._m(8),\n    _vm._v(\" \"),\n    _vm._m(9),\n    _vm._m(10),\n    _vm._v(\" \"),\n    _vm._m(11),\n    _vm._v(\" \"),\n    _vm._m(12),\n    _vm._v(\" \"),\n    _vm._m(13),\n    _vm._v(\" \"),\n    _vm._m(14),\n    _vm._v(\" \"),\n    _c(\"ol\", [\n      _c(\"li\", [\n        _c(\"p\", [\n          _vm._v(\"请确保你已经安装了 \"),\n          _c(\n            \"a\",\n            {\n              attrs: {\n                href: \"https://www.npmjs.com/package/firebase-tools\",\n                target: \"_blank\",\n                rel: \"noopener noreferrer\"\n              }\n            },\n            [_vm._v(\"firebase-tools\"), _c(\"OutboundLink\")],\n            1\n          ),\n          _vm._v(\"。\")\n        ])\n      ]),\n      _vm._v(\" \"),\n      _vm._m(15)\n    ]),\n    _vm._v(\" \"),\n    _vm._m(16),\n    _vm._v(\" \"),\n    _vm._m(17),\n    _vm._m(18),\n    _vm._v(\" \"),\n    _vm._m(19),\n    _vm._m(20),\n    _vm._v(\" \"),\n    _vm._m(21),\n    _vm._v(\" \"),\n    _c(\"ol\", [\n      _c(\"li\", [\n        _c(\"p\", [\n          _vm._v(\"首先，假设你已经安装了 \"),\n          _c(\n            \"a\",\n            {\n              attrs: {\n                href: \"https://www.npmjs.com/package/surge\",\n                target: \"_blank\",\n                rel: \"noopener noreferrer\"\n              }\n            },\n            [_vm._v(\"surge\"), _c(\"OutboundLink\")],\n            1\n          ),\n          _vm._v(\"；\")\n        ])\n      ]),\n      _vm._v(\" \"),\n      _vm._m(22),\n      _vm._v(\" \"),\n      _vm._m(23)\n    ]),\n    _vm._v(\" \"),\n    _c(\"p\", [\n      _vm._v(\"你也可以通过 \"),\n      _c(\"code\", [_vm._v(\"surge study/.vuepress/dist yourdomain.com\")]),\n      _vm._v(\" 来部署到 \"),\n      _c(\n        \"a\",\n        {\n          attrs: {\n            href: \"http://surge.sh/help/adding-a-custom-domain\",\n            target: \"_blank\",\n            rel: \"noopener noreferrer\"\n          }\n        },\n        [_vm._v(\"自定义域名\"), _c(\"OutboundLink\")],\n        1\n      ),\n      _vm._v(\"。\")\n    ]),\n    _vm._v(\" \"),\n    _vm._m(24),\n    _vm._v(\" \"),\n    _c(\"ol\", [\n      _c(\"li\", [\n        _c(\"p\", [\n          _vm._v(\"首先安装 \"),\n          _c(\n            \"a\",\n            {\n              attrs: {\n                href: \"https://devcenter.heroku.com/articles/heroku-cli\",\n                target: \"_blank\",\n                rel: \"noopener noreferrer\"\n              }\n            },\n            [_vm._v(\"Heroku CLI\"), _c(\"OutboundLink\")],\n            1\n          ),\n          _vm._v(\"；\")\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"li\", [\n        _c(\"p\", [\n          _c(\n            \"a\",\n            {\n              attrs: {\n                href: \"https://signup.heroku.com\",\n                target: \"_blank\",\n                rel: \"noopener noreferrer\"\n              }\n            },\n            [_vm._v(\"在这里\"), _c(\"OutboundLink\")],\n            1\n          ),\n          _vm._v(\" 注册一个 Heroku 账号；\")\n        ])\n      ]),\n      _vm._v(\" \"),\n      _vm._m(25)\n    ]),\n    _vm._v(\" \"),\n    _vm._m(26),\n    _vm._m(27),\n    _vm._v(\" \"),\n    _vm._m(28),\n    _vm._v(\" \"),\n    _vm._m(29),\n    _c(\"p\", [\n      _vm._v(\"这里是你项目的配置，请参考 \"),\n      _c(\n        \"a\",\n        {\n          attrs: {\n            href: \"https://github.com/heroku/heroku-buildpack-static\",\n            target: \"_blank\",\n            rel: \"noopener noreferrer\"\n          }\n        },\n        [_vm._v(\"heroku-buildpack-static\"), _c(\"OutboundLink\")],\n        1\n      ),\n      _vm._v(\" 了解更多。\")\n    ]),\n    _vm._v(\" \"),\n    _vm._m(30),\n    _vm._v(\" \"),\n    _vm._m(31),\n    _vm._m(32),\n    _vm._v(\" \"),\n    _vm._m(33)\n  ])\n}\nvar staticRenderFns = [\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h1\", { attrs: { id: \"部署\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#部署\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" 部署\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"ul\", [\n      _c(\"li\", [\n        _vm._v(\"文档放置在项目的 \"),\n        _c(\"code\", [_vm._v(\"study\")]),\n        _vm._v(\" 目录中；\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"li\", [_vm._v(\"使用的是默认的构建输出位置；\")]),\n      _vm._v(\" \"),\n      _c(\"li\", [\n        _vm._v(\n          \"VuePress 以本地依赖的形式被安装到你的项目中，并且配置了如下的 npm scripts:\"\n        )\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-json extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-json\" } }, [\n        _c(\"code\", [\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"{\")\n          ]),\n          _vm._v(\"\\n  \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token property\" } }, [\n            _vm._v('\"scripts\"')\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n            _vm._v(\":\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"{\")\n          ]),\n          _vm._v(\"\\n    \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token property\" } }, [\n            _vm._v('\"study:build\"')\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n            _vm._v(\":\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n            _vm._v('\"vuepress build study\"')\n          ]),\n          _vm._v(\"\\n  \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"}\")\n          ]),\n          _vm._v(\"\\n\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"}\")\n          ]),\n          _vm._v(\"\\n\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h2\", { attrs: { id: \"github-pages\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#github-pages\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" GitHub Pages\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"ol\", [\n      _c(\"li\", [\n        _c(\"p\", [\n          _vm._v(\"在 \"),\n          _c(\"code\", [_vm._v(\"study/.vuepress/config.js\")]),\n          _vm._v(\" 中设置正确的 \"),\n          _c(\"code\", [_vm._v(\"base\")]),\n          _vm._v(\"。\")\n        ]),\n        _vm._v(\" \"),\n        _c(\"p\", [\n          _vm._v(\"如果你打算发布到 \"),\n          _c(\"code\", [_vm._v(\"https://<USERNAME>.github.io/\")]),\n          _vm._v(\"，则可以省略这一步，因为 \"),\n          _c(\"code\", [_vm._v(\"base\")]),\n          _vm._v(\" 默认即是 \"),\n          _c(\"code\", [_vm._v('\"/\"')]),\n          _vm._v(\"。\")\n        ]),\n        _vm._v(\" \"),\n        _c(\"p\", [\n          _vm._v(\"如果你打算发布到 \"),\n          _c(\"code\", [_vm._v(\"https://<USERNAME>.github.io/<REPO>/\")]),\n          _vm._v(\"（也就是说你的仓库在 \"),\n          _c(\"code\", [_vm._v(\"https://github.com/<USERNAME>/<REPO>\")]),\n          _vm._v(\"），则将 \"),\n          _c(\"code\", [_vm._v(\"base\")]),\n          _vm._v(\" 设置为 \"),\n          _c(\"code\", [_vm._v('\"/<REPO>/\"')]),\n          _vm._v(\"。\")\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"li\", [\n        _c(\"p\", [\n          _vm._v(\"在你的项目中，创建一个如下的 \"),\n          _c(\"code\", [_vm._v(\"deploy.sh\")]),\n          _vm._v(\" 文件（请自行判断去掉高亮行的注释）:\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-bash extra-class\" }, [\n      _c(\"div\", { staticClass: \"highlight-lines\" }, [\n        _c(\"br\"),\n        _c(\"br\"),\n        _c(\"br\"),\n        _c(\"br\"),\n        _c(\"br\"),\n        _c(\"br\"),\n        _c(\"br\"),\n        _c(\"br\"),\n        _c(\"br\"),\n        _c(\"br\"),\n        _c(\"br\"),\n        _c(\"br\"),\n        _c(\"div\", { staticClass: \"highlighted\" }, [_vm._v(\" \")]),\n        _c(\"br\"),\n        _c(\"br\"),\n        _c(\"br\"),\n        _c(\"br\"),\n        _c(\"br\"),\n        _c(\"br\"),\n        _c(\"div\", { staticClass: \"highlighted\" }, [_vm._v(\" \")]),\n        _c(\"br\"),\n        _c(\"br\"),\n        _c(\"div\", { staticClass: \"highlighted\" }, [_vm._v(\" \")]),\n        _c(\"br\"),\n        _c(\"br\"),\n        _c(\"br\")\n      ]),\n      _c(\"pre\", { pre: true, attrs: { class: \"language-bash\" } }, [\n        _c(\"code\", [\n          _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n            _vm._v(\"#!/usr/bin/env sh\")\n          ]),\n          _vm._v(\"\\n\\n\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n            _vm._v(\"# 确保脚本抛出遇到的错误\")\n          ]),\n          _vm._v(\"\\n\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n            _vm._v(\"set\")\n          ]),\n          _vm._v(\" -e\\n\\n\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n            _vm._v(\"# 生成静态文件\")\n          ]),\n          _vm._v(\"\\n\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n            _vm._v(\"npm\")\n          ]),\n          _vm._v(\" run study:build\\n\\n\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n            _vm._v(\"# 进入生成的文件夹\")\n          ]),\n          _vm._v(\"\\n\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n            _vm._v(\"cd\")\n          ]),\n          _vm._v(\" study/.vuepress/dist\\n\\n\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n            _vm._v(\"# 如果是发布到自定义域名\")\n          ]),\n          _vm._v(\"\\n\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n            _vm._v(\"# echo 'www.example.com' > CNAME\")\n          ]),\n          _vm._v(\"\\n\\n\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n            _vm._v(\"git\")\n          ]),\n          _vm._v(\" init\\n\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n            _vm._v(\"git\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n            _vm._v(\"add\")\n          ]),\n          _vm._v(\" -A\\n\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n            _vm._v(\"git\")\n          ]),\n          _vm._v(\" commit -m \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n            _vm._v(\"'deploy'\")\n          ]),\n          _vm._v(\"\\n\\n\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n            _vm._v(\"# 如果发布到 https://<USERNAME>.github.io\")\n          ]),\n          _vm._v(\"\\n\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n            _vm._v(\n              \"# git push -f git@github.com:<USERNAME>/<USERNAME>.github.io.git master\"\n            )\n          ]),\n          _vm._v(\"\\n\\n\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n            _vm._v(\"# 如果发布到 https://<USERNAME>.github.io/<REPO>\")\n          ]),\n          _vm._v(\"\\n\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n            _vm._v(\n              \"# git push -f git@github.com:<USERNAME>/<REPO>.git master:gh-pages\"\n            )\n          ]),\n          _vm._v(\"\\n\\n\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n            _vm._v(\"cd\")\n          ]),\n          _vm._v(\" -\\n\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"tip custom-block\" }, [\n      _c(\"p\", { staticClass: \"custom-block-title\" }, [_vm._v(\"TIP\")]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _vm._v(\n          \"你可以在你的持续集成的设置中，设置在每次 push 代码时自动运行上述脚本。\"\n        )\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h2\", { attrs: { id: \"gitlab-pages-and-gitlab-ci\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#gitlab-pages-and-gitlab-ci\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" GitLab Pages and GitLab CI\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"ol\", [\n      _c(\"li\", [\n        _c(\"p\", [\n          _vm._v(\"在 \"),\n          _c(\"code\", [_vm._v(\"study/.vuepress/config.js\")]),\n          _vm._v(\" 中设置正确的 \"),\n          _c(\"code\", [_vm._v(\"base\")]),\n          _vm._v(\"。\")\n        ]),\n        _vm._v(\" \"),\n        _c(\"p\", [\n          _vm._v(\"如果你打算发布到 \"),\n          _c(\"code\", [_vm._v(\"https://<USERNAME or GROUP>.gitlab.io/\")]),\n          _vm._v(\"，则可以省略这一步，因为 \"),\n          _c(\"code\", [_vm._v(\"base\")]),\n          _vm._v(\" 默认即是 \"),\n          _c(\"code\", [_vm._v('\"/\"')]),\n          _vm._v(\"。\")\n        ]),\n        _vm._v(\" \"),\n        _c(\"p\", [\n          _vm._v(\"如果你打算发布到 \"),\n          _c(\"code\", [_vm._v(\"https://<USERNAME or GROUP>.gitlab.io/<REPO>/\")]),\n          _vm._v(\"（也就是说你的仓库在 \"),\n          _c(\"code\", [_vm._v(\"https://gitlab.com/<USERNAME>/<REPO>\")]),\n          _vm._v(\"），则将 \"),\n          _c(\"code\", [_vm._v(\"base\")]),\n          _vm._v(\" 设置为 \"),\n          _c(\"code\", [_vm._v('\"/<REPO>/\"')]),\n          _vm._v(\"。\")\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"li\", [\n        _c(\"p\", [\n          _vm._v(\"在 \"),\n          _c(\"code\", [_vm._v(\".vuepress/config.js\")]),\n          _vm._v(\" 中将 \"),\n          _c(\"code\", [_vm._v(\"dest\")]),\n          _vm._v(\" 设置为 \"),\n          _c(\"code\", [_vm._v(\"public\")]),\n          _vm._v(\"。\")\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"li\", [\n        _c(\"p\", [\n          _vm._v(\"在你项目的根目录下创建一个名为 \"),\n          _c(\"code\", [_vm._v(\".gitlab-ci.yml\")]),\n          _vm._v(\" 的文件，无论何时你提交了更改，它都会帮助你自动构建和部署：\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-yaml extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-yaml\" } }, [\n        _c(\"code\", [\n          _c(\"span\", { pre: true, attrs: { class: \"token key atrule\" } }, [\n            _vm._v(\"image\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\":\")\n          ]),\n          _vm._v(\" node\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\":\")\n          ]),\n          _vm._v(\"9.11.1\\n\\n\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token key atrule\" } }, [\n            _vm._v(\"pages\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\":\")\n          ]),\n          _vm._v(\"\\n \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token key atrule\" } }, [\n            _vm._v(\"cache\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\":\")\n          ]),\n          _vm._v(\"\\n   \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token key atrule\" } }, [\n            _vm._v(\"paths\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\":\")\n          ]),\n          _vm._v(\"\\n   \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"-\")\n          ]),\n          _vm._v(\" node_modules/\\n\\n \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token key atrule\" } }, [\n            _vm._v(\"script\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\":\")\n          ]),\n          _vm._v(\"\\n \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"-\")\n          ]),\n          _vm._v(\" npm install\\n \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"-\")\n          ]),\n          _vm._v(\" npm run study\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\":\")\n          ]),\n          _vm._v(\"build\\n \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token key atrule\" } }, [\n            _vm._v(\"artifacts\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\":\")\n          ]),\n          _vm._v(\"\\n   \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token key atrule\" } }, [\n            _vm._v(\"paths\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\":\")\n          ]),\n          _vm._v(\"\\n   \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"-\")\n          ]),\n          _vm._v(\" public\\n \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token key atrule\" } }, [\n            _vm._v(\"only\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\":\")\n          ]),\n          _vm._v(\"\\n \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"-\")\n          ]),\n          _vm._v(\" master\\n\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h2\", { attrs: { id: \"netlify\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#netlify\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" Netlify\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"ol\", [\n      _c(\"li\", [\n        _vm._v(\"在 Netlify 中, 创建一个新的 Github 项目，使用以下设置：\")\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"ul\", [\n      _c(\"li\", [\n        _c(\"strong\", [_vm._v(\"Build Command:\")]),\n        _vm._v(\" \"),\n        _c(\"code\", [_vm._v(\"npm run build:study\")]),\n        _vm._v(\" 或者 \"),\n        _c(\"code\", [_vm._v(\"yarn build:study\")])\n      ]),\n      _vm._v(\" \"),\n      _c(\"li\", [\n        _c(\"strong\", [_vm._v(\"Publish directory:\")]),\n        _vm._v(\" \"),\n        _c(\"code\", [_vm._v(\"study/.vuepress/dist\")])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"ol\", { attrs: { start: \"2\" } }, [\n      _c(\"li\", [_vm._v(\"点击 deploy 按钮！\")])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h2\", { attrs: { id: \"google-firebase\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#google-firebase\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" Google Firebase\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"li\", [\n      _c(\"p\", [\n        _vm._v(\"在你项目的根目录下创建 \"),\n        _c(\"code\", [_vm._v(\"firebase.json\")]),\n        _vm._v(\" 和 \"),\n        _c(\"code\", [_vm._v(\".firebaserc\")]),\n        _vm._v(\"，并包含以下内容：\")\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [_c(\"code\", [_vm._v(\"firebase.json\")]), _vm._v(\":\")])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-json extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-json\" } }, [\n        _c(\"code\", [\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"{\")\n          ]),\n          _vm._v(\"\\n \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token property\" } }, [\n            _vm._v('\"hosting\"')\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n            _vm._v(\":\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"{\")\n          ]),\n          _vm._v(\"\\n   \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token property\" } }, [\n            _vm._v('\"public\"')\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n            _vm._v(\":\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n            _vm._v('\"./study/.vuepress/dist\"')\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\",\")\n          ]),\n          _vm._v(\"\\n   \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token property\" } }, [\n            _vm._v('\"ignore\"')\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n            _vm._v(\":\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"[\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"]\")\n          ]),\n          _vm._v(\"\\n \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"}\")\n          ]),\n          _vm._v(\"\\n\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"}\")\n          ]),\n          _vm._v(\"\\n\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [_c(\"code\", [_vm._v(\".firebaserc\")]), _vm._v(\":\")])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-js extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-js\" } }, [\n        _c(\"code\", [\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"{\")\n          ]),\n          _vm._v(\"\\n \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n            _vm._v('\"projects\"')\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\":\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"{\")\n          ]),\n          _vm._v(\"\\n   \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n            _vm._v('\"default\"')\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\":\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n            _vm._v('\"<YOUR_FIREBASE_ID>\"')\n          ]),\n          _vm._v(\"\\n \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"}\")\n          ]),\n          _vm._v(\"\\n\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"}\")\n          ]),\n          _vm._v(\"\\n\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"ol\", { attrs: { start: \"3\" } }, [\n      _c(\"li\", [\n        _vm._v(\"在执行了 \"),\n        _c(\"code\", [_vm._v(\"yarn study:build\")]),\n        _vm._v(\" 或 \"),\n        _c(\"code\", [_vm._v(\"npm run study:build\")]),\n        _vm._v(\" 后, 使用 \"),\n        _c(\"code\", [_vm._v(\"firebase deploy\")]),\n        _vm._v(\" 指令来部署。\")\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h2\", { attrs: { id: \"surge\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#surge\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" Surge\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"li\", [\n      _c(\"p\", [\n        _vm._v(\"运行 \"),\n        _c(\"code\", [_vm._v(\"yarn study:build\")]),\n        _vm._v(\" 或者 \"),\n        _c(\"code\", [_vm._v(\"npm run study:build\")]),\n        _vm._v(\"；\")\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"li\", [\n      _c(\"p\", [\n        _vm._v(\"想要使用 surge 来部署，你可以运行： \"),\n        _c(\"code\", [_vm._v(\"surge study/.vuepress/dist\")]),\n        _vm._v(\"；\")\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h2\", { attrs: { id: \"heroku\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#heroku\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" Heroku\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"li\", [\n      _c(\"p\", [\n        _vm._v(\"运行 \"),\n        _c(\"code\", [_vm._v(\"heroku login\")]),\n        _vm._v(\" 并填写你的 Heroku 证书：\")\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-bash extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-bash\" } }, [\n        _c(\"code\", [_vm._v(\"heroku login\\n\")])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"ol\", { attrs: { start: \"4\" } }, [\n      _c(\"li\", [\n        _vm._v(\"在你的项目根目录中，创建一个名为 \"),\n        _c(\"code\", [_vm._v(\"static.json\")]),\n        _vm._v(\" 的文件，并包含下述内容：\")\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [_c(\"code\", [_vm._v(\"static.json\")]), _vm._v(\":\")])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-json extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-json\" } }, [\n        _c(\"code\", [\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"{\")\n          ]),\n          _vm._v(\"\\n\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token property\" } }, [\n            _vm._v('\"root\"')\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n            _vm._v(\":\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n            _vm._v('\"./study/.vuepress/dist\"')\n          ]),\n          _vm._v(\"\\n\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"}\")\n          ]),\n          _vm._v(\"\\n\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"ol\", { attrs: { start: \"5\" } }, [\n      _c(\"li\", [_vm._v(\"配置 Heroku 的 git 远程仓库：\")])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-bash extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-bash\" } }, [\n        _c(\"code\", [\n          _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n            _vm._v(\"# 版本变化\")\n          ]),\n          _vm._v(\"\\n\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n            _vm._v(\"git\")\n          ]),\n          _vm._v(\" init\\n\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n            _vm._v(\"git\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n            _vm._v(\"add\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n            _vm._v(\".\")\n          ]),\n          _vm._v(\"\\n\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n            _vm._v(\"git\")\n          ]),\n          _vm._v(\" commit -m \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n            _vm._v('\"My site ready for deployment.\"')\n          ]),\n          _vm._v(\"\\n\\n\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n            _vm._v(\"# 以指定的名称创建一个新的 heroku 应用\")\n          ]),\n          _vm._v(\"\\nheroku apps:create example\\n\\n\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n            _vm._v(\"# 为静态网站设置构建包\")\n          ]),\n          _vm._v(\n            \"\\nheroku buildpacks:set https://github.com/heroku/heroku-buildpack-static.git\\n\"\n          )\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"ol\", { attrs: { start: \"6\" } }, [\n      _c(\"li\", [_vm._v(\"部署你的网站：\")])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-bash extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-bash\" } }, [\n        _c(\"code\", [\n          _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n            _vm._v(\"# 发布网站\")\n          ]),\n          _vm._v(\"\\n\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n            _vm._v(\"git\")\n          ]),\n          _vm._v(\" push heroku master\\n\\n\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n            _vm._v(\"# 打开浏览器查看 Helku CI 的 dashboard\")\n          ]),\n          _vm._v(\"\\nheroku \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n            _vm._v(\"open\")\n          ]),\n          _vm._v(\"\\n\")\n        ])\n      ])\n    ])\n  }\n]\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}