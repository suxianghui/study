{"remainingRequest":"D:\\1\\实训一\\study\\study\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!D:\\1\\实训一\\study\\study\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!D:\\1\\实训一\\study\\study\\node_modules\\vue-loader\\lib\\index.js??ref--1-1!D:\\1\\实训一\\study\\study\\lib\\webpack\\markdownLoader.js??ref--1-2!D:\\1\\实训一\\study\\study\\src\\zh\\vue\\vuex.md?vue&type=template&id=713b8e6a&","dependencies":[{"path":"D:\\1\\实训一\\study\\study\\src\\zh\\vue\\vuex.md","mtime":1557200317094},{"path":"D:\\1\\实训一\\study\\study\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\1\\实训一\\study\\study\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"D:\\1\\实训一\\study\\study\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\1\\实训一\\study\\study\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\1\\实训一\\study\\study\\lib\\webpack\\markdownLoader.js","mtime":1557200316988}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _vm._m(0)\n}\nvar staticRenderFns = [\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"content\" }, [\n      _c(\"h1\", { attrs: { id: \"vuex\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: { href: \"#vuex\", \"aria-hidden\": \"true\" }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" Vuex\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"h5\", { attrs: { id: \"_1、什么是vuex？\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: { href: \"#_1、什么是vuex？\", \"aria-hidden\": \"true\" }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" 1、什么是vuex？\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"ul\", [\n        _c(\"li\", [\n          _vm._v(\n            \"每一个 Vuex 应用的核心就是 store（仓库）。“store”基本上就是一个容器，它包含着你的应用中大部分的状态 (state)。\"\n          )\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"h5\", { attrs: { id: \"_2、初始化vuex\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: { href: \"#_2、初始化vuex\", \"aria-hidden\": \"true\" }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" 2、初始化vuex\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [_vm._v(\"（1）下载vuex\")]),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"language- extra-class\" }, [\n        _c(\"pre\", { pre: true, attrs: { class: \"language-text\" } }, [\n          _c(\"code\", [_vm._v(\"cnpm i vuex -D\\n\")])\n        ])\n      ]),\n      _c(\"p\", [_vm._v(\"（2）建一个store文件夹（store/index.js）\")]),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"language- extra-class\" }, [\n        _c(\"pre\", { pre: true, attrs: { class: \"language-text\" } }, [\n          _c(\"code\", [\n            _vm._v(\n              \"// 初始化vuex\\n\\nimport Vue from 'vue';\\nimport Vuex from 'vuex';\\n\\n// 引入module\\nimport app from './module/app';\\n\\nVue.use(Vuex);\\n\\n// 生成一个vuex实例\\nexport default new Vuex.Store({\\n  modules: {\\n    app\\n  }\\n})\\n\"\n            )\n          ])\n        ])\n      ]),\n      _c(\"p\", [\n        _vm._v(\n          \"（3）在store文件夹里建一个module文件夹用来存放数据（store/module/app.js）\"\n        )\n      ]),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"language- extra-class\" }, [\n        _c(\"pre\", { pre: true, attrs: { class: \"language-text\" } }, [\n          _c(\"code\", [\n            _vm._v(\n              \"// 存放数据的地方\\nconst state = {\\n  num: 100\\n}\\n\\n// 派生数据（很少用）\\nconst getters = {\\n    doubleNum(state){\\n        return state.num*2\\n    }\\n}\\n\\n// 同步改变\\nconst mutations = {\\n  changeNum(state, payload){\\n    state.num = payload;\\n  }\\n}\\n\\n// 异步改变\\nconst actions = {\\n    <!--changeNumAsync(context, payload){-->\\n        \\n    <!--}-->\\n    changeNumAsync({commit}, payload){\\n        commit('changeNum', payload)\\n    }\\n}\\n\\nexport default {\\n  // 命名空间\\n  namespaced: true, // 配合module使用\\n  state,\\n  actions,\\n  getters,\\n  mutations\\n}\\n\"\n            )\n          ])\n        ])\n      ]),\n      _c(\"p\", [_vm._v(\"（4）在main.js里面引入store\")]),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"language- extra-class\" }, [\n        _c(\"pre\", { pre: true, attrs: { class: \"language-text\" } }, [\n          _c(\"code\", [\n            _vm._v(\n              \"import Vue from 'vue'\\nimport App from './App.vue'\\n\\nimport store from './store'\\n\\nnew Vue({\\n  el: '#app',\\n  store,\\n  render: h => h(App)\\n})\\n\\n\"\n            )\n          ])\n        ])\n      ]),\n      _c(\"p\", [_vm._v(\"（5）在页面中使用\")]),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"language- extra-class\" }, [\n        _c(\"pre\", { pre: true, attrs: { class: \"language-text\" } }, [\n          _c(\"code\", [\n            _vm._v(\n              \"<template>\\n  <div>\\n    <button @click=\\\"changeNum('+')\\\">+</button>\\n    <span>{{num}}</span>\\n    <button @click=\\\"changeNum('-')\\\">-</button>\\n  </div>\\n</template>\\n<script>\\n  export default {\\n    name: 'app',\\n    computed: {\\n      num() {\\n        return this.$store.state.app.num\\n      }\\n    },\\n    methods: {\\n      changeNum(type) {\\n        if (type == '+') {\\n          // this.$store.commit('changeNum', this.num+1)\\n          this.$store.dispatch('changeNumAsync', this.num+1)\\n        } else {\\n          this.$store.commit('changeNum', this.num-1)\\n        }\\n      }\\n    },\\n    mounted(){\\n      console.log(this.$store)\\n    }\\n  }\\n</script>\\n\\n\"\n            )\n          ])\n        ])\n      ])\n    ])\n  }\n]\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}