{"remainingRequest":"D:\\1\\实训一\\study\\study\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!D:\\1\\实训一\\study\\study\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!D:\\1\\实训一\\study\\study\\node_modules\\vue-loader\\lib\\index.js??ref--1-1!D:\\1\\实训一\\study\\study\\lib\\webpack\\markdownLoader.js??ref--1-2!D:\\1\\实训一\\study\\study\\src\\zh\\vue\\Es6.md?vue&type=template&id=1c30efb4&","dependencies":[{"path":"D:\\1\\实训一\\study\\study\\src\\zh\\vue\\Es6.md","mtime":1557200317087},{"path":"D:\\1\\实训一\\study\\study\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\1\\实训一\\study\\study\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"D:\\1\\实训一\\study\\study\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\1\\实训一\\study\\study\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\1\\实训一\\study\\study\\lib\\webpack\\markdownLoader.js","mtime":1557200316988}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _vm._m(0)\n}\nvar staticRenderFns = [\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"content\" }, [\n      _c(\"h1\", { attrs: { id: \"es6\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: { href: \"#es6\", \"aria-hidden\": \"true\" }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" ES6\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"h4\", { attrs: { id: \"_1、声明变量\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: { href: \"#_1、声明变量\", \"aria-hidden\": \"true\" }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" 1、声明变量\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"language- extra-class\" }, [\n        _c(\"pre\", { pre: true, attrs: { class: \"language-text\" } }, [\n          _c(\"code\", [\n            _vm._v(\n              \"// es5\\n声明变量 var --- variable\\n用大写的形式去声明常量:var PI = 3.14159255358;\\n常量的值允许被修改\\n\\n// es6\\n// 通过let 关键字代替 var 来声明变量，用发与var几乎一致\\n当let/const遇到{}会形成这个变量的块级作用域\\n声明变量 let --- 叫命令或关键字\\n声明常量 const PI = 3.1415926;\\n报错会阻断下面的代码执行\\n报错:Assignment to constant variale \\n常量的值不允许被修改\\n// 变量、常量不得重复定义(相同作用域)\\n报错:Identifier 'num' has already been declared\\n\"\n            )\n          ])\n        ])\n      ]),\n      _c(\"h4\", { attrs: { id: \"_2、变量提升\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: { href: \"#_2、变量提升\", \"aria-hidden\": \"true\" }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" 2、变量提升\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"ul\", [_c(\"li\", [_vm._v(\"es5\")])]),\n      _vm._v(\" \"),\n      _c(\"blockquote\"),\n      _vm._v(\" \"),\n      _c(\"pre\", [\n        _c(\"code\", [\n          _vm._v(\n            \"var 存在变量提升，只要在声明之前调用，就会有变量提升，并且值为undefined\\n\"\n          )\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"ul\", [_c(\"li\", [_vm._v(\"es6\")])]),\n      _vm._v(\" \"),\n      _c(\"blockquote\", [_c(\"p\", [_vm._v(\"let 语句声明的参数没有变量提升\")])]),\n      _vm._v(\" \"),\n      _c(\"blockquote\", [\n        _c(\"p\", [\n          _vm._v(\"暂时性死区的概念：在变量声明之前调用，都是该变量的暂时性死区\")\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"h4\", { attrs: { id: \"_3、解构赋值\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: { href: \"#_3、解构赋值\", \"aria-hidden\": \"true\" }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" 3、解构赋值\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"ul\", [_c(\"li\", [_c(\"strong\", [_vm._v(\"三种状态\")])])]),\n      _vm._v(\" \"),\n      _c(\"ol\", [\n        _c(\"li\", [_vm._v(\"模式不匹配\")]),\n        _vm._v(\" \"),\n        _c(\"li\", [_vm._v(\"解构不成功：声明了变量，没有赋值（undefined）\")]),\n        _vm._v(\" \"),\n        _c(\"li\", [_vm._v(\"不完全解构\")])\n      ]),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"language- extra-class\" }, [\n        _c(\"pre\", { pre: true, attrs: { class: \"language-text\" } }, [\n          _c(\"code\", [\n            _vm._v(\n              \"ES6允许按照一定模式，从数组和对象中提取值，对变量进行赋值，这被称作解构赋值 \\n// 数组的解构赋值\\n// es5\\nvar a = 1;\\nvar b = 2;\\nvar c = 3;\\n// es6 好处:代码简洁\\n// 数组\\nlet [a,b,c] = [1,2,3];\\nconsole.log(a);\\nconsole.log(b);\\nconsole.log(c);\\n// 对象\\nlet person = {\\n    name: 'zs',\\n    age: 18,\\n    hoppy: ['吃饭', '睡觉', '打豆豆'],\\n    address: '北京八维'\\n}\\nlet { obj: objs, obj: obj1 } = {\\n    obj: person\\n}\\n\\nconsole.log(objs)\\n// 字符串\\n// 会将字符串转换成类似数组的一个对象\\nlet [a,b,c] = 'mmd';\\n// a = m\\n// b = m\\n// c = d\\nlet {length:len} = 'mmd';\\n// len = 3\\n\\n// 数组的解构赋值在函数中应用\\nlet fun = function([name,age]){ // 接收的是形参\\n    console.log(name);\\n    console.log(age);\\n}\\nfun(['zs',18]) // 传递的参数是实参\\n\\n// 对象的解构赋值在函数中应用\\nlet fun = function({name,age}){ // 接收的是形参\\n    console.log(name);\\n    console.log(age);\\n}\\nfun({name:'zs',age:18}) // 传递的参数是实参\\n\\n\\n// 通过数组的解构赋值，返回一个值\\nlet fun = (val) => {\\n    return [val, val + \\\"you aer the best!\\\"];\\n}\\nconsole.log(fun())\\n\\n// 通过对象的解构赋值来取json数据\\nconst data = {\\n    name:'zs',\\n    age:18\\n}\\nlet {name,age} = data;\\nconsole.log(name);\\nconsole.log(age)\\n\\n\"\n            )\n          ])\n        ])\n      ]),\n      _c(\"h4\", { attrs: { id: \"总结：\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: { href: \"#总结：\", \"aria-hidden\": \"true\" }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" 总结：\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"ul\", [\n        _c(\"li\", [\n          _vm._v(\n            \"解构赋值的规则是，只要等号右边的值不是对象或数组，就先将其转为对象\"\n          )\n        ]),\n        _vm._v(\" \"),\n        _c(\"li\", [\n          _vm._v(\n            \"由于undefined和null无法转为对象，所以对他们进行解构赋值，都会报错\"\n          )\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"h4\", { attrs: { id: \"_4、语法提案的批准流程\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: { href: \"#_4、语法提案的批准流程\", \"aria-hidden\": \"true\" }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" 4、语法提案的批准流程\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"ul\", [\n        _c(\"li\", [_vm._v(\"Stade 0 - Strawman (展示阶段)\")]),\n        _vm._v(\" \"),\n        _c(\"li\", [_vm._v(\"Stage 1 - proposal (征求意见阶段)\")]),\n        _vm._v(\" \"),\n        _c(\"li\", [_vm._v(\"Stage 2 - Draft (草案阶段)\")]),\n        _vm._v(\" \"),\n        _c(\"li\", [_vm._v(\"Stage 3 - Candidate (候选人阶段)\")]),\n        _vm._v(\" \"),\n        _c(\"li\", [_vm._v(\"Stage 4 - Finished (定案阶段)\")])\n      ]),\n      _vm._v(\" \"),\n      _c(\"h4\", { attrs: { id: \"_5、字符串扩展\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: { href: \"#_5、字符串扩展\", \"aria-hidden\": \"true\" }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" 5、字符串扩展\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"language- extra-class\" }, [\n        _c(\"pre\", { pre: true, attrs: { class: \"language-text\" } }, [\n          _c(\"code\", [\n            _vm._v(\n              \"1、String.includes(string) 用来判断字符串中是否包含指定参数（string）\\n2、String.startsWith(string) 字符串是否以XX开始\\n3、String.endsWith(string) 字符串是否以XX开始\\nstring.includes(string,start) \\nstring 代表查询参数\\nstart 代表查询起始位置\\nincludes() 具备隐式转换\\n\\nlet str = '123木头人'\\nconsole.log(str.includes('123',3)) // 结果为false\\n\\n\\n// str.repeat() ''\\n// str.repeat(0) ''\\n// str.repeat(1) mmd\\n// str.repeat(2) mmdmmd\\nlet str = 'mmd';\\nlet newString = str.repeat();\\nconsole.log(newString)\\n\\nlet str = 'mmd';\\nconsole.log(str.padStart(5,'*')) // **mmd\\nconsole.log(str.padEnd(5,'*')) // mmd**\\n\"\n            )\n          ])\n        ])\n      ])\n    ])\n  }\n]\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}