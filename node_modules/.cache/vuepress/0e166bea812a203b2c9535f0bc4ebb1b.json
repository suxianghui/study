{"remainingRequest":"D:\\1\\实训一\\study\\study\\node_modules\\vue-loader\\lib\\index.js??ref--1-1!D:\\1\\实训一\\study\\study\\lib\\webpack\\markdownLoader.js??ref--1-2!D:\\1\\实训一\\study\\study\\src\\zh\\guide\\custom-themes.md?vue&type=template&id=3bab28f2&","dependencies":[{"path":"D:\\1\\实训一\\study\\study\\src\\zh\\guide\\custom-themes.md","mtime":1557200317061},{"path":"D:\\1\\实训一\\study\\study\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\1\\实训一\\study\\study\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"D:\\1\\实训一\\study\\study\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\1\\实训一\\study\\study\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\1\\实训一\\study\\study\\lib\\webpack\\markdownLoader.js","mtime":1557200316988}],"contextDependencies":[],"result":["\n<div class=\"content\"><h1 id=\"自定义主题\"><a class=\"header-anchor\" href=\"#自定义主题\" aria-hidden=\"true\">#</a> 自定义主题</h1>\n<div class=\"tip custom-block\"><p class=\"custom-block-title\">提示</p>\n<p>主题组件受到同样的 <router-link to=\"./using-vue.html#浏览器的-api-访问限制\">浏览器的 API 访问限制</router-link>。</p>\n</div>\n<p>VuePress 使用单文件组件来构建自定义主题。想要开发一个自定义主题，首先在你的文档根目录新建一个 <code>.vuepress/theme</code> 文件夹，然后再创建一个 <code>Layout.vue</code> 文件：</p>\n<!--beforebegin--><div class=\"language- extra-class\"><!--afterbegin--><pre v-pre class=\"language-text\"><code>.\n└─ .vuepress\n   └─ theme\n      └─ Layout.vue\n</code></pre>\n<!--beforeend--></div><!--afterend--><p>从这里开始，就和开发一个平时的 Vue 应用一样了，如何组织你的主题完全取决于你。</p>\n<h2 id=\"网站和页面的元数据\"><a class=\"header-anchor\" href=\"#网站和页面的元数据\" aria-hidden=\"true\">#</a> 网站和页面的元数据</h2>\n<p><code>Layout</code> 组件将会对每一个文档目录下的 <code>.md</code> 执行一次，同时，整个网站以及特定页面的元数据将分别暴露为 <code>this.$site</code> 和 <code>this.$page</code> 属性，它们将会被注入到每一个当前应用的组件中。</p>\n<p>这是你现在看到的这个网站的 <code>$site</code> 的值：</p>\n<!--beforebegin--><div class=\"language-json extra-class\"><!--afterbegin--><pre v-pre class=\"language-json\"><code><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"title\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"VuePress\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"description\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Vue 驱动的静态网站生成器\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"base\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"/\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"pages\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">\"lastUpdated\"</span><span class=\"token operator\">:</span> <span class=\"token number\">1524027677000</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"path\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"/\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"title\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"VuePress\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"frontmatter\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    ...\n  <span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<!--beforeend--></div><!--afterend--><p><code>title</code>, <code>description</code> 和 <code>base</code> 会从 <code>.vuepress/config.js</code> 中对应的的字段复制过来，而 <code>pages</code> 是一个包含了每个页面元数据对象的数据，包括它的路径、页面标题（明确地通过 <router-link to=\"./markdown.html#front-matter\">YAML front matter</router-link> 指定，或者通过该页面的第一个标题取到），以及所有源文件中的 <code>YAML front matter</code> 的数据。</p>\n<p>下面的这个对象是你正在看的这个页面的 <code>$page</code> 的值：</p>\n<!--beforebegin--><div class=\"language-json extra-class\"><!--afterbegin--><pre v-pre class=\"language-json\"><code><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"lastUpdated\"</span><span class=\"token operator\">:</span> <span class=\"token number\">1524847549000</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"path\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"/custom-themes.html\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"title\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"自定义主题\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"headers\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token comment\">/* ... */</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"frontmatter\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<!--beforeend--></div><!--afterend--><p>如果用户在 <code>.vuepress/config.js</code> 配置了 <code>themeConfig</code>，你将可以通过 <code>$site.themeConfig</code> 访问到它。如此一来，你可以通过它来对用户开放一些自定义主题的配置 —— 比如指定目录或者页面的顺序，你也可以结合 <code>$site.pages</code> 来动态地构建导航链接。</p>\n<p>最后，别忘了，作为 Vue Router API 的一部分，<code>this.$route</code> 和 <code>this.$router</code> 同样可以使用。</p>\n<div class=\"tip custom-block\"><p class=\"custom-block-title\">提示</p>\n<p><code>lastUpdated</code> 是这个文件最后一次 git 提交的 UNIX 时间戳，更多细节请参考：<router-link to=\"./../default-theme-config/#最后更新时间\">最后更新时间</router-link>。</p>\n</div>\n<h2 id=\"内容摘抄\"><a class=\"header-anchor\" href=\"#内容摘抄\" aria-hidden=\"true\">#</a> 内容摘抄</h2>\n<p>如果一个 markdown 文件中有一个 <code>&lt;!-- more --&gt;</code> 注释，则该注释之前的内容会被抓取并暴露在 <code>$page.excerpt</code> 属性中。如果你在开发一个博客主题，你可以用这个属性来渲染一个带摘抄的文章列表。</p>\n<h2 id=\"获取渲染内容\"><a class=\"header-anchor\" href=\"#获取渲染内容\" aria-hidden=\"true\">#</a> 获取渲染内容</h2>\n<p>当前的 <code>.md</code> 文件渲染的内容，可以作为一个独特的全局组件 <code>&lt;Content/&gt;</code> 来使用，你可能想要它显示在页面中的某个地方。一个最简单的主题，可以是一个唯一的 <code>Layout.vue</code> 组件，并包含以下内容：</p>\n<!--beforebegin--><div class=\"language-html extra-class\"><!--afterbegin--><pre v-pre class=\"language-html\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>template</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>theme-container<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Content</span><span class=\"token punctuation\">/></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>template</span><span class=\"token punctuation\">></span></span>\n</code></pre>\n<!--beforeend--></div><!--afterend--><h2 id=\"应用配置\"><a class=\"header-anchor\" href=\"#应用配置\" aria-hidden=\"true\">#</a> 应用配置</h2>\n<p>自定义主题也可以通过主题根目录下的 <code>enhanceApp.js</code> 文件来对 VuePress 应用进行拓展配置。这个文件应当 <code>export default</code> 一个钩子函数，并接受一个包含了一些应用级别属性的对象作为参数。你可以使用这个钩子来安装一些附加的 Vue 插件、注册全局组件，或者增加额外的路由钩子等：</p>\n<!--beforebegin--><div class=\"language-js extra-class\"><!--afterbegin--><pre v-pre class=\"language-js\"><code><span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  Vue<span class=\"token punctuation\">,</span> <span class=\"token comment\">// VuePress 正在使用的 Vue 构造函数</span>\n  options<span class=\"token punctuation\">,</span> <span class=\"token comment\">// 附加到根实例的一些选项</span>\n  router<span class=\"token punctuation\">,</span> <span class=\"token comment\">// 当前应用的路由实例</span>\n  siteData <span class=\"token comment\">// 站点元数据</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// ...做一些其他的应用级别的优化</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<!--beforeend--></div><!--afterend--><h2 id=\"使用来自-npm-的主题\"><a class=\"header-anchor\" href=\"#使用来自-npm-的主题\" aria-hidden=\"true\">#</a> 使用来自 npm 的主题</h2>\n<p>主题可以以 Vue 单文件组件的格式，并以 <code>vuepress-theme-xxx</code> 的名称发布到 npm 上。</p>\n<p>如果想使用一个来自 npm 的主题，你需要在 <code>.vuepress/config.js</code> 补充 <code>theme</code> 选项：</p>\n<!--beforebegin--><div class=\"language-js extra-class\"><!--afterbegin--><pre v-pre class=\"language-js\"><code>module<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  theme<span class=\"token punctuation\">:</span> <span class=\"token string\">'awesome'</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<!--beforeend--></div><!--afterend--><p>VuePress 将会尝试去加载并使用位于 <code>node_modules/vuepress-theme-awesome/Layout.vue</code> 的主题组件。</p>\n<h2 id=\"修改默认主题\"><a class=\"header-anchor\" href=\"#修改默认主题\" aria-hidden=\"true\">#</a> 修改默认主题</h2>\n<p>你可以使用 <code>vuepress eject [targetDir]</code> 这个命令来将默认主题的源码复制到 <code>.vuepress/theme</code> 文件夹下，从而可以对默认主题进行任意的修改。需要注意的是一旦 eject，即使升级 VuePress 你也无法再获得 VuePress 对默认主题的更新。</p>\n</div>\n",null]}