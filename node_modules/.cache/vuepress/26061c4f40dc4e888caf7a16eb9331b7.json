{"remainingRequest":"D:\\1\\实训一\\study\\study\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!D:\\1\\实训一\\study\\study\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!D:\\1\\实训一\\study\\study\\node_modules\\vue-loader\\lib\\index.js??ref--1-1!D:\\1\\实训一\\study\\study\\lib\\webpack\\markdownLoader.js??ref--1-2!D:\\1\\实训一\\study\\study\\src\\zh\\default-theme-config\\README.md?vue&type=template&id=3965cb3a&","dependencies":[{"path":"D:\\1\\实训一\\study\\study\\src\\zh\\default-theme-config\\README.md","mtime":1557200317058},{"path":"D:\\1\\实训一\\study\\study\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\1\\实训一\\study\\study\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"D:\\1\\实训一\\study\\study\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\1\\实训一\\study\\study\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\1\\实训一\\study\\study\\lib\\webpack\\markdownLoader.js","mtime":1557200316988}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", { staticClass: \"content\" }, [\n    _vm._m(0),\n    _vm._v(\" \"),\n    _vm._m(1),\n    _vm._v(\" \"),\n    _vm._m(2),\n    _vm._v(\" \"),\n    _c(\n      \"p\",\n      [\n        _vm._v(\"默认的主题提供了一个首页（Homepage）的布局 (用于 \"),\n        _c(\"router-link\", { attrs: { to: \"./../\" } }, [\n          _vm._v(\"这个网站的主页\")\n        ]),\n        _vm._v(\")。想要使用它，需要在你的根级 \"),\n        _c(\"code\", [_vm._v(\"README.md\")]),\n        _vm._v(\" 的 \"),\n        _c(\n          \"router-link\",\n          { attrs: { to: \"./../guide/markdown.html#front-matter\" } },\n          [_vm._v(\"YAML front matter\")]\n        ),\n        _vm._v(\" 指定 \"),\n        _c(\"code\", [_vm._v(\"home: true\")]),\n        _vm._v(\"。以下是这个网站实际使用的数据：\")\n      ],\n      1\n    ),\n    _vm._v(\" \"),\n    _vm._m(3),\n    _vm._m(4),\n    _vm._v(\" \"),\n    _vm._m(5),\n    _vm._v(\" \"),\n    _c(\n      \"p\",\n      [\n        _vm._v(\"导航栏可能包含你的页面标题、\"),\n        _c(\"a\", { attrs: { href: \"#%E6%90%9C%E7%B4%A2%E6%A1%86\" } }, [\n          _vm._v(\"搜索框\")\n        ]),\n        _vm._v(\"、 \"),\n        _c(\n          \"a\",\n          { attrs: { href: \"#%E5%AF%BC%E8%88%AA%E6%A0%8F%E9%93%BE%E6%8E%A5\" } },\n          [_vm._v(\"导航栏链接\")]\n        ),\n        _vm._v(\"、\"),\n        _c(\"router-link\", { attrs: { to: \"./../guide/i18n.html\" } }, [\n          _vm._v(\"多语言切换\")\n        ]),\n        _vm._v(\"、\"),\n        _c(\n          \"a\",\n          {\n            attrs: {\n              href:\n                \"#git-%E4%BB%93%E5%BA%93%E5%92%8C%E7%BC%96%E8%BE%91%E9%93%BE%E6%8E%A5\"\n            }\n          },\n          [_vm._v(\"仓库链接\")]\n        ),\n        _vm._v(\"，它们均取决于你的配置。\")\n      ],\n      1\n    ),\n    _vm._v(\" \"),\n    _vm._m(6),\n    _vm._v(\" \"),\n    _vm._m(7),\n    _vm._v(\" \"),\n    _vm._m(8),\n    _vm._m(9),\n    _vm._v(\" \"),\n    _vm._m(10),\n    _vm._m(11),\n    _vm._v(\" \"),\n    _vm._m(12),\n    _vm._m(13),\n    _vm._v(\" \"),\n    _vm._m(14),\n    _vm._v(\" \"),\n    _vm._m(15),\n    _vm._m(16),\n    _vm._v(\" \"),\n    _vm._m(17),\n    _vm._m(18),\n    _vm._v(\" \"),\n    _vm._m(19),\n    _vm._v(\" \"),\n    _vm._m(20),\n    _vm._m(21),\n    _vm._v(\" \"),\n    _vm._m(22),\n    _vm._v(\" \"),\n    _vm._m(23),\n    _vm._v(\" \"),\n    _vm._m(24),\n    _vm._v(\" \"),\n    _vm._m(25),\n    _c(\n      \"h3\",\n      { attrs: { id: \"显示所有页面的标题链接\" } },\n      [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: { href: \"#显示所有页面的标题链接\", \"aria-hidden\": \"true\" }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" 显示所有页面的标题链接 \"),\n        _c(\"Badge\", { attrs: { text: \"0.11.0+\" } })\n      ],\n      1\n    ),\n    _vm._v(\" \"),\n    _vm._m(26),\n    _vm._v(\" \"),\n    _vm._m(27),\n    _vm._m(28),\n    _vm._v(\" \"),\n    _c(\"p\", [\n      _vm._v(\n        \"默认情况下，当用户通过滚动查看页面的不同部分时，嵌套的标题链接和 URL 中的 Hash 值会实时更新，这个行为可以通过以下的配置来禁用：\"\n      )\n    ]),\n    _vm._v(\" \"),\n    _vm._m(29),\n    _vm._m(30),\n    _vm._v(\" \"),\n    _vm._m(31),\n    _vm._v(\" \"),\n    _vm._m(32),\n    _vm._v(\" \"),\n    _vm._m(33),\n    _vm._m(34),\n    _vm._v(\" \"),\n    _vm._m(35),\n    _vm._v(\" \"),\n    _c(\"p\", [\n      _vm._v(\n        \"如果你想为不同的页面组来显示不同的侧边栏，首先，将你的页面文件组织成下述的目录结构：\"\n      )\n    ]),\n    _vm._v(\" \"),\n    _vm._m(36),\n    _c(\"p\", [_vm._v(\"接着，遵循以下的侧边栏配置：\")]),\n    _vm._v(\" \"),\n    _vm._m(37),\n    _vm._m(38),\n    _vm._v(\" \"),\n    _vm._m(39),\n    _vm._v(\" \"),\n    _vm._m(40),\n    _vm._v(\" \"),\n    _vm._m(41),\n    _c(\"p\", [_vm._v(\"你也可以通过配置来在所有页面中启用它：\")]),\n    _vm._v(\" \"),\n    _vm._m(42),\n    _c(\n      \"p\",\n      [\n        _vm._v(\"在 \"),\n        _c(\"router-link\", { attrs: { to: \"./../guide/i18n.html\" } }, [\n          _vm._v(\"多语言\")\n        ]),\n        _vm._v(\" 模式下, 你也可以将其应用到某一特定的语言下：\")\n      ],\n      1\n    ),\n    _vm._v(\" \"),\n    _vm._m(43),\n    _vm._m(44),\n    _vm._v(\" \"),\n    _vm._m(45),\n    _vm._v(\" \"),\n    _vm._m(46),\n    _vm._m(47),\n    _vm._v(\" \"),\n    _vm._m(48),\n    _vm._v(\" \"),\n    _vm._m(49),\n    _vm._v(\" \"),\n    _vm._m(50),\n    _vm._m(51),\n    _vm._v(\" \"),\n    _vm._m(52),\n    _vm._v(\" \"),\n    _c(\"p\", [\n      _vm._v(\"你可以通过 \"),\n      _c(\"code\", [_vm._v(\"themeConfig.algolia\")]),\n      _vm._v(\" 选项来用 \"),\n      _c(\n        \"a\",\n        {\n          attrs: {\n            href: \"https://community.algolia.com/studyearch/\",\n            target: \"_blank\",\n            rel: \"noopener noreferrer\"\n          }\n        },\n        [_vm._v(\"Algolia 搜索\"), _c(\"OutboundLink\")],\n        1\n      ),\n      _vm._v(\" 替换内置的搜索框。要启用 Algolia 搜索，你需要至少提供 \"),\n      _c(\"code\", [_vm._v(\"apiKey\")]),\n      _vm._v(\" 和 \"),\n      _c(\"code\", [_vm._v(\"indexName\")]),\n      _vm._v(\"：\")\n    ]),\n    _vm._v(\" \"),\n    _vm._m(53),\n    _c(\"div\", { staticClass: \"warning custom-block\" }, [\n      _c(\"p\", { staticClass: \"custom-block-title\" }, [_vm._v(\"注意\")]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _vm._v(\"不同于开箱即用的 \"),\n        _c(\"a\", { attrs: { href: \"#%E5%86%85%E7%BD%AE%E6%90%9C%E7%B4%A2\" } }, [\n          _vm._v(\"内置搜索\")\n        ]),\n        _vm._v(\"，\"),\n        _c(\n          \"a\",\n          {\n            attrs: {\n              href: \"https://community.algolia.com/studyearch/\",\n              target: \"_blank\",\n              rel: \"noopener noreferrer\"\n            }\n          },\n          [_vm._v(\"Algolia 搜索\"), _c(\"OutboundLink\")],\n          1\n        ),\n        _vm._v(\" 需要你在使用之前将你的网站提交给它们用于创建索引。\")\n      ])\n    ]),\n    _vm._v(\" \"),\n    _c(\"p\", [\n      _vm._v(\"更多选项请参考 \"),\n      _c(\n        \"a\",\n        {\n          attrs: {\n            href: \"https://github.com/algolia/studyearch#studyearch-options\",\n            target: \"_blank\",\n            rel: \"noopener noreferrer\"\n          }\n        },\n        [_vm._v(\"Algolia studyearch 的文档\"), _c(\"OutboundLink\")],\n        1\n      ),\n      _vm._v(\"。\")\n    ]),\n    _vm._v(\" \"),\n    _vm._m(54),\n    _vm._v(\" \"),\n    _vm._m(55),\n    _vm._v(\" \"),\n    _vm._m(56),\n    _vm._m(57),\n    _vm._v(\" \"),\n    _vm._m(58),\n    _vm._v(\" \"),\n    _vm._m(59),\n    _vm._v(\" \"),\n    _vm._m(60),\n    _vm._v(\" \"),\n    _c(\"div\", { staticClass: \"tip custom-block\" }, [\n      _c(\"p\", { staticClass: \"custom-block-title\" }, [_vm._v(\"提示\")]),\n      _vm._v(\" \"),\n      _c(\n        \"p\",\n        [\n          _vm._v(\"请不要将本选项与 \"),\n          _c(\"router-link\", { attrs: { to: \"./../config/#serviceworker\" } }, [\n            _vm._v(\"Config > serviceWorker\")\n          ]),\n          _vm._v(\" 混淆，\"),\n          _c(\"router-link\", { attrs: { to: \"./../config/#serviceworker\" } }, [\n            _vm._v(\"Config > serviceWorker\")\n          ]),\n          _vm._v(\" 是网站级别的配置，而本选项是主题级别的配置。\")\n        ],\n        1\n      )\n    ]),\n    _vm._v(\" \"),\n    _c(\n      \"h3\",\n      { attrs: { id: \"刷新内容的弹窗\" } },\n      [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: { href: \"#刷新内容的弹窗\", \"aria-hidden\": \"true\" }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" 刷新内容的弹窗 \"),\n        _c(\"Badge\", { attrs: { text: \"0.13.0+\" } }),\n        _vm._v(\" \"),\n        _c(\"Badge\", { attrs: { text: \"beta\", type: \"warn\" } })\n      ],\n      1\n    ),\n    _vm._v(\" \"),\n    _vm._m(61),\n    _vm._v(\" \"),\n    _c(\"div\", { staticClass: \"tip custom-block\" }, [\n      _c(\"p\", { staticClass: \"custom-block-title\" }, [_vm._v(\"提示\")]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _vm._v(\"如果没有 \"),\n        _c(\"code\", [_vm._v(\"refresh\")]),\n        _vm._v(\" 按钮，新的 service worker 将在所有的 \"),\n        _c(\n          \"a\",\n          {\n            attrs: {\n              href: \"https://developer.mozilla.org/en-US/study/Web/API/Clients\",\n              target: \"_blank\",\n              rel: \"noopener noreferrer\"\n            }\n          },\n          [_vm._v(\"clients\"), _c(\"OutboundLink\")],\n          1\n        ),\n        _vm._v(\n          \" 关闭后才会处于活动状态。这意味着访问者在关闭你网站的所有标签之前将无法看到新内容。但是，\"\n        ),\n        _c(\"code\", [_vm._v(\"refresh\")]),\n        _vm._v(\" 按钮可以立即激活新的 Service Worker。\")\n      ])\n    ]),\n    _vm._v(\" \"),\n    _vm._m(62),\n    _vm._m(63),\n    _vm._v(\" \"),\n    _vm._m(64),\n    _vm._v(\" \"),\n    _vm._m(65),\n    _vm._m(66),\n    _vm._v(\" \"),\n    _vm._m(67),\n    _vm._v(\" \"),\n    _vm._m(68),\n    _vm._m(69),\n    _vm._v(\" \"),\n    _vm._m(70),\n    _vm._m(71),\n    _vm._v(\" \"),\n    _c(\"p\", [\n      _vm._v(\n        \"如果你只是希望应用一些简单的 overrides 到默认主题的样式上，你可以创建一个 \"\n      ),\n      _c(\"code\", [_vm._v(\".vuepress/override.styl\")]),\n      _vm._v(\" 文件，这是一个 \"),\n      _c(\n        \"a\",\n        {\n          attrs: {\n            href: \"http://stylus-lang.com/\",\n            target: \"_blank\",\n            rel: \"noopener noreferrer\"\n          }\n        },\n        [_vm._v(\"Stylus\"), _c(\"OutboundLink\")],\n        1\n      ),\n      _vm._v(\" 文件，但是你仍然可以使用普通的 CSS 语法。\")\n    ]),\n    _vm._v(\" \"),\n    _c(\"p\", [_vm._v(\"这里有一些你可以调整的颜色变量：\")]),\n    _vm._v(\" \"),\n    _vm._m(72),\n    _c(\n      \"h3\",\n      { attrs: { id: \"低版本存在的问题\" } },\n      [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: { href: \"#低版本存在的问题\", \"aria-hidden\": \"true\" }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" 低版本存在的问题 \"),\n        _c(\"Badge\", { attrs: { text: \"< 0.12.0\", type: \"error\" } })\n      ],\n      1\n    ),\n    _vm._v(\" \"),\n    _c(\"p\", [\n      _vm._v(\"为了 override 上述提及的 \"),\n      _c(\n        \"a\",\n        {\n          attrs: {\n            href: \"http://stylus-lang.com/\",\n            target: \"_blank\",\n            rel: \"noopener noreferrer\"\n          }\n        },\n        [_vm._v(\"Stylus\"), _c(\"OutboundLink\")],\n        1\n      ),\n      _vm._v(\" 默认样式常量，\"),\n      _c(\"code\", [_vm._v(\"override.styl\")]),\n      _vm._v(\" 将会在默认主题的 \"),\n      _c(\"code\", [_vm._v(\"config.styl\")]),\n      _vm._v(\" 的末尾被导入。但是，由于 \"),\n      _c(\"code\", [_vm._v(\"config.styl\")]),\n      _vm._v(\n        \" 可能会被多个文件导入，所以，一旦你在这里写样式，你的样式将会被重复多次。参考： \"\n      ),\n      _c(\n        \"a\",\n        {\n          attrs: {\n            href: \"https://github.com/vuejs/vuepress/issues/637\",\n            target: \"_blank\",\n            rel: \"noopener noreferrer\"\n          }\n        },\n        [_vm._v(\"#637\"), _c(\"OutboundLink\")],\n        1\n      ),\n      _vm._v(\"。\")\n    ]),\n    _vm._v(\" \"),\n    _c(\n      \"h3\",\n      { attrs: { id: \"将你的样式迁移到-style-styl\" } },\n      [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: {\n              href: \"#将你的样式迁移到-style-styl\",\n              \"aria-hidden\": \"true\"\n            }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" 将你的样式迁移到 \"),\n        _c(\"code\", [_vm._v(\"style.styl\")]),\n        _vm._v(\" \"),\n        _c(\"Badge\", { attrs: { text: \"0.12.0+\" } })\n      ],\n      1\n    ),\n    _vm._v(\" \"),\n    _vm._m(73),\n    _vm._v(\" \"),\n    _vm._m(74),\n    _vm._v(\" \"),\n    _vm._m(75),\n    _vm._m(76),\n    _vm._v(\" \"),\n    _vm._m(77),\n    _vm._m(78),\n    _vm._m(79),\n    _vm._v(\" \"),\n    _vm._m(80),\n    _vm._v(\" \"),\n    _vm._m(81),\n    _c(\"p\", [_vm._v(\"然后你就可以写专门针对该页面的 CSS 了：\")]),\n    _vm._v(\" \"),\n    _vm._m(82),\n    _vm._m(83),\n    _vm._v(\" \"),\n    _vm._m(84),\n    _vm._v(\" \"),\n    _vm._m(85),\n    _vm._m(86)\n  ])\n}\nvar staticRenderFns = [\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h1\", { attrs: { id: \"默认主题\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#默认主题\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" 默认主题\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"tip custom-block\" }, [\n      _c(\"p\", { staticClass: \"custom-block-title\" }, [_vm._v(\"提示\")]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _vm._v(\n          \"本页所列的选项仅对默认主题生效。如果你在使用一个自定义主题，选项可能会有不同。\"\n        )\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h2\", { attrs: { id: \"首页\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#首页\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" 首页\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-yaml extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-yaml\" } }, [\n        _c(\"code\", [\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"---\")\n          ]),\n          _vm._v(\"\\n\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token key atrule\" } }, [\n            _vm._v(\"home\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\":\")\n          ]),\n          _vm._v(\" \"),\n          _c(\n            \"span\",\n            { pre: true, attrs: { class: \"token boolean important\" } },\n            [_vm._v(\"true\")]\n          ),\n          _vm._v(\"\\n\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token key atrule\" } }, [\n            _vm._v(\"heroImage\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\":\")\n          ]),\n          _vm._v(\" /hero.png\\n\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token key atrule\" } }, [\n            _vm._v(\"actionText\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\":\")\n          ]),\n          _vm._v(\" 快速上手 →\\n\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token key atrule\" } }, [\n            _vm._v(\"actionLink\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\":\")\n          ]),\n          _vm._v(\" /zh/guide/\\n\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token key atrule\" } }, [\n            _vm._v(\"features\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\":\")\n          ]),\n          _vm._v(\"\\n\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"-\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token key atrule\" } }, [\n            _vm._v(\"title\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\":\")\n          ]),\n          _vm._v(\" 简洁至上\\n  \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token key atrule\" } }, [\n            _vm._v(\"details\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\":\")\n          ]),\n          _vm._v(\n            \" 以 Markdown 为中心的项目结构，以最少的配置帮助你专注于写作。\\n\"\n          ),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"-\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token key atrule\" } }, [\n            _vm._v(\"title\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\":\")\n          ]),\n          _vm._v(\" Vue驱动\\n  \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token key atrule\" } }, [\n            _vm._v(\"details\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\":\")\n          ]),\n          _vm._v(\n            \" 享受 Vue + webpack 的开发体验，在 Markdown 中使用 Vue 组件，同时可以使用 Vue 来开发自定义主题。\\n\"\n          ),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"-\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token key atrule\" } }, [\n            _vm._v(\"title\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\":\")\n          ]),\n          _vm._v(\" 高性能\\n  \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token key atrule\" } }, [\n            _vm._v(\"details\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\":\")\n          ]),\n          _vm._v(\n            \" VuePress 为每个页面预渲染生成静态的 HTML，同时在页面被加载的时候，将作为 SPA 运行。\\n\"\n          ),\n          _c(\"span\", { pre: true, attrs: { class: \"token key atrule\" } }, [\n            _vm._v(\"footer\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\":\")\n          ]),\n          _vm._v(\" MIT Licensed \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"|\")\n          ]),\n          _vm._v(\" Copyright © 2018\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"-\")\n          ]),\n          _vm._v(\"present Evan You\\n\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"---\")\n          ]),\n          _vm._v(\"\\n\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _vm._v(\"任何 \"),\n      _c(\"code\", [_vm._v(\"YAML front matter\")]),\n      _vm._v(\" 之后额外的内容将会以普通的 markdown 被渲染，并插入到 \"),\n      _c(\"code\", [_vm._v(\"features\")]),\n      _vm._v(\" 的后面。\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h2\", { attrs: { id: \"导航栏\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#导航栏\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" 导航栏\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h3\", { attrs: { id: \"导航栏链接\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#导航栏链接\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" 导航栏链接\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _vm._v(\"你可以通过 \"),\n      _c(\"code\", [_vm._v(\"themeConfig.nav\")]),\n      _vm._v(\" 增加一些导航栏链接:\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-js extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-js\" } }, [\n        _c(\"code\", [\n          _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n            _vm._v(\"// .vuepress/config.js\")\n          ]),\n          _vm._v(\"\\nmodule\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\".\")\n          ]),\n          _vm._v(\"exports \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n            _vm._v(\"=\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"{\")\n          ]),\n          _vm._v(\"\\n  themeConfig\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\":\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"{\")\n          ]),\n          _vm._v(\"\\n    nav\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\":\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"[\")\n          ]),\n          _vm._v(\"\\n      \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"{\")\n          ]),\n          _vm._v(\" text\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\":\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n            _vm._v(\"'Home'\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\",\")\n          ]),\n          _vm._v(\" link\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\":\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n            _vm._v(\"'/'\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"}\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\",\")\n          ]),\n          _vm._v(\"\\n      \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"{\")\n          ]),\n          _vm._v(\" text\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\":\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n            _vm._v(\"'Guide'\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\",\")\n          ]),\n          _vm._v(\" link\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\":\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n            _vm._v(\"'/guide/'\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"}\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\",\")\n          ]),\n          _vm._v(\"\\n      \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"{\")\n          ]),\n          _vm._v(\" text\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\":\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n            _vm._v(\"'External'\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\",\")\n          ]),\n          _vm._v(\" link\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\":\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n            _vm._v(\"'https://google.com'\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"}\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\",\")\n          ]),\n          _vm._v(\"\\n    \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"]\")\n          ]),\n          _vm._v(\"\\n  \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"}\")\n          ]),\n          _vm._v(\"\\n\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"}\")\n          ]),\n          _vm._v(\"\\n\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _vm._v(\"当你提供了一个 \"),\n      _c(\"code\", [_vm._v(\"items\")]),\n      _vm._v(\" 数组而不是一个单一的 \"),\n      _c(\"code\", [_vm._v(\"link\")]),\n      _vm._v(\" 时，它将显示为一个 \"),\n      _c(\"code\", [_vm._v(\"下拉列表\")]),\n      _vm._v(\" ：\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-js extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-js\" } }, [\n        _c(\"code\", [\n          _vm._v(\"module\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\".\")\n          ]),\n          _vm._v(\"exports \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n            _vm._v(\"=\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"{\")\n          ]),\n          _vm._v(\"\\n  themeConfig\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\":\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"{\")\n          ]),\n          _vm._v(\"\\n    nav\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\":\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"[\")\n          ]),\n          _vm._v(\"\\n      \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"{\")\n          ]),\n          _vm._v(\"\\n        text\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\":\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n            _vm._v(\"'Languages'\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\",\")\n          ]),\n          _vm._v(\"\\n        items\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\":\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"[\")\n          ]),\n          _vm._v(\"\\n          \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"{\")\n          ]),\n          _vm._v(\" text\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\":\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n            _vm._v(\"'Chinese'\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\",\")\n          ]),\n          _vm._v(\" link\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\":\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n            _vm._v(\"'/language/chinese'\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"}\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\",\")\n          ]),\n          _vm._v(\"\\n          \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"{\")\n          ]),\n          _vm._v(\" text\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\":\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n            _vm._v(\"'Japanese'\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\",\")\n          ]),\n          _vm._v(\" link\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\":\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n            _vm._v(\"'/language/japanese'\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"}\")\n          ]),\n          _vm._v(\"\\n        \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"]\")\n          ]),\n          _vm._v(\"\\n      \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"}\")\n          ]),\n          _vm._v(\"\\n    \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"]\")\n          ]),\n          _vm._v(\"\\n  \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"}\")\n          ]),\n          _vm._v(\"\\n\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"}\")\n          ]),\n          _vm._v(\"\\n\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _vm._v(\"此外，你还可以通过嵌套的 \"),\n      _c(\"code\", [_vm._v(\"items\")]),\n      _vm._v(\" 来在 \"),\n      _c(\"code\", [_vm._v(\"下拉列表\")]),\n      _vm._v(\" 中设置分组：\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-js extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-js\" } }, [\n        _c(\"code\", [\n          _vm._v(\"module\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\".\")\n          ]),\n          _vm._v(\"exports \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n            _vm._v(\"=\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"{\")\n          ]),\n          _vm._v(\"\\n  themeConfig\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\":\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"{\")\n          ]),\n          _vm._v(\"\\n    nav\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\":\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"[\")\n          ]),\n          _vm._v(\"\\n      \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"{\")\n          ]),\n          _vm._v(\"\\n        text\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\":\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n            _vm._v(\"'Languages'\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\",\")\n          ]),\n          _vm._v(\"\\n        items\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\":\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"[\")\n          ]),\n          _vm._v(\"\\n          \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"{\")\n          ]),\n          _vm._v(\" text\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\":\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n            _vm._v(\"'Group1'\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\",\")\n          ]),\n          _vm._v(\" items\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\":\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"[\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n            _vm._v(\"/*  */\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"]\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"}\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\",\")\n          ]),\n          _vm._v(\"\\n          \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"{\")\n          ]),\n          _vm._v(\" text\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\":\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n            _vm._v(\"'Group2'\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\",\")\n          ]),\n          _vm._v(\" items\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\":\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"[\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n            _vm._v(\"/*  */\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"]\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"}\")\n          ]),\n          _vm._v(\"\\n        \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"]\")\n          ]),\n          _vm._v(\"\\n      \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"}\")\n          ]),\n          _vm._v(\"\\n    \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"]\")\n          ]),\n          _vm._v(\"\\n  \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"}\")\n          ]),\n          _vm._v(\"\\n\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"}\")\n          ]),\n          _vm._v(\"\\n\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h3\", { attrs: { id: \"禁用导航栏\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#禁用导航栏\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" 禁用导航栏\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _vm._v(\"你可以使用 \"),\n      _c(\"code\", [_vm._v(\"themeConfig.navbar\")]),\n      _vm._v(\" 来禁用所有页面的导航栏：\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-js extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-js\" } }, [\n        _c(\"code\", [\n          _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n            _vm._v(\"// .vuepress/config.js\")\n          ]),\n          _vm._v(\"\\nmodule\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\".\")\n          ]),\n          _vm._v(\"exports \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n            _vm._v(\"=\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"{\")\n          ]),\n          _vm._v(\"\\n  themeConfig\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\":\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"{\")\n          ]),\n          _vm._v(\"\\n    navbar\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\":\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token boolean\" } }, [\n            _vm._v(\"false\")\n          ]),\n          _vm._v(\"\\n  \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"}\")\n          ]),\n          _vm._v(\"\\n\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"}\")\n          ]),\n          _vm._v(\"\\n\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _vm._v(\"你也可以通过 \"),\n      _c(\"code\", [_vm._v(\"YAML front matter\")]),\n      _vm._v(\" 来禁用某个指定页面的导航栏：\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-yaml extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-yaml\" } }, [\n        _c(\"code\", [\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"---\")\n          ]),\n          _vm._v(\"\\n\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token key atrule\" } }, [\n            _vm._v(\"navbar\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\":\")\n          ]),\n          _vm._v(\" \"),\n          _c(\n            \"span\",\n            { pre: true, attrs: { class: \"token boolean important\" } },\n            [_vm._v(\"false\")]\n          ),\n          _vm._v(\"\\n\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"---\")\n          ]),\n          _vm._v(\"\\n\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h2\", { attrs: { id: \"侧边栏\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#侧边栏\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" 侧边栏\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _vm._v(\"想要使 侧边栏（Sidebar）生效，需要配置 \"),\n      _c(\"code\", [_vm._v(\"themeConfig.sidebar\")]),\n      _vm._v(\"，基本的配置，需要一个包含了多个链接的数组：\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-js extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-js\" } }, [\n        _c(\"code\", [\n          _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n            _vm._v(\"// .vuepress/config.js\")\n          ]),\n          _vm._v(\"\\nmodule\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\".\")\n          ]),\n          _vm._v(\"exports \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n            _vm._v(\"=\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"{\")\n          ]),\n          _vm._v(\"\\n  themeConfig\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\":\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"{\")\n          ]),\n          _vm._v(\"\\n    sidebar\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\":\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"[\")\n          ]),\n          _vm._v(\"\\n      \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n            _vm._v(\"'/'\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\",\")\n          ]),\n          _vm._v(\"\\n      \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n            _vm._v(\"'/page-a'\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\",\")\n          ]),\n          _vm._v(\"\\n      \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"[\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n            _vm._v(\"'/page-b'\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\",\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n            _vm._v(\"'Explicit link text'\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"]\")\n          ]),\n          _vm._v(\"\\n    \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"]\")\n          ]),\n          _vm._v(\"\\n  \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"}\")\n          ]),\n          _vm._v(\"\\n\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"}\")\n          ]),\n          _vm._v(\"\\n\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _vm._v(\"你可以省略 \"),\n      _c(\"code\", [_vm._v(\".md\")]),\n      _vm._v(\" 拓展名，同时以 \"),\n      _c(\"code\", [_vm._v(\"/\")]),\n      _vm._v(\" 结尾的路径将会被视为 \"),\n      _c(\"code\", [_vm._v(\"*/README.md\")]),\n      _vm._v(\n        \"，这个链接的文字将会被自动获取到（无论你是声明为页面的第一个 header，还是明确地在 \"\n      ),\n      _c(\"code\", [_vm._v(\"YAML front matter\")]),\n      _vm._v(\n        \" 中指定页面的标题）。如果你想要显示地指定链接的文字，使用一个格式为 \"\n      ),\n      _c(\"code\", [_vm._v(\"[link, text]\")]),\n      _vm._v(\" 的数组。\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h3\", { attrs: { id: \"嵌套的标题链接\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#嵌套的标题链接\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" 嵌套的标题链接\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _vm._v(\n        \"默认情况下，侧边栏会自动地显示由当前页面的标题（headers）组成的链接，并按照页面本身的结构进行嵌套，你可以通过 \"\n      ),\n      _c(\"code\", [_vm._v(\"themeConfig.sidebarDepth\")]),\n      _vm._v(\" 来修改它的行为。默认的深度是 \"),\n      _c(\"code\", [_vm._v(\"1\")]),\n      _vm._v(\"，它将提取到 \"),\n      _c(\"code\", [_vm._v(\"h2\")]),\n      _vm._v(\" 的标题，设置成 \"),\n      _c(\"code\", [_vm._v(\"0\")]),\n      _vm._v(\" 将会禁用标题（headers）链接，同时，最大的深度为 \"),\n      _c(\"code\", [_vm._v(\"2\")]),\n      _vm._v(\"，它将同时提取 \"),\n      _c(\"code\", [_vm._v(\"h2\")]),\n      _vm._v(\" 和 \"),\n      _c(\"code\", [_vm._v(\"h3\")]),\n      _vm._v(\" 标题。\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _vm._v(\"也可以使用 \"),\n      _c(\"code\", [_vm._v(\"YAML front matter\")]),\n      _vm._v(\" 来为某个页面重写此值：\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-md extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-md\" } }, [\n        _c(\"code\", [\n          _c(\"span\", { pre: true, attrs: { class: \"token hr punctuation\" } }, [\n            _vm._v(\"---\")\n          ]),\n          _vm._v(\"\\n\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token title important\" } }, [\n            _vm._v(\"sidebarDepth: 2\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"---\")\n            ])\n          ]),\n          _vm._v(\"\\n\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _vm._v(\n        \"默认情况下，侧边栏只会显示由当前活动页面的标题（headers）组成的链接，你可以将 \"\n      ),\n      _c(\"code\", [_vm._v(\"themeConfig.displayAllHeaders\")]),\n      _vm._v(\" 设置为 \"),\n      _c(\"code\", [_vm._v(\"true\")]),\n      _vm._v(\" 来显示所有页面的标题链接：\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-js extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-js\" } }, [\n        _c(\"code\", [\n          _vm._v(\"module\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\".\")\n          ]),\n          _vm._v(\"exports \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n            _vm._v(\"=\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"{\")\n          ]),\n          _vm._v(\"\\n  themeConfig\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\":\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"{\")\n          ]),\n          _vm._v(\"\\n    displayAllHeaders\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\":\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token boolean\" } }, [\n            _vm._v(\"true\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n            _vm._v(\"// 默认值：false\")\n          ]),\n          _vm._v(\"\\n  \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"}\")\n          ]),\n          _vm._v(\"\\n\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"}\")\n          ]),\n          _vm._v(\"\\n\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h3\", { attrs: { id: \"活动的标题链接\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#活动的标题链接\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" 活动的标题链接\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-js extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-js\" } }, [\n        _c(\"code\", [\n          _vm._v(\"module\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\".\")\n          ]),\n          _vm._v(\"exports \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n            _vm._v(\"=\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"{\")\n          ]),\n          _vm._v(\"\\n  themeConfig\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\":\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"{\")\n          ]),\n          _vm._v(\"\\n    activeHeaderLinks\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\":\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token boolean\" } }, [\n            _vm._v(\"false\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\",\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n            _vm._v(\"// 默认值：true\")\n          ]),\n          _vm._v(\"\\n  \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"}\")\n          ]),\n          _vm._v(\"\\n\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"}\")\n          ]),\n          _vm._v(\"\\n\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"tip custom-block\" }, [\n      _c(\"p\", { staticClass: \"custom-block-title\" }, [_vm._v(\"TIP\")]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _vm._v(\n          \"值得一提的是，当你禁用此选项时，此功能的相应脚本将不会被加载，这是我们性能优化的一个小点。\"\n        )\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h3\", { attrs: { id: \"侧边栏分组\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#侧边栏分组\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" 侧边栏分组\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _vm._v(\"你可以通过使用\"),\n      _c(\"strong\", [_vm._v(\"对象\")]),\n      _vm._v(\"来将侧边栏划分成多个组：\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-js extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-js\" } }, [\n        _c(\"code\", [\n          _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n            _vm._v(\"// .vuepress/config.js\")\n          ]),\n          _vm._v(\"\\nmodule\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\".\")\n          ]),\n          _vm._v(\"exports \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n            _vm._v(\"=\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"{\")\n          ]),\n          _vm._v(\"\\n  themeConfig\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\":\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"{\")\n          ]),\n          _vm._v(\"\\n    sidebar\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\":\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"[\")\n          ]),\n          _vm._v(\"\\n      \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"{\")\n          ]),\n          _vm._v(\"\\n        title\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\":\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n            _vm._v(\"'Group 1'\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\",\")\n          ]),\n          _vm._v(\"\\n        collapsable\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\":\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token boolean\" } }, [\n            _vm._v(\"false\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\",\")\n          ]),\n          _vm._v(\"\\n        children\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\":\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"[\")\n          ]),\n          _vm._v(\"\\n          \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n            _vm._v(\"'/'\")\n          ]),\n          _vm._v(\"\\n        \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"]\")\n          ]),\n          _vm._v(\"\\n      \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"}\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\",\")\n          ]),\n          _vm._v(\"\\n      \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"{\")\n          ]),\n          _vm._v(\"\\n        title\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\":\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n            _vm._v(\"'Group 2'\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\",\")\n          ]),\n          _vm._v(\"\\n        children\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\":\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"[\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n            _vm._v(\"/* ... */\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"]\")\n          ]),\n          _vm._v(\"\\n      \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"}\")\n          ]),\n          _vm._v(\"\\n    \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"]\")\n          ]),\n          _vm._v(\"\\n  \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"}\")\n          ]),\n          _vm._v(\"\\n\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"}\")\n          ]),\n          _vm._v(\"\\n\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _vm._v(\"侧边栏的每个子组默认是可折叠的，你可以设置 \"),\n      _c(\"code\", [_vm._v(\"collapsable: false\")]),\n      _vm._v(\" 来让一个组永远都是展开状态。\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h3\", { attrs: { id: \"多个侧边栏\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#多个侧边栏\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" 多个侧边栏\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language- extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-text\" } }, [\n        _c(\"code\", [\n          _vm._v(\n            \".\\n├─ README.md\\n├─ contact.md\\n├─ about.md\\n├─ foo/\\n│  ├─ README.md\\n│  ├─ one.md\\n│  └─ two.md\\n└─ bar/\\n   ├─ README.md\\n   ├─ three.md\\n   └─ four.md\\n\"\n          )\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-js extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-js\" } }, [\n        _c(\"code\", [\n          _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n            _vm._v(\"// .vuepress/config.js\")\n          ]),\n          _vm._v(\"\\nmodule\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\".\")\n          ]),\n          _vm._v(\"exports \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n            _vm._v(\"=\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"{\")\n          ]),\n          _vm._v(\"\\n  themeConfig\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\":\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"{\")\n          ]),\n          _vm._v(\"\\n    sidebar\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\":\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"{\")\n          ]),\n          _vm._v(\"\\n      \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n            _vm._v(\"'/foo/'\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\":\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"[\")\n          ]),\n          _vm._v(\"\\n        \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n            _vm._v(\"''\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\",\")\n          ]),\n          _vm._v(\"     \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n            _vm._v(\"/* /foo/ */\")\n          ]),\n          _vm._v(\"\\n        \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n            _vm._v(\"'one'\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\",\")\n          ]),\n          _vm._v(\"  \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n            _vm._v(\"/* /foo/one.html */\")\n          ]),\n          _vm._v(\"\\n        \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n            _vm._v(\"'two'\")\n          ]),\n          _vm._v(\"   \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n            _vm._v(\"/* /foo/two.html */\")\n          ]),\n          _vm._v(\"\\n      \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"]\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\",\")\n          ]),\n          _vm._v(\"\\n\\n      \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n            _vm._v(\"'/bar/'\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\":\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"[\")\n          ]),\n          _vm._v(\"\\n        \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n            _vm._v(\"''\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\",\")\n          ]),\n          _vm._v(\"      \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n            _vm._v(\"/* /bar/ */\")\n          ]),\n          _vm._v(\"\\n        \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n            _vm._v(\"'three'\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\",\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n            _vm._v(\"/* /bar/three.html */\")\n          ]),\n          _vm._v(\"\\n        \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n            _vm._v(\"'four'\")\n          ]),\n          _vm._v(\"   \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n            _vm._v(\"/* /bar/four.html */\")\n          ]),\n          _vm._v(\"\\n      \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"]\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\",\")\n          ]),\n          _vm._v(\"\\n\\n      \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n            _vm._v(\"// fallback\")\n          ]),\n          _vm._v(\"\\n      \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n            _vm._v(\"'/'\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\":\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"[\")\n          ]),\n          _vm._v(\"\\n        \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n            _vm._v(\"''\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\",\")\n          ]),\n          _vm._v(\"        \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n            _vm._v(\"/* / */\")\n          ]),\n          _vm._v(\"\\n        \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n            _vm._v(\"'contact'\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\",\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n            _vm._v(\"/* /contact.html */\")\n          ]),\n          _vm._v(\"\\n        \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n            _vm._v(\"'about'\")\n          ]),\n          _vm._v(\"    \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n            _vm._v(\"/* /about.html */\")\n          ]),\n          _vm._v(\"\\n      \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"]\")\n          ]),\n          _vm._v(\"\\n    \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"}\")\n          ]),\n          _vm._v(\"\\n  \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"}\")\n          ]),\n          _vm._v(\"\\n\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"}\")\n          ]),\n          _vm._v(\"\\n\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"warning custom-block\" }, [\n      _c(\"p\", { staticClass: \"custom-block-title\" }, [_vm._v(\"WARNING\")]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _vm._v(\n          \"确保 fallback 侧边栏被最后定义。VuePress 会按顺序遍历侧边栏配置来寻找匹配的配置。\"\n        )\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h3\", { attrs: { id: \"自动生成侧栏\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#自动生成侧栏\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" 自动生成侧栏\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _vm._v(\n        \"如果你希望自动生成一个仅仅包含了当前页面标题（headers）链接的侧边栏，你可以通过 \"\n      ),\n      _c(\"code\", [_vm._v(\"YAML front matter\")]),\n      _vm._v(\" 来实现：\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-yaml extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-yaml\" } }, [\n        _c(\"code\", [\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"---\")\n          ]),\n          _vm._v(\"\\n\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token key atrule\" } }, [\n            _vm._v(\"sidebar\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\":\")\n          ]),\n          _vm._v(\" auto\\n\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"---\")\n          ]),\n          _vm._v(\"\\n\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-js extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-js\" } }, [\n        _c(\"code\", [\n          _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n            _vm._v(\"// .vuepress/config.js\")\n          ]),\n          _vm._v(\"\\nmodule\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\".\")\n          ]),\n          _vm._v(\"exports \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n            _vm._v(\"=\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"{\")\n          ]),\n          _vm._v(\"\\n  themeConfig\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\":\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"{\")\n          ]),\n          _vm._v(\"\\n    sidebar\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\":\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n            _vm._v(\"'auto'\")\n          ]),\n          _vm._v(\"\\n  \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"}\")\n          ]),\n          _vm._v(\"\\n\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"}\")\n          ]),\n          _vm._v(\"\\n\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-js extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-js\" } }, [\n        _c(\"code\", [\n          _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n            _vm._v(\"// .vuepress/config.js\")\n          ]),\n          _vm._v(\"\\nmodule\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\".\")\n          ]),\n          _vm._v(\"exports \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n            _vm._v(\"=\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"{\")\n          ]),\n          _vm._v(\"\\n  themeConfig\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\":\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"{\")\n          ]),\n          _vm._v(\"\\n     \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n            _vm._v(\"'/zh/'\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\":\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"{\")\n          ]),\n          _vm._v(\"\\n       sidebar\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\":\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n            _vm._v(\"'auto'\")\n          ]),\n          _vm._v(\"\\n     \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"}\")\n          ]),\n          _vm._v(\"\\n  \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"}\")\n          ]),\n          _vm._v(\"\\n\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"}\")\n          ]),\n          _vm._v(\"\\n\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h3\", { attrs: { id: \"禁用侧边栏\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#禁用侧边栏\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" 禁用侧边栏\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _vm._v(\"你可以通过 \"),\n      _c(\"code\", [_vm._v(\"YAML front matter\")]),\n      _vm._v(\" 来禁用指定页面的侧边栏：\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-yaml extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-yaml\" } }, [\n        _c(\"code\", [\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"---\")\n          ]),\n          _vm._v(\"\\n\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token key atrule\" } }, [\n            _vm._v(\"sidebar\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\":\")\n          ]),\n          _vm._v(\" \"),\n          _c(\n            \"span\",\n            { pre: true, attrs: { class: \"token boolean important\" } },\n            [_vm._v(\"false\")]\n          ),\n          _vm._v(\"\\n\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"---\")\n          ]),\n          _vm._v(\"\\n\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h2\", { attrs: { id: \"搜索框\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#搜索框\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" 搜索框\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h3\", { attrs: { id: \"内置搜索\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#内置搜索\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" 内置搜索\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _vm._v(\"你可以通过设置 \"),\n      _c(\"code\", [_vm._v(\"themeConfig.search: false\")]),\n      _vm._v(\" 来禁用默认的搜索框，或是通过 \"),\n      _c(\"code\", [_vm._v(\"themeConfig.searchMaxSuggestions\")]),\n      _vm._v(\" 来调整默认搜索框显示的搜索结果数量：\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-js extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-js\" } }, [\n        _c(\"code\", [\n          _vm._v(\"module\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\".\")\n          ]),\n          _vm._v(\"exports \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n            _vm._v(\"=\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"{\")\n          ]),\n          _vm._v(\"\\n  themeConfig\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\":\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"{\")\n          ]),\n          _vm._v(\"\\n    search\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\":\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token boolean\" } }, [\n            _vm._v(\"false\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\",\")\n          ]),\n          _vm._v(\"\\n    searchMaxSuggestions\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\":\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token number\" } }, [\n            _vm._v(\"10\")\n          ]),\n          _vm._v(\"\\n  \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"}\")\n          ]),\n          _vm._v(\"\\n\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"}\")\n          ]),\n          _vm._v(\"\\n\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"tip custom-block\" }, [\n      _c(\"p\", { staticClass: \"custom-block-title\" }, [_vm._v(\"TIP\")]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _vm._v(\"内置搜索只会为页面的标题、\"),\n        _c(\"code\", [_vm._v(\"h2\")]),\n        _vm._v(\" 和 \"),\n        _c(\"code\", [_vm._v(\"h3\")]),\n        _vm._v(\" 构建搜索索引，如果你需要全文搜索，你可以使用 \"),\n        _c(\"a\", { attrs: { href: \"#Algolia-%E6%90%9C%E7%B4%A2\" } }, [\n          _vm._v(\"Algolia 搜索\")\n        ]),\n        _vm._v(\"。\")\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h3\", { attrs: { id: \"algolia-搜索\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#algolia-搜索\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" Algolia 搜索\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-js extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-js\" } }, [\n        _c(\"code\", [\n          _vm._v(\"module\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\".\")\n          ]),\n          _vm._v(\"exports \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n            _vm._v(\"=\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"{\")\n          ]),\n          _vm._v(\"\\n  themeConfig\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\":\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"{\")\n          ]),\n          _vm._v(\"\\n    algolia\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\":\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"{\")\n          ]),\n          _vm._v(\"\\n      apiKey\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\":\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n            _vm._v(\"'<API_KEY>'\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\",\")\n          ]),\n          _vm._v(\"\\n      indexName\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\":\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n            _vm._v(\"'<INDEX_NAME>'\")\n          ]),\n          _vm._v(\"\\n    \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"}\")\n          ]),\n          _vm._v(\"\\n  \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"}\")\n          ]),\n          _vm._v(\"\\n\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"}\")\n          ]),\n          _vm._v(\"\\n\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h2\", { attrs: { id: \"最后更新时间\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#最后更新时间\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" 最后更新时间\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _vm._v(\"你可以通过 \"),\n      _c(\"code\", [_vm._v(\"themeConfig.lastUpdated\")]),\n      _vm._v(\" 选项来获取每个文件最后一次 \"),\n      _c(\"code\", [_vm._v(\"git\")]),\n      _vm._v(\n        \" 提交的 UNIX 时间戳(ms)，同时它将以合适的日期格式显示在每一页的底部：\"\n      )\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-js extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-js\" } }, [\n        _c(\"code\", [\n          _vm._v(\"module\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\".\")\n          ]),\n          _vm._v(\"exports \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n            _vm._v(\"=\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"{\")\n          ]),\n          _vm._v(\"\\n  themeConfig\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\":\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"{\")\n          ]),\n          _vm._v(\"\\n    lastUpdated\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\":\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n            _vm._v(\"'Last Updated'\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\",\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n            _vm._v(\"// string | boolean\")\n          ]),\n          _vm._v(\"\\n  \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"}\")\n          ]),\n          _vm._v(\"\\n\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"}\")\n          ]),\n          _vm._v(\"\\n\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _vm._v(\"请注意，\"),\n      _c(\"code\", [_vm._v(\"themeConfig.lastUpdated\")]),\n      _vm._v(\n        \" 默认是关闭的，如果给定一个字符串，它将会作为前缀显示（默认值是：\"\n      ),\n      _c(\"code\", [_vm._v(\"Last Updated\")]),\n      _vm._v(\"）。\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"warning custom-block\" }, [\n      _c(\"p\", { staticClass: \"custom-block-title\" }, [_vm._v(\"使用须知\")]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _vm._v(\"由于 \"),\n        _c(\"code\", [_vm._v(\"lastUpdated\")]),\n        _vm._v(\" 是基于 \"),\n        _c(\"code\", [_vm._v(\"git\")]),\n        _vm._v(\" 的, 所以你只能在一个基于 \"),\n        _c(\"code\", [_vm._v(\"git\")]),\n        _vm._v(\" 的项目中启用它。\")\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h2\", { attrs: { id: \"service-worker\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#service-worker\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" Service Worker\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _c(\"code\", [_vm._v(\"themeConfig.serviceWorker\")]),\n      _vm._v(\" 允许你去配置 Service Worker。\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _vm._v(\"开启 \"),\n      _c(\"code\", [_vm._v(\"themeConfig.serviceWorker.updatePopup\")]),\n      _vm._v(\n        \" 选项，将开启一个能够刷新内容的弹窗。当网站更新（即 Service Worker 更新）时，它会提供一个 \"\n      ),\n      _c(\"code\", [_vm._v(\"refresh\")]),\n      _vm._v(\" 按钮，允许用户立刻刷新内容。\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-js extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-js\" } }, [\n        _c(\"code\", [\n          _vm._v(\"module\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\".\")\n          ]),\n          _vm._v(\"exports \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n            _vm._v(\"=\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"{\")\n          ]),\n          _vm._v(\"\\n  themeConfig\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\":\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"{\")\n          ]),\n          _vm._v(\"\\n    serviceWorker\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\":\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"{\")\n          ]),\n          _vm._v(\"\\n      updatePopup\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\":\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token boolean\" } }, [\n            _vm._v(\"true\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n            _vm._v(\"// Boolean | Object, 默认值是 undefined.\")\n          ]),\n          _vm._v(\"\\n      \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n            _vm._v(\"// 如果设置为 true, 默认的文本配置将是: \")\n          ]),\n          _vm._v(\"\\n      \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n            _vm._v(\"// updatePopup: { \")\n          ]),\n          _vm._v(\"\\n      \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n            _vm._v('//    message: \"New content is available.\", ')\n          ]),\n          _vm._v(\"\\n      \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n            _vm._v('//    buttonText: \"Refresh\" ')\n          ]),\n          _vm._v(\"\\n      \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n            _vm._v(\"// }\")\n          ]),\n          _vm._v(\"\\n    \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"}\")\n          ]),\n          _vm._v(\"\\n  \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"}\")\n          ]),\n          _vm._v(\"\\n\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"}\")\n          ]),\n          _vm._v(\"\\n\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h2\", { attrs: { id: \"上-下一篇链接\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#上-下一篇链接\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" 上 / 下一篇链接\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _vm._v(\n        \"上一篇和下一篇文章的链接将会自动地根据当前页面的侧边栏的顺序来获取。你也可以使用 \"\n      ),\n      _c(\"code\", [_vm._v(\"YAML front matter\")]),\n      _vm._v(\" 来明确地重写或者禁用它：\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-yaml extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-yaml\" } }, [\n        _c(\"code\", [\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"---\")\n          ]),\n          _vm._v(\"\\n\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token key atrule\" } }, [\n            _vm._v(\"prev\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\":\")\n          ]),\n          _vm._v(\" ./some\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"-\")\n          ]),\n          _vm._v(\"other\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"-\")\n          ]),\n          _vm._v(\"page\\n\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token key atrule\" } }, [\n            _vm._v(\"next\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\":\")\n          ]),\n          _vm._v(\" \"),\n          _c(\n            \"span\",\n            { pre: true, attrs: { class: \"token boolean important\" } },\n            [_vm._v(\"false\")]\n          ),\n          _vm._v(\"\\n\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"---\")\n          ]),\n          _vm._v(\"\\n\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h2\", { attrs: { id: \"git-仓库和编辑链接\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#git-仓库和编辑链接\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" Git 仓库和编辑链接\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _vm._v(\"当你提供了 \"),\n      _c(\"code\", [_vm._v(\"themeConfig.repo\")]),\n      _vm._v(\n        \" 选项，将会自动在每个页面的导航栏生成生成一个 GitHub 链接，以及在页面的底部生成一个 \"\n      ),\n      _c(\"code\", [_vm._v('\"Edit this page\"')]),\n      _vm._v(\" 链接。\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-js extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-js\" } }, [\n        _c(\"code\", [\n          _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n            _vm._v(\"// .vuepress/config.js\")\n          ]),\n          _vm._v(\"\\nmodule\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\".\")\n          ]),\n          _vm._v(\"exports \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n            _vm._v(\"=\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"{\")\n          ]),\n          _vm._v(\"\\n  themeConfig\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\":\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"{\")\n          ]),\n          _vm._v(\"\\n    \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n            _vm._v(\"// 假定是 GitHub. 同时也可以是一个完整的 GitLab URL\")\n          ]),\n          _vm._v(\"\\n    repo\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\":\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n            _vm._v(\"'vuejs/vuepress'\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\",\")\n          ]),\n          _vm._v(\"\\n    \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n            _vm._v(\n              \"// 自定义仓库链接文字。默认从 `themeConfig.repo` 中自动推断为\"\n            )\n          ]),\n          _vm._v(\"\\n    \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n            _vm._v('// \"GitHub\"/\"GitLab\"/\"Bitbucket\" 其中之一，或是 \"Source\"。')\n          ]),\n          _vm._v(\"\\n    repoLabel\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\":\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n            _vm._v(\"'查看源码'\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\",\")\n          ]),\n          _vm._v(\"\\n\\n    \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n            _vm._v(\"// 以下为可选的编辑链接选项\")\n          ]),\n          _vm._v(\"\\n\\n    \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n            _vm._v(\"// 假如你的文档仓库和项目本身不在一个仓库：\")\n          ]),\n          _vm._v(\"\\n    studyRepo\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\":\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n            _vm._v(\"'vuejs/vuepress'\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\",\")\n          ]),\n          _vm._v(\"\\n    \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n            _vm._v(\"// 假如文档不是放在仓库的根目录下：\")\n          ]),\n          _vm._v(\"\\n    studyDir\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\":\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n            _vm._v(\"'study'\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\",\")\n          ]),\n          _vm._v(\"\\n    \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n            _vm._v(\"// 假如文档放在一个特定的分支下：\")\n          ]),\n          _vm._v(\"\\n    studyBranch\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\":\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n            _vm._v(\"'master'\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\",\")\n          ]),\n          _vm._v(\"\\n    \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n            _vm._v(\"// 默认是 false, 设置为 true 来启用\")\n          ]),\n          _vm._v(\"\\n    editLinks\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\":\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token boolean\" } }, [\n            _vm._v(\"true\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\",\")\n          ]),\n          _vm._v(\"\\n    \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n            _vm._v('// 默认为 \"Edit this page\"')\n          ]),\n          _vm._v(\"\\n    editLinkText\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\":\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n            _vm._v(\"'帮助我们改善此页面！'\")\n          ]),\n          _vm._v(\"\\n  \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"}\")\n          ]),\n          _vm._v(\"\\n\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"}\")\n          ]),\n          _vm._v(\"\\n\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _vm._v(\"你可以通过 \"),\n      _c(\"code\", [_vm._v(\"YAML front matter\")]),\n      _vm._v(\" 来禁用指定页面的编辑链接：\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-yaml extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-yaml\" } }, [\n        _c(\"code\", [\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"---\")\n          ]),\n          _vm._v(\"\\n\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token key atrule\" } }, [\n            _vm._v(\"editLink\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\":\")\n          ]),\n          _vm._v(\" \"),\n          _c(\n            \"span\",\n            { pre: true, attrs: { class: \"token boolean important\" } },\n            [_vm._v(\"false\")]\n          ),\n          _vm._v(\"\\n\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"---\")\n          ]),\n          _vm._v(\"\\n\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h2\", { attrs: { id: \"简单的-css-覆盖\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#简单的-css-覆盖\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" 简单的 CSS 覆盖\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-stylus extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-stylus\" } }, [\n        _c(\"code\", [\n          _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n            _vm._v(\"// showing default values\")\n          ]),\n          _vm._v(\"\\n\"),\n          _c(\n            \"span\",\n            { pre: true, attrs: { class: \"token variable-declaration\" } },\n            [\n              _c(\"span\", { pre: true, attrs: { class: \"token variable\" } }, [\n                _vm._v(\"$accentColor\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n                _vm._v(\"=\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token hexcode\" } }, [\n                _vm._v(\"#3eaf7c\")\n              ])\n            ]\n          ),\n          _vm._v(\"\\n\"),\n          _c(\n            \"span\",\n            { pre: true, attrs: { class: \"token variable-declaration\" } },\n            [\n              _c(\"span\", { pre: true, attrs: { class: \"token variable\" } }, [\n                _vm._v(\"$textColor\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n                _vm._v(\"=\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token hexcode\" } }, [\n                _vm._v(\"#2c3e50\")\n              ])\n            ]\n          ),\n          _vm._v(\"\\n\"),\n          _c(\n            \"span\",\n            { pre: true, attrs: { class: \"token variable-declaration\" } },\n            [\n              _c(\"span\", { pre: true, attrs: { class: \"token variable\" } }, [\n                _vm._v(\"$borderColor\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n                _vm._v(\"=\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token hexcode\" } }, [\n                _vm._v(\"#eaecef\")\n              ])\n            ]\n          ),\n          _vm._v(\"\\n\"),\n          _c(\n            \"span\",\n            { pre: true, attrs: { class: \"token variable-declaration\" } },\n            [\n              _c(\"span\", { pre: true, attrs: { class: \"token variable\" } }, [\n                _vm._v(\"$codeBgColor\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n                _vm._v(\"=\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token hexcode\" } }, [\n                _vm._v(\"#282c34\")\n              ])\n            ]\n          ),\n          _vm._v(\"\\n\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _vm._v(\"事实上，\"),\n      _c(\"code\", [_vm._v(\"stylus 常量的 override\")]),\n      _vm._v(\n        \" 应该在编译所有 Stylus 文件之前完成；而用户额外的 CSS 样式应该生成在最终样式文件的末尾。因此，这两项职责不应该由同一个 stylus 文件来完成。\"\n      )\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _vm._v(\"从 \"),\n      _c(\"code\", [_vm._v(\"0.12.0\")]),\n      _vm._v(\" 开始，我们将 \"),\n      _c(\"code\", [_vm._v(\"override.styl\")]),\n      _vm._v(\" 拆分为两个 API：\"),\n      _c(\"code\", [_vm._v(\"override.styl\")]),\n      _vm._v(\" 和 \"),\n      _c(\"code\", [_vm._v(\"style.styl\")]),\n      _vm._v(\"。如果你过去在 \"),\n      _c(\"code\", [_vm._v(\"override.styl\")]),\n      _vm._v(\" 中书写了样式，如：\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-stylus extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-stylus\" } }, [\n        _c(\"code\", [\n          _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n            _vm._v(\"// .vuepress/override.styl\")\n          ]),\n          _vm._v(\"\\n\"),\n          _c(\n            \"span\",\n            { pre: true, attrs: { class: \"token variable-declaration\" } },\n            [\n              _c(\"span\", { pre: true, attrs: { class: \"token variable\" } }, [\n                _vm._v(\"$textColor\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n                _vm._v(\"=\")\n              ]),\n              _vm._v(\" red \")\n            ]\n          ),\n          _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n            _vm._v(\"// stylus 常量的 override\")\n          ]),\n          _vm._v(\"\\n\\n\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token selector\" } }, [\n            _vm._v(\"#my-style \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"{\")\n            ])\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"}\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n            _vm._v(\"// 你的样式\")\n          ]),\n          _vm._v(\"\\n\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _vm._v(\"你将需要将你的样式部分分离到 \"),\n      _c(\"code\", [_vm._v(\"style.styl\")]),\n      _vm._v(\":\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-stylus extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-stylus\" } }, [\n        _c(\"code\", [\n          _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n            _vm._v(\n              \"// .vuepress/override.styl，应该仅仅包含 stylus 常量的 override\"\n            )\n          ]),\n          _vm._v(\"\\n\"),\n          _c(\n            \"span\",\n            { pre: true, attrs: { class: \"token variable-declaration\" } },\n            [\n              _c(\"span\", { pre: true, attrs: { class: \"token variable\" } }, [\n                _vm._v(\"$textColor\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n                _vm._v(\"=\")\n              ]),\n              _vm._v(\" red\")\n            ]\n          ),\n          _vm._v(\"\\n\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-stylus extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-stylus\" } }, [\n        _c(\"code\", [\n          _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n            _vm._v(\"// .vuepress/style.styl，你的样式\")\n          ]),\n          _vm._v(\"\\n\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token selector\" } }, [\n            _vm._v(\"#my-style \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"{\")\n            ])\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"}\")\n          ]),\n          _vm._v(\"\\n\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h2\", { attrs: { id: \"自定义页面类\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#自定义页面类\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" 自定义页面类\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _vm._v(\n        \"有时候你可能需要为特定页面添加一个 CSS 类名，以方便针对该页面添加一些专门的 CSS。这种情况下你可以在该页面的 YAML front matter 中声明一个 \"\n      ),\n      _c(\"code\", [_vm._v(\"pageClass\")]),\n      _vm._v(\"：\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-yaml extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-yaml\" } }, [\n        _c(\"code\", [\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"---\")\n          ]),\n          _vm._v(\"\\n\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token key atrule\" } }, [\n            _vm._v(\"pageClass\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\":\")\n          ]),\n          _vm._v(\" custom\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"-\")\n          ]),\n          _vm._v(\"page\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"-\")\n          ]),\n          _vm._v(\"class\\n\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"---\")\n          ]),\n          _vm._v(\"\\n\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-css extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-css\" } }, [\n        _c(\"code\", [\n          _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n            _vm._v(\"/* .vuepress/override.styl */\")\n          ]),\n          _vm._v(\"\\n\\n\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token selector\" } }, [\n            _vm._v(\".theme-container.custom-page-class\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"{\")\n          ]),\n          _vm._v(\"\\n  \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n            _vm._v(\"/* 特定页面的 CSS */\")\n          ]),\n          _vm._v(\"\\n\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"}\")\n          ]),\n          _vm._v(\"\\n\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h2\", { attrs: { id: \"特定页面的自定义布局\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#特定页面的自定义布局\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" 特定页面的自定义布局\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _vm._v(\"默认情况下，每个 \"),\n      _c(\"code\", [_vm._v(\"*.md\")]),\n      _vm._v(\" 文件将会被渲染在一个 \"),\n      _c(\"code\", [_vm._v('<div class=\"page\">')]),\n      _vm._v(\n        \" 容器中，同时还有侧边栏、自动生成的编辑链接，以及上 / 下一篇文章的链接。如果你想要使用一个完全自定义的组件来代替当前的页面（而只保留导航栏），你可以再次使用 \"\n      ),\n      _c(\"code\", [_vm._v(\"YAML front matter\")]),\n      _vm._v(\" 来指定这个组件。\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-yaml extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-yaml\" } }, [\n        _c(\"code\", [\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"---\")\n          ]),\n          _vm._v(\"\\n\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token key atrule\" } }, [\n            _vm._v(\"layout\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\":\")\n          ]),\n          _vm._v(\" SpecialLayout\\n\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"---\")\n          ]),\n          _vm._v(\"\\n\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _vm._v(\"这将会为当前的页面渲染 \"),\n      _c(\"code\", [_vm._v(\".vuepress/components/SpecialLayout.vue\")]),\n      _vm._v(\" 布局。\")\n    ])\n  }\n]\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}