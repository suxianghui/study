{"remainingRequest":"D:\\1\\实训一\\study\\study\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!D:\\1\\实训一\\study\\study\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!D:\\1\\实训一\\study\\study\\node_modules\\vue-loader\\lib\\index.js??ref--1-1!D:\\1\\实训一\\study\\study\\lib\\webpack\\markdownLoader.js??ref--1-2!D:\\1\\实训一\\study\\study\\src\\zh\\interview\\js.md?vue&type=template&id=11fca224&","dependencies":[{"path":"D:\\1\\实训一\\study\\study\\src\\zh\\interview\\js.md","mtime":1557200317071},{"path":"D:\\1\\实训一\\study\\study\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\1\\实训一\\study\\study\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"D:\\1\\实训一\\study\\study\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\1\\实训一\\study\\study\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\1\\实训一\\study\\study\\lib\\webpack\\markdownLoader.js","mtime":1557200316988}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", { staticClass: \"content\" }, [\n    _vm._m(0),\n    _vm._v(\" \"),\n    _c(\"p\", [\n      _vm._v(\n        \"事件委托应该是前端最经常问的一个问题。\\n但其实里面有非常非常多的知识点可以考察。\"\n      )\n    ]),\n    _vm._v(\" \"),\n    _vm._m(1),\n    _vm._v(\" \"),\n    _c(\"p\", [_vm._v(\"https://www.zhihu.com/question/24702250\")]),\n    _vm._v(\" \"),\n    _vm._m(2),\n    _c(\"p\", [\n      _vm._v(\"一道有意思的面试题\\n\"),\n      _c(\n        \"a\",\n        {\n          attrs: {\n            href: \"https://juejin.im/post/5bdeb357e51d4536140fc7df\",\n            target: \"_blank\",\n            rel: \"noopener noreferrer\"\n          }\n        },\n        [_vm._v(\"100*100 的 canvas 占多少内存？\"), _c(\"OutboundLink\")],\n        1\n      )\n    ]),\n    _vm._v(\" \"),\n    _vm._m(3),\n    _vm._v(\" \"),\n    _vm._m(4),\n    _vm._v(\" \"),\n    _c(\"p\", [\n      _vm._v(\n        \"大部分情况下 typeof 是可信的，但 js 就是这样不靠谱，总是有一些边缘 case。\"\n      )\n    ]),\n    _vm._v(\" \"),\n    _vm._m(5),\n    _vm._m(6),\n    _vm._v(\" \"),\n    _vm._m(7),\n    _c(\"p\", [_vm._v(\"只有使用构造函数创建的基本类型可以正确显示。\")]),\n    _vm._v(\" \"),\n    _c(\"p\", [\n      _vm._v(\"所以到底有没有靠谱的校验类型方法？答案是有的 \"),\n      _c(\n        \"a\",\n        {\n          attrs: {\n            href: \"https://github.com/lifesinger/blog/issues/175\",\n            target: \"_blank\",\n            rel: \"noopener noreferrer\"\n          }\n        },\n        [_vm._v(\"详情见玉伯的分享\"), _c(\"OutboundLink\")],\n        1\n      )\n    ]),\n    _vm._v(\" \"),\n    _vm._m(8),\n    _c(\"p\", [_vm._v(\"附加问题：\")]),\n    _vm._v(\" \"),\n    _vm._m(9),\n    _vm._v(\" \"),\n    _vm._m(10),\n    _vm._v(\" \"),\n    _vm._m(11),\n    _vm._m(12),\n    _c(\"p\", [\n      _vm._v(\"这题是以前比较常见的变量提升的问题\\n它实际执行步骤是这样子的\")\n    ]),\n    _vm._v(\" \"),\n    _vm._m(13),\n    _c(\"p\", [\n      _vm._v(\n        \"并且 b 变成一个全局变量，而 a 还是一个局部变量，所以你在外部 console 是会报错的。\"\n      )\n    ]),\n    _vm._v(\" \"),\n    _vm._m(14),\n    _vm._v(\" \"),\n    _vm._m(15),\n    _c(\"p\", [_vm._v(\"这题是最简单的作用域问题，没啥好讨论的了。\")]),\n    _vm._v(\" \"),\n    _vm._m(16),\n    _vm._v(\" \"),\n    _c(\"p\", [\n      _vm._v(\n        \"换句话说，为什么要用立即执行函数表达式（Immediately-Invoked Function Expression）。\"\n      )\n    ]),\n    _vm._v(\" \"),\n    _c(\"p\", [\n      _vm._v(\n        \"IIFE 有两个比较经典的使用场景，一是类似于在循环中定时输出数据项，二是类似于 JQuery/Node 的插件和模块开发。\"\n      )\n    ]),\n    _vm._v(\" \"),\n    _vm._m(17),\n    _c(\"p\", [\n      _vm._v(\n        \"上面的输出并不是你以为的 0，1，2，3，4，但输出的全部是 5，这时 IIFE 就能有用了：\"\n      )\n    ]),\n    _vm._v(\" \"),\n    _vm._m(18),\n    _c(\"p\", [_vm._v(\"ES6 的话，可以用 let\")]),\n    _vm._v(\" \"),\n    _vm._m(19),\n    _c(\"p\", [\n      _vm._v(\n        \"而在 JQuery/Node 的插件和模块开发中，为避免变量污染，也是一个大大的 IIFE：\"\n      )\n    ]),\n    _vm._v(\" \"),\n    _vm._m(20),\n    _vm._m(21),\n    _vm._v(\" \"),\n    _vm._m(22),\n    _vm._v(\" \"),\n    _vm._m(23),\n    _vm._v(\" \"),\n    _vm._m(24),\n    _vm._m(25),\n    _vm._v(\" \"),\n    _vm._m(26),\n    _vm._v(\" \"),\n    _vm._m(27),\n    _vm._v(\" \"),\n    _c(\"p\", [\n      _vm._v(\n        \"NaN 是 Not a Number 的缩写，JavaScript 的一种特殊数值，其类型是 Number，可以通过 isNaN(param) 来判断一个值是否是 NaN：\"\n      )\n    ]),\n    _vm._v(\" \"),\n    _vm._m(28),\n    _c(\"p\", [\n      _vm._v(\"ES6 中，isNaN() 成为了 Number 的静态方法：Number.isNaN().\")\n    ]),\n    _vm._v(\" \"),\n    _c(\"p\", [\n      _vm._v(\n        \"它的 polyfill 实现起来也很简单--利用了 NaN 自身永不相等于自身这一特征\"\n      )\n    ]),\n    _vm._v(\" \"),\n    _vm._m(29),\n    _vm._m(30),\n    _vm._v(\" \"),\n    _vm._m(31),\n    _c(\"p\", [\n      _vm._v(\"另一道非常经典的面试题，js 精度问题 \"),\n      _c(\n        \"a\",\n        {\n          attrs: {\n            href: \"https://github.com/camsong/blog/issues/9\",\n            target: \"_blank\",\n            rel: \"noopener noreferrer\"\n          }\n        },\n        [_vm._v(\"JavaScript 浮点数陷阱及解法\"), _c(\"OutboundLink\")],\n        1\n      )\n    ]),\n    _vm._v(\" \"),\n    _vm._m(32),\n    _vm._v(\" \"),\n    _c(\"p\", [_vm._v(\"所以为什 0.1+0.2=0.30000000000000004？\\n计算步骤为：\")]),\n    _vm._v(\" \"),\n    _vm._m(33),\n    _c(\"p\", [\n      _vm._v(\"解决方案 你可以使用一些成熟的库如：\"),\n      _c(\n        \"a\",\n        {\n          attrs: {\n            href: \"https://github.com/MikeMcl/big.js\",\n            target: \"_blank\",\n            rel: \"noopener noreferrer\"\n          }\n        },\n        [_vm._v(\"big.js\"), _c(\"OutboundLink\")],\n        1\n      ),\n      _vm._v(\"，\"),\n      _c(\n        \"a\",\n        {\n          attrs: {\n            href: \"https://github.com/MikeMcl/bignumber.js\",\n            target: \"_blank\",\n            rel: \"noopener noreferrer\"\n          }\n        },\n        [_vm._v(\"bignumber.js\"), _c(\"OutboundLink\")],\n        1\n      ),\n      _vm._v(\"。\\n或者对精度要求不高的情况下 直接 \"),\n      _c(\"code\", [_vm._v(\"toFixed\")]),\n      _vm._v(\"就可以了。\")\n    ]),\n    _vm._v(\" \"),\n    _c(\"p\", [_vm._v(\"不过注意它得到的值可能是不准确的。\")]),\n    _vm._v(\" \"),\n    _c(\"p\", [_vm._v(\"如：1.005.toFixed(2) 返回的是 1.00 而不是 1.01。\")]),\n    _vm._v(\" \"),\n    _c(\"p\", [\n      _vm._v(\n        \"原因： 1.005 实际对应的数字是 1.00499999999999989，在四舍五入时全部被舍去！\"\n      )\n    ]),\n    _vm._v(\" \"),\n    _vm._m(34),\n    _vm._v(\" \"),\n    _c(\"p\", [_vm._v(\"可以将 x 转换成 10 进制，判断和本身是不是相等即可：\")]),\n    _vm._v(\" \"),\n    _vm._m(35),\n    _vm._m(36),\n    _vm._v(\" \"),\n    _vm._m(37),\n    _c(\"p\", [\n      _vm._v(\"最简单的运行提了，如果这都不会的话，真应该好好补习补习基础了。\")\n    ]),\n    _vm._v(\" \"),\n    _vm._m(38),\n    _vm._v(\" \"),\n    _vm._m(39),\n    _vm._m(40),\n    _vm._v(\" \"),\n    _vm._m(41),\n    _vm._m(42),\n    _vm._v(\" \"),\n    _vm._m(43),\n    _c(\"p\", [_vm._v(\"没啥难度，不说了\")]),\n    _vm._v(\" \"),\n    _vm._m(44),\n    _vm._v(\" \"),\n    _vm._m(45),\n    _c(\"p\", [\n      _vm._v(\n        \"这个主要考察的隐式转换，规则太多太复杂了，我也记不住，如果真有面试官问你这个的话，随缘吧。\"\n      )\n    ]),\n    _vm._v(\" \"),\n    _vm._m(46),\n    _vm._v(\" \"),\n    _vm._m(47),\n    _c(\"p\", [\n      _vm._v(\n        \"运算符优先级的问题，这题同上，遇到就随缘吧，我反正搞不清也记不住。\"\n      )\n    ]),\n    _vm._v(\" \"),\n    _vm._m(48),\n    _vm._v(\" \"),\n    _vm._m(49),\n    _vm._m(50),\n    _vm._v(\" \"),\n    _vm._m(51),\n    _vm._v(\" \"),\n    _vm._m(52),\n    _vm._v(\" \"),\n    _vm._m(53),\n    _vm._v(\" \"),\n    _c(\"p\", [_vm._v(\"首先解释一下为什么会卡顿：\")]),\n    _vm._v(\" \"),\n    _vm._m(54),\n    _vm._v(\" \"),\n    _vm._m(55),\n    _vm._v(\" \"),\n    _vm._m(56)\n  ])\n}\nvar staticRenderFns = [\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h1\", { attrs: { id: \"常规面试题\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#常规面试题\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" 常规面试题\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"ul\", [\n      _c(\"li\", [_vm._v(\"css last-of-type last-child\")]),\n      _vm._v(\" \"),\n      _c(\"li\", [_vm._v(\"事件委托的好处\")]),\n      _vm._v(\" \"),\n      _c(\"li\", [_vm._v(\"addEventListener 第三个参数\")]),\n      _vm._v(\" \"),\n      _c(\"li\", [_vm._v(\"实现 index\")]),\n      _vm._v(\" \"),\n      _c(\"li\", [_vm._v(\"类数组 => 数组\")]),\n      _vm._v(\" \"),\n      _c(\"li\", [\n        _vm._v(\"querySelectorAll 方法相比 getElementsBy 系列方法有什么区别\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"li\", [_vm._v(\"HTMLCollection NodeList 区别\")])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-js extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-js\" } }, [\n        _c(\"code\", [\n          _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n            _vm._v(\"const\")\n          ]),\n          _vm._v(\" ul \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n            _vm._v(\"=\")\n          ]),\n          _vm._v(\" window\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\".\")\n          ]),\n          _vm._v(\"document\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\".\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n            _vm._v(\"getElementsByTagName\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"(\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n            _vm._v(\"'ul'\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\")\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"[\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token number\" } }, [\n            _vm._v(\"0\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"]\")\n          ]),\n          _vm._v(\"\\nul\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\".\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n            _vm._v(\"addEventListener\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"(\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n            _vm._v(\"'click'\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\",\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token parameter\" } }, [\n            _vm._v(\"e\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n            _vm._v(\"=>\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"{\")\n          ]),\n          _vm._v(\"\\n  \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n            _vm._v(\"const\")\n          ]),\n          _vm._v(\" children \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n            _vm._v(\"=\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"[\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n            _vm._v(\"...\")\n          ]),\n          _vm._v(\"ul\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\".\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n            _vm._v(\"getElementsByTagName\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"(\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n            _vm._v(\"'li'\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\")\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"]\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n            _vm._v(\"//htmlCollection => array\")\n          ]),\n          _vm._v(\"\\n  \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n            _vm._v(\"if\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"(\")\n          ]),\n          _vm._v(\"e\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\".\")\n          ]),\n          _vm._v(\"target \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n            _vm._v(\"&&\")\n          ]),\n          _vm._v(\" e\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\".\")\n          ]),\n          _vm._v(\"target\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\".\")\n          ]),\n          _vm._v(\"nodeName\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\".\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n            _vm._v(\"toLowerCase\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"(\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\")\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n            _vm._v(\"===\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n            _vm._v(\"'li'\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\")\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"{\")\n          ]),\n          _vm._v(\"\\n    \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n            _vm._v(\"const\")\n          ]),\n          _vm._v(\" index \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n            _vm._v(\"=\")\n          ]),\n          _vm._v(\" children\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\".\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n            _vm._v(\"indexOf\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"(\")\n          ]),\n          _vm._v(\"e\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\".\")\n          ]),\n          _vm._v(\"target\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\")\")\n          ]),\n          _vm._v(\"\\n    console\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\".\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n            _vm._v(\"log\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"(\")\n          ]),\n          _vm._v(\"index\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\")\")\n          ]),\n          _vm._v(\"\\n  \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"}\")\n          ]),\n          _vm._v(\"\\n\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"}\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\")\")\n          ]),\n          _vm._v(\"\\n\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h2\", { attrs: { id: \"你有必要知道的几个-javascript-面试题\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: {\n            href: \"#你有必要知道的几个-javascript-面试题\",\n            \"aria-hidden\": \"true\"\n          }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" 你有必要知道的几个 JavaScript 面试题\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\n      \"h3\",\n      {\n        attrs: {\n          id:\n            \"_1-使用-typeof-bar-object-判断-bar-是不是一个对象有神马潜在的弊端？如何避免这种弊端？\"\n        }\n      },\n      [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: {\n              href:\n                \"#_1-使用-typeof-bar-object-判断-bar-是不是一个对象有神马潜在的弊端？如何避免这种弊端？\",\n              \"aria-hidden\": \"true\"\n            }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\n          ' 1. 使用 typeof bar === \"object\" 判断 bar 是不是一个对象有神马潜在的弊端？如何避免这种弊端？'\n        )\n      ]\n    )\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-js extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-js\" } }, [\n        _c(\"code\", [\n          _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n            _vm._v(\"typeof\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"{\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"}\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n            _vm._v(\"//'object'\")\n          ]),\n          _vm._v(\"\\n\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n            _vm._v(\"typeof\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"[\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"]\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n            _vm._v(\"//'object'\")\n          ]),\n          _vm._v(\"\\n\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n            _vm._v(\"typeof\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n            _vm._v(\"null\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n            _vm._v(\"//'object'\")\n          ]),\n          _vm._v(\"\\n\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n            _vm._v(\"typeof\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n            _vm._v(\"new\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token class-name\" } }, [\n            _vm._v(\"String\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"(\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\")\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n            _vm._v(\"//'object'\")\n          ]),\n          _vm._v(\"\\n\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n            _vm._v(\"typeof\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token number\" } }, [\n            _vm._v(\"NaN\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n            _vm._v(\"//'number'\")\n          ]),\n          _vm._v(\"\\n\\n\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n            _vm._v(\"const\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n            _vm._v(\"var\")\n          ]),\n          _vm._v(\" reg \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n            _vm._v(\"=\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token regex\" } }, [\n            _vm._v(\"/pop/g\")\n          ]),\n          _vm._v(\"\\n\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n            _vm._v(\"typeof\")\n          ]),\n          _vm._v(\" reg \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n            _vm._v(\"//'object'\")\n          ]),\n          _vm._v(\"\\n\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _vm._v(\"这时候你可以说使用 \"),\n      _c(\"code\", [_vm._v(\"instanceof\")]),\n      _vm._v(\n        \"。但 instanceof 运算符用来检测 constructor.prototype 是否存在于参数 object 的原型。\\n简而言之就是\"\n      )\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-js extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-js\" } }, [\n        _c(\"code\", [\n          _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n            _vm._v(\"''\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n            _vm._v(\"instanceof\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token class-name\" } }, [\n            _vm._v(\"String\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n            _vm._v(\"//false\")\n          ]),\n          _vm._v(\"\\n\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n            _vm._v(\"new\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token class-name\" } }, [\n            _vm._v(\"String\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"(\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\")\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n            _vm._v(\"instanceof\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token class-name\" } }, [\n            _vm._v(\"String\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n            _vm._v(\"//true\")\n          ]),\n          _vm._v(\"\\n\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n            _vm._v(\"new\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token class-name\" } }, [\n            _vm._v(\"String\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"(\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\")\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n            _vm._v(\"instanceof\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token class-name\" } }, [\n            _vm._v(\"Object\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n            _vm._v(\"//true\")\n          ]),\n          _vm._v(\"\\n\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-js extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-js\" } }, [\n        _c(\"code\", [\n          _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n            _vm._v(\"var\")\n          ]),\n          _vm._v(\" toString \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n            _vm._v(\"=\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token class-name\" } }, [\n            _vm._v(\"Object\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\".\")\n          ]),\n          _vm._v(\"prototype\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\".\")\n          ]),\n          _vm._v(\"toString\\n\\n\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n            _vm._v(\"function\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n            _vm._v(\"isObject\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"(\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token parameter\" } }, [\n            _vm._v(\"obj\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\")\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"{\")\n          ]),\n          _vm._v(\"\\n  \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n            _vm._v(\"return\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n            _vm._v(\"toString\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\".\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n            _vm._v(\"call\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"(\")\n          ]),\n          _vm._v(\"obj\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\")\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n            _vm._v(\"===\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n            _vm._v(\"'[object Object]'\")\n          ]),\n          _vm._v(\"\\n\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"}\")\n          ]),\n          _vm._v(\"\\n\\n\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n            _vm._v(\"function\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n            _vm._v(\"isString\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"(\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token parameter\" } }, [\n            _vm._v(\"obj\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\")\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"{\")\n          ]),\n          _vm._v(\"\\n  \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n            _vm._v(\"return\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n            _vm._v(\"toString\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\".\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n            _vm._v(\"call\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"(\")\n          ]),\n          _vm._v(\"obj\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\")\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n            _vm._v(\"===\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n            _vm._v(\"'[object String]'\")\n          ]),\n          _vm._v(\"\\n\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"}\")\n          ]),\n          _vm._v(\"\\n\\n\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n            _vm._v(\"function\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n            _vm._v(\"isArray\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"(\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token parameter\" } }, [\n            _vm._v(\"obj\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\")\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"{\")\n          ]),\n          _vm._v(\"\\n  \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n            _vm._v(\"return\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n            _vm._v(\"toString\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\".\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n            _vm._v(\"call\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"(\")\n          ]),\n          _vm._v(\"obj\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\")\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n            _vm._v(\"===\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n            _vm._v(\"'[object Array]'\")\n          ]),\n          _vm._v(\"\\n\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"}\")\n          ]),\n          _vm._v(\"\\n\\n\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n            _vm._v(\"function\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n            _vm._v(\"isFunction\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"(\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token parameter\" } }, [\n            _vm._v(\"obj\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\")\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"{\")\n          ]),\n          _vm._v(\"\\n  \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n            _vm._v(\"return\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n            _vm._v(\"toString\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\".\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n            _vm._v(\"call\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"(\")\n          ]),\n          _vm._v(\"obj\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\")\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n            _vm._v(\"===\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n            _vm._v(\"'[object Function]'\")\n          ]),\n          _vm._v(\"\\n\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"}\")\n          ]),\n          _vm._v(\"\\n\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"ul\", [\n      _c(\"li\", [\n        _vm._v(\n          '我们知道 typeof new String(\"xxx\") 返回 \"object\"，请问 typeof String(\"xxx\") 返回什么？为什么？\\n返回\"string\"，因为直接调用 String 返回的是一个字符串，而 new String 返回的是一个 String 对象。'\n        )\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\n      \"h3\",\n      { attrs: { id: \"_2-下面的代码会在-console-输出神马？为什么？\" } },\n      [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: {\n              href: \"#_2-下面的代码会在-console-输出神马？为什么？\",\n              \"aria-hidden\": \"true\"\n            }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" 2. 下面的代码会在 console 输出神马？为什么？\")\n      ]\n    )\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-js extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-js\" } }, [\n        _c(\"code\", [\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\";\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"(\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n            _vm._v(\"function\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"(\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\")\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"{\")\n          ]),\n          _vm._v(\"\\n  \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n            _vm._v(\"var\")\n          ]),\n          _vm._v(\" a \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n            _vm._v(\"=\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"(\")\n          ]),\n          _vm._v(\"b \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n            _vm._v(\"=\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token number\" } }, [\n            _vm._v(\"3\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\")\")\n          ]),\n          _vm._v(\"\\n\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"}\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\")\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"(\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\")\")\n          ]),\n          _vm._v(\"\\n\\nconsole\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\".\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n            _vm._v(\"log\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"(\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n            _vm._v(\"typeof\")\n          ]),\n          _vm._v(\" a\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\")\")\n          ]),\n          _vm._v(\"\\nconsole\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\".\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n            _vm._v(\"log\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"(\")\n          ]),\n          _vm._v(\"b\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\")\")\n          ]),\n          _vm._v(\"\\n\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-js extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-js\" } }, [\n        _c(\"code\", [\n          _vm._v(\"console\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\".\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n            _vm._v(\"log\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"(\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n            _vm._v(\"typeof\")\n          ]),\n          _vm._v(\" a\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\")\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n            _vm._v(\"//undefined\")\n          ]),\n          _vm._v(\"\\nconsole\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\".\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n            _vm._v(\"log\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"(\")\n          ]),\n          _vm._v(\"b\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\")\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n            _vm._v(\"//3\")\n          ]),\n          _vm._v(\"\\n\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-js extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-js\" } }, [\n        _c(\"code\", [\n          _vm._v(\"b \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n            _vm._v(\"=\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token number\" } }, [\n            _vm._v(\"3\")\n          ]),\n          _vm._v(\"\\n\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n            _vm._v(\"var\")\n          ]),\n          _vm._v(\" a \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n            _vm._v(\"=\")\n          ]),\n          _vm._v(\" b\\n\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\n      \"h3\",\n      { attrs: { id: \"_3-下面的代码会在-console-输出神马？为什么？\" } },\n      [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: {\n              href: \"#_3-下面的代码会在-console-输出神马？为什么？\",\n              \"aria-hidden\": \"true\"\n            }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" 3. 下面的代码会在 console 输出神马？为什么？\")\n      ]\n    )\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-js extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-js\" } }, [\n        _c(\"code\", [\n          _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n            _vm._v(\"var\")\n          ]),\n          _vm._v(\" myObject \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n            _vm._v(\"=\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"{\")\n          ]),\n          _vm._v(\"\\n  foo\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\":\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n            _vm._v(\"'bar'\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\",\")\n          ]),\n          _vm._v(\"\\n  \"),\n          _c(\n            \"span\",\n            { pre: true, attrs: { class: \"token function-variable function\" } },\n            [_vm._v(\"func\")]\n          ),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\":\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n            _vm._v(\"function\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"(\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\")\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"{\")\n          ]),\n          _vm._v(\"\\n    \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n            _vm._v(\"var\")\n          ]),\n          _vm._v(\" self \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n            _vm._v(\"=\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n            _vm._v(\"this\")\n          ]),\n          _vm._v(\"\\n    console\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\".\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n            _vm._v(\"log\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"(\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n            _vm._v(\"'outer func:  this.foo = '\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n            _vm._v(\"+\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n            _vm._v(\"this\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\".\")\n          ]),\n          _vm._v(\"foo\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\")\")\n          ]),\n          _vm._v(\"\\n    console\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\".\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n            _vm._v(\"log\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"(\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n            _vm._v(\"'outer func:  self.foo = '\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n            _vm._v(\"+\")\n          ]),\n          _vm._v(\" self\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\".\")\n          ]),\n          _vm._v(\"foo\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\")\")\n          ]),\n          _vm._v(\"\\n    \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\";\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"(\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n            _vm._v(\"function\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"(\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\")\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"{\")\n          ]),\n          _vm._v(\"\\n      console\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\".\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n            _vm._v(\"log\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"(\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n            _vm._v(\"'inner func:  this.foo = '\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n            _vm._v(\"+\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n            _vm._v(\"this\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\".\")\n          ]),\n          _vm._v(\"foo\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\")\")\n          ]),\n          _vm._v(\"\\n      console\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\".\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n            _vm._v(\"log\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"(\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n            _vm._v(\"'inner func:  self.foo = '\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n            _vm._v(\"+\")\n          ]),\n          _vm._v(\" self\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\".\")\n          ]),\n          _vm._v(\"foo\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\")\")\n          ]),\n          _vm._v(\"\\n    \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"}\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\")\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"(\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\")\")\n          ]),\n          _vm._v(\"\\n  \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"}\")\n          ]),\n          _vm._v(\"\\n\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"}\")\n          ]),\n          _vm._v(\"\\nmyObject\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\".\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n            _vm._v(\"func\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"(\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\")\")\n          ]),\n          _vm._v(\"\\n\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\n      \"h3\",\n      {\n        attrs: {\n          id:\n            \"_4-将-javascript-代码包含在一个函数块中有神马意思呢？为什么要这么做？\"\n        }\n      },\n      [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: {\n              href:\n                \"#_4-将-javascript-代码包含在一个函数块中有神马意思呢？为什么要这么做？\",\n              \"aria-hidden\": \"true\"\n            }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\n          \" 4. 将 JavaScript 代码包含在一个函数块中有神马意思呢？为什么要这么做？\"\n        )\n      ]\n    )\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-js extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-js\" } }, [\n        _c(\"code\", [\n          _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n            _vm._v(\"for\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"(\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n            _vm._v(\"var\")\n          ]),\n          _vm._v(\" i \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n            _vm._v(\"=\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token number\" } }, [\n            _vm._v(\"0\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\";\")\n          ]),\n          _vm._v(\" i \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n            _vm._v(\"<\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token number\" } }, [\n            _vm._v(\"5\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\";\")\n          ]),\n          _vm._v(\" i\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n            _vm._v(\"++\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\")\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"{\")\n          ]),\n          _vm._v(\"\\n  \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n            _vm._v(\"setTimeout\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"(\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n            _vm._v(\"function\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"(\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\")\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"{\")\n          ]),\n          _vm._v(\"\\n    console\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\".\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n            _vm._v(\"log\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"(\")\n          ]),\n          _vm._v(\"i\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\")\")\n          ]),\n          _vm._v(\"\\n  \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"}\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\",\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token number\" } }, [\n            _vm._v(\"1000\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\")\")\n          ]),\n          _vm._v(\"\\n\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"}\")\n          ]),\n          _vm._v(\"\\n\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-js extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-js\" } }, [\n        _c(\"code\", [\n          _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n            _vm._v(\"for\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"(\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n            _vm._v(\"var\")\n          ]),\n          _vm._v(\" i \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n            _vm._v(\"=\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token number\" } }, [\n            _vm._v(\"0\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\";\")\n          ]),\n          _vm._v(\" i \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n            _vm._v(\"<\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token number\" } }, [\n            _vm._v(\"5\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\";\")\n          ]),\n          _vm._v(\" i\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n            _vm._v(\"++\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\")\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"{\")\n          ]),\n          _vm._v(\"\\n  \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\";\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"(\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n            _vm._v(\"function\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"(\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token parameter\" } }, [\n            _vm._v(\"i\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\")\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"{\")\n          ]),\n          _vm._v(\"\\n    \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n            _vm._v(\"setTimeout\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"(\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n            _vm._v(\"function\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"(\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\")\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"{\")\n          ]),\n          _vm._v(\"\\n      console\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\".\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n            _vm._v(\"log\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"(\")\n          ]),\n          _vm._v(\"i\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\")\")\n          ]),\n          _vm._v(\"\\n    \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"}\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\",\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token number\" } }, [\n            _vm._v(\"1000\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\")\")\n          ]),\n          _vm._v(\"\\n  \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"}\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\")\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"(\")\n          ]),\n          _vm._v(\"i\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\")\")\n          ]),\n          _vm._v(\"\\n\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"}\")\n          ]),\n          _vm._v(\"\\n\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-js extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-js\" } }, [\n        _c(\"code\", [\n          _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n            _vm._v(\"for\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"(\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n            _vm._v(\"let\")\n          ]),\n          _vm._v(\" i \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n            _vm._v(\"=\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token number\" } }, [\n            _vm._v(\"0\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\";\")\n          ]),\n          _vm._v(\" i \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n            _vm._v(\"<\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token number\" } }, [\n            _vm._v(\"5\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\";\")\n          ]),\n          _vm._v(\" i\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n            _vm._v(\"++\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\")\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"{\")\n          ]),\n          _vm._v(\"\\n  \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n            _vm._v(\"setTimeout\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"(\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n            _vm._v(\"function\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"(\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\")\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"{\")\n          ]),\n          _vm._v(\"\\n    console\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\".\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n            _vm._v(\"log\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"(\")\n          ]),\n          _vm._v(\"i\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\")\")\n          ]),\n          _vm._v(\"\\n  \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"}\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\",\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token number\" } }, [\n            _vm._v(\"1000\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\")\")\n          ]),\n          _vm._v(\"\\n\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"}\")\n          ]),\n          _vm._v(\"\\n\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-js extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-js\" } }, [\n        _c(\"code\", [\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\";\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"(\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n            _vm._v(\"function\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"(\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token parameter\" } }, [\n            _vm._v(\"$\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\")\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"{\")\n          ]),\n          _vm._v(\"\\n  \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n            _vm._v(\"//代码\")\n          ]),\n          _vm._v(\"\\n\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"}\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\")\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"(\")\n          ]),\n          _vm._v(\"jQuery\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\")\")\n          ]),\n          _vm._v(\"\\n\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\n      \"h3\",\n      {\n        attrs: {\n          id: \"_5-在严格模式-use-strict-下进行-javascript-开发有神马好处？\"\n        }\n      },\n      [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: {\n              href:\n                \"#_5-在严格模式-use-strict-下进行-javascript-开发有神马好处？\",\n              \"aria-hidden\": \"true\"\n            }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" 5. 在严格模式('use strict')下进行 JavaScript 开发有神马好处？\")\n      ]\n    )\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"ul\", [\n      _c(\"li\", [\n        _vm._v(\n          \"消除 Javascript 语法的一些不合理、不严谨之处，减少一些怪异行为;\"\n        )\n      ]),\n      _vm._v(\" \"),\n      _c(\"li\", [_vm._v(\"消除代码运行的一些不安全之处，保证代码运行的安全；\")]),\n      _vm._v(\" \"),\n      _c(\"li\", [_vm._v(\"提高编译器效率，增加运行速度；\")]),\n      _vm._v(\" \"),\n      _c(\"li\", [_vm._v(\"为未来新版本的 Javascript 做好铺垫。\")])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\n      \"h3\",\n      { attrs: { id: \"_6-下面两个函数的返回值是一样的吗？为什么？\" } },\n      [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: {\n              href: \"#_6-下面两个函数的返回值是一样的吗？为什么？\",\n              \"aria-hidden\": \"true\"\n            }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" 6. 下面两个函数的返回值是一样的吗？为什么？\")\n      ]\n    )\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-js extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-js\" } }, [\n        _c(\"code\", [\n          _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n            _vm._v(\"function\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n            _vm._v(\"foo1\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"(\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\")\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"{\")\n          ]),\n          _vm._v(\"\\n  \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n            _vm._v(\"return\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"{\")\n          ]),\n          _vm._v(\"\\n    bar\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\":\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n            _vm._v(\"'hello'\")\n          ]),\n          _vm._v(\"\\n  \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"}\")\n          ]),\n          _vm._v(\"\\n\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"}\")\n          ]),\n          _vm._v(\"\\n\\n\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n            _vm._v(\"function\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n            _vm._v(\"foo2\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"(\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\")\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"{\")\n          ]),\n          _vm._v(\"\\n  \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n            _vm._v(\"return\")\n          ]),\n          _vm._v(\"\\n  \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"{\")\n          ]),\n          _vm._v(\"\\n    bar\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\":\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n            _vm._v(\"'hello'\")\n          ]),\n          _vm._v(\"\\n  \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"}\")\n          ]),\n          _vm._v(\"\\n\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"}\")\n          ]),\n          _vm._v(\"\\n\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _vm._v(\n        \"对于 return 、break、continue 等语句，如果后面紧跟换行，解析器一定会自动在后面填充分号(😉，所以上面的第二个函数就直接被 \"\n      ),\n      _c(\"code\", [_vm._v(\"return\")]),\n      _vm._v(\"了。\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _vm._v(\"所以第二个函数是返回 \"),\n      _c(\"code\", [_vm._v(\"undefined\")]),\n      _vm._v(\"。\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\n      \"h3\",\n      {\n        attrs: {\n          id: \"_7-神马是-nan，它的类型是神马？怎么测试一个值是否等于-nan\"\n        }\n      },\n      [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: {\n              href:\n                \"#_7-神马是-nan，它的类型是神马？怎么测试一个值是否等于-nan\",\n              \"aria-hidden\": \"true\"\n            }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" 7. 神马是 NaN，它的类型是神马？怎么测试一个值是否等于 NaN?\")\n      ]\n    )\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-js extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-js\" } }, [\n        _c(\"code\", [\n          _vm._v(\"console\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\".\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n            _vm._v(\"log\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"(\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n            _vm._v(\"isNaN\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"(\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token number\" } }, [\n            _vm._v(\"NaN\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\")\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\")\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n            _vm._v(\"//true\")\n          ]),\n          _vm._v(\"\\nconsole\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\".\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n            _vm._v(\"log\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"(\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n            _vm._v(\"isNaN\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"(\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token number\" } }, [\n            _vm._v(\"23\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\")\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\")\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n            _vm._v(\"//false\")\n          ]),\n          _vm._v(\"\\nconsole\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\".\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n            _vm._v(\"log\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"(\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n            _vm._v(\"isNaN\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"(\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n            _vm._v(\"'23'\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\")\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\")\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n            _vm._v(\"//false 因为执行的时候先回转化为数字 所以 '23'=> 23\")\n          ]),\n          _vm._v(\"\\nconsole\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\".\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n            _vm._v(\"log\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"(\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n            _vm._v(\"isNaN\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"(\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n            _vm._v(\"'ds'\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\")\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\")\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n            _vm._v(\"//true\")\n          ]),\n          _vm._v(\"\\nconsole\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\".\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n            _vm._v(\"log\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"(\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n            _vm._v(\"isNaN\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"(\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n            _vm._v(\"'32131sdasd'\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\")\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\")\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n            _vm._v('//true 先回 Number(\"123ABC\") 结果是 NaN')\n          ]),\n          _vm._v(\"\\nconsole\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\".\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n            _vm._v(\"log\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"(\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token number\" } }, [\n            _vm._v(\"NaN\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n            _vm._v(\"===\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token number\" } }, [\n            _vm._v(\"NaN\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\")\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n            _vm._v(\"//false\")\n          ]),\n          _vm._v(\"\\nconsole\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\".\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n            _vm._v(\"log\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"(\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token number\" } }, [\n            _vm._v(\"NaN\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n            _vm._v(\"===\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n            _vm._v(\"undefined\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\")\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n            _vm._v(\"//false\")\n          ]),\n          _vm._v(\"\\nconsole\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\".\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n            _vm._v(\"log\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"(\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n            _vm._v(\"undefined\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n            _vm._v(\"===\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n            _vm._v(\"undefined\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\")\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n            _vm._v(\"//false\")\n          ]),\n          _vm._v(\"\\nconsole\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\".\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n            _vm._v(\"log\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"(\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n            _vm._v(\"typeof\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token number\" } }, [\n            _vm._v(\"NaN\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\")\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n            _vm._v(\"//number\")\n          ]),\n          _vm._v(\"\\nconsole\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\".\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n            _vm._v(\"log\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"(\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token class-name\" } }, [\n            _vm._v(\"Object\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\".\")\n          ]),\n          _vm._v(\"prototype\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\".\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n            _vm._v(\"toString\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\".\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n            _vm._v(\"call\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"(\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token number\" } }, [\n            _vm._v(\"NaN\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\")\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\")\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n            _vm._v(\"//[object Number]\")\n          ]),\n          _vm._v(\"\\n\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-js extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-js\" } }, [\n        _c(\"code\", [\n          _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n            _vm._v(\"const\")\n          ]),\n          _vm._v(\" \"),\n          _c(\n            \"span\",\n            { pre: true, attrs: { class: \"token function-variable function\" } },\n            [_vm._v(\"isNaN\")]\n          ),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n            _vm._v(\"=\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n            _vm._v(\"function\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"(\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token parameter\" } }, [\n            _vm._v(\"value\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\")\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"{\")\n          ]),\n          _vm._v(\"\\n  \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n            _vm._v(\"const\")\n          ]),\n          _vm._v(\" n \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n            _vm._v(\"=\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n            _vm._v(\"Number\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"(\")\n          ]),\n          _vm._v(\"value\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\")\")\n          ]),\n          _vm._v(\"\\n  \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n            _vm._v(\"return\")\n          ]),\n          _vm._v(\" n \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n            _vm._v(\"!==\")\n          ]),\n          _vm._v(\" n\\n\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"}\")\n          ]),\n          _vm._v(\"\\n\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h3\", { attrs: { id: \"_8-解释一下下面代码的输出\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#_8-解释一下下面代码的输出\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" 8. 解释一下下面代码的输出\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-js extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-js\" } }, [\n        _c(\"code\", [\n          _vm._v(\"console\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\".\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n            _vm._v(\"log\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"(\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token number\" } }, [\n            _vm._v(\"0.1\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n            _vm._v(\"+\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token number\" } }, [\n            _vm._v(\"0.2\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\")\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n            _vm._v(\"//0.30000000000000004\")\n          ]),\n          _vm._v(\"\\nconsole\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\".\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n            _vm._v(\"log\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"(\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token number\" } }, [\n            _vm._v(\"0.1\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n            _vm._v(\"+\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token number\" } }, [\n            _vm._v(\"0.2\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n            _vm._v(\"==\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token number\" } }, [\n            _vm._v(\"0.3\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\")\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n            _vm._v(\"//false\")\n          ]),\n          _vm._v(\"\\n\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _vm._v(\"JavaScript 存储任何数字都是遵循 \"),\n      _c(\"code\", [_vm._v(\"IEEE-754\")]),\n      _vm._v(\n        \" 标准，使用 64 位固定长度来表示，也就是标准的 double 双精度浮点数。\"\n      )\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-js extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-js\" } }, [\n        _c(\"code\", [\n          _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n            _vm._v(\"// 0.1 和 0.2 都转化成二进制后再进行运算\")\n          ]),\n          _vm._v(\"\\n\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token number\" } }, [\n            _vm._v(\"0.00011001100110011001100110011001100110011001100110011010\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n            _vm._v(\"+\")\n          ]),\n          _vm._v(\"\\n\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token number\" } }, [\n            _vm._v(\"0.0011001100110011001100110011001100110011001100110011010\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n            _vm._v(\"=\")\n          ]),\n          _vm._v(\"\\n\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token number\" } }, [\n            _vm._v(\"0.0100110011001100110011001100110011001100110011001100111\")\n          ]),\n          _vm._v(\"\\n\\n\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n            _vm._v(\"// 转成十进制正好是 0.30000000000000004\")\n          ]),\n          _vm._v(\"\\n\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\n      \"h3\",\n      { attrs: { id: \"_9-实现函数-isinteger-x-来判断-x-是否是整数\" } },\n      [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: {\n              href: \"#_9-实现函数-isinteger-x-来判断-x-是否是整数\",\n              \"aria-hidden\": \"true\"\n            }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" 9. 实现函数 isInteger(x) 来判断 x 是否是整数\")\n      ]\n    )\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-js extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-js\" } }, [\n        _c(\"code\", [\n          _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n            _vm._v(\"function\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n            _vm._v(\"isInteger\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"(\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token parameter\" } }, [\n            _vm._v(\"x\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\")\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"{\")\n          ]),\n          _vm._v(\"\\n  \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n            _vm._v(\"return\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n            _vm._v(\"parseInt\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"(\")\n          ]),\n          _vm._v(\"x\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\",\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token number\" } }, [\n            _vm._v(\"10\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\")\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n            _vm._v(\"===\")\n          ]),\n          _vm._v(\" x\\n\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"}\")\n          ]),\n          _vm._v(\"\\n\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\n      \"h3\",\n      {\n        attrs: {\n          id:\n            \"_10-在下面的代码中，数字-1-4-会以什么顺序输出？为什么会这样输出？\"\n        }\n      },\n      [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: {\n              href:\n                \"#_10-在下面的代码中，数字-1-4-会以什么顺序输出？为什么会这样输出？\",\n              \"aria-hidden\": \"true\"\n            }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\n          \" 10. 在下面的代码中，数字 1-4 会以什么顺序输出？为什么会这样输出？\"\n        )\n      ]\n    )\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-js extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-js\" } }, [\n        _c(\"code\", [\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\";\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"(\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n            _vm._v(\"function\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"(\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\")\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"{\")\n          ]),\n          _vm._v(\"\\n  console\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\".\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n            _vm._v(\"log\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"(\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token number\" } }, [\n            _vm._v(\"1\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\")\")\n          ]),\n          _vm._v(\"\\n  \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n            _vm._v(\"setTimeout\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"(\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n            _vm._v(\"function\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"(\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\")\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"{\")\n          ]),\n          _vm._v(\"\\n    console\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\".\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n            _vm._v(\"log\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"(\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token number\" } }, [\n            _vm._v(\"2\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\")\")\n          ]),\n          _vm._v(\"\\n  \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"}\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\",\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token number\" } }, [\n            _vm._v(\"1000\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\")\")\n          ]),\n          _vm._v(\"\\n  \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n            _vm._v(\"setTimeout\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"(\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n            _vm._v(\"function\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"(\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\")\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"{\")\n          ]),\n          _vm._v(\"\\n    console\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\".\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n            _vm._v(\"log\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"(\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token number\" } }, [\n            _vm._v(\"3\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\")\")\n          ]),\n          _vm._v(\"\\n  \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"}\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\",\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token number\" } }, [\n            _vm._v(\"0\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\")\")\n          ]),\n          _vm._v(\"\\n  console\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\".\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n            _vm._v(\"log\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"(\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token number\" } }, [\n            _vm._v(\"4\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\")\")\n          ]),\n          _vm._v(\"\\n\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"}\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\")\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"(\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\")\")\n          ]),\n          _vm._v(\"\\n\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h3\", { attrs: { id: \"_11-判断一个字符串是不是回文字符串\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: {\n            href: \"#_11-判断一个字符串是不是回文字符串\",\n            \"aria-hidden\": \"true\"\n          }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" 11. 判断一个字符串是不是回文字符串\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-js extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-js\" } }, [\n        _c(\"code\", [\n          _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n            _vm._v(\"function\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n            _vm._v(\"isPalindrome\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"(\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token parameter\" } }, [\n            _vm._v(\"str\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\")\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"{\")\n          ]),\n          _vm._v(\"\\n  str \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n            _vm._v(\"=\")\n          ]),\n          _vm._v(\" str\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\".\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n            _vm._v(\"replace\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"(\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token regex\" } }, [\n            _vm._v(\"/\\\\W/g\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\",\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n            _vm._v(\"''\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\")\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\".\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n            _vm._v(\"toLowerCase\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"(\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\")\")\n          ]),\n          _vm._v(\"\\n  \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n            _vm._v(\"return\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"(\")\n          ]),\n          _vm._v(\"\\n    str \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n            _vm._v(\"==\")\n          ]),\n          _vm._v(\"\\n    str\\n      \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\".\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n            _vm._v(\"split\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"(\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n            _vm._v(\"''\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\")\")\n          ]),\n          _vm._v(\"\\n      \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\".\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n            _vm._v(\"reverse\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"(\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\")\")\n          ]),\n          _vm._v(\"\\n      \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\".\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n            _vm._v(\"join\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"(\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n            _vm._v(\"''\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\")\")\n          ]),\n          _vm._v(\"\\n  \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\")\")\n          ]),\n          _vm._v(\"\\n\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"}\")\n          ]),\n          _vm._v(\"\\n\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\n      \"h3\",\n      { attrs: { id: \"_12-写一个按照下面方式调用都能正常工作的-sum-方法\" } },\n      [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: {\n              href: \"#_12-写一个按照下面方式调用都能正常工作的-sum-方法\",\n              \"aria-hidden\": \"true\"\n            }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" 12. 写一个按照下面方式调用都能正常工作的 sum 方法\")\n      ]\n    )\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-js extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-js\" } }, [\n        _c(\"code\", [\n          _vm._v(\"console\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\".\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n            _vm._v(\"log\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"(\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n            _vm._v(\"sum\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"(\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token number\" } }, [\n            _vm._v(\"2\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\",\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token number\" } }, [\n            _vm._v(\"3\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\")\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\")\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n            _vm._v(\"// Outputs 5\")\n          ]),\n          _vm._v(\"\\nconsole\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\".\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n            _vm._v(\"log\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"(\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n            _vm._v(\"sum\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"(\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token number\" } }, [\n            _vm._v(\"2\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\")\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"(\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token number\" } }, [\n            _vm._v(\"3\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\")\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\")\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n            _vm._v(\"// Outputs 5\")\n          ]),\n          _vm._v(\"\\n\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h3\", { attrs: { id: \"_13-据下面的代码片段回答后面的问题\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: {\n            href: \"#_13-据下面的代码片段回答后面的问题\",\n            \"aria-hidden\": \"true\"\n          }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" 13. 据下面的代码片段回答后面的问题\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-js extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-js\" } }, [\n        _c(\"code\", [\n          _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n            _vm._v(\"for\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"(\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n            _vm._v(\"var\")\n          ]),\n          _vm._v(\" i \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n            _vm._v(\"=\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token number\" } }, [\n            _vm._v(\"0\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\";\")\n          ]),\n          _vm._v(\" i \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n            _vm._v(\"<\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token number\" } }, [\n            _vm._v(\"5\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\";\")\n          ]),\n          _vm._v(\" i\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n            _vm._v(\"++\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\")\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"{\")\n          ]),\n          _vm._v(\"\\n  \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n            _vm._v(\"var\")\n          ]),\n          _vm._v(\" btn \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n            _vm._v(\"=\")\n          ]),\n          _vm._v(\" document\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\".\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n            _vm._v(\"createElement\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"(\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n            _vm._v(\"'button'\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\")\")\n          ]),\n          _vm._v(\"\\n  btn\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\".\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n            _vm._v(\"appendChild\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"(\")\n          ]),\n          _vm._v(\"document\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\".\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n            _vm._v(\"createTextNode\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"(\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n            _vm._v(\"'Button '\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n            _vm._v(\"+\")\n          ]),\n          _vm._v(\" i\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\")\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\")\")\n          ]),\n          _vm._v(\"\\n  btn\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\".\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n            _vm._v(\"addEventListener\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"(\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n            _vm._v(\"'click'\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\",\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n            _vm._v(\"function\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"(\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\")\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"{\")\n          ]),\n          _vm._v(\"\\n    console\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\".\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n            _vm._v(\"log\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"(\")\n          ]),\n          _vm._v(\"i\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\")\")\n          ]),\n          _vm._v(\"\\n  \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"}\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\")\")\n          ]),\n          _vm._v(\"\\n  document\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\".\")\n          ]),\n          _vm._v(\"body\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\".\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n            _vm._v(\"appendChild\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"(\")\n          ]),\n          _vm._v(\"btn\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\")\")\n          ]),\n          _vm._v(\"\\n\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"}\")\n          ]),\n          _vm._v(\"\\n\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h3\", { attrs: { id: \"_15-下面的代码会输出什么？为什么？\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: {\n            href: \"#_15-下面的代码会输出什么？为什么？\",\n            \"aria-hidden\": \"true\"\n          }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" 15. 下面的代码会输出什么？为什么？\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-js extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-js\" } }, [\n        _c(\"code\", [\n          _vm._v(\"console\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\".\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n            _vm._v(\"log\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"(\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token number\" } }, [\n            _vm._v(\"1\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n            _vm._v(\"+\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n            _vm._v(\"'2'\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n            _vm._v(\"+\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n            _vm._v(\"'2'\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\")\")\n          ]),\n          _vm._v(\"\\nconsole\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\".\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n            _vm._v(\"log\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"(\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token number\" } }, [\n            _vm._v(\"1\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n            _vm._v(\"+\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n            _vm._v(\"+\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n            _vm._v(\"'2'\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n            _vm._v(\"+\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n            _vm._v(\"'2'\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\")\")\n          ]),\n          _vm._v(\"\\nconsole\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\".\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n            _vm._v(\"log\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"(\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token number\" } }, [\n            _vm._v(\"1\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n            _vm._v(\"+\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n            _vm._v(\"-\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n            _vm._v(\"'1'\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n            _vm._v(\"+\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n            _vm._v(\"'2'\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\")\")\n          ]),\n          _vm._v(\"\\nconsole\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\".\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n            _vm._v(\"log\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"(\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n            _vm._v(\"+\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n            _vm._v(\"'1'\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n            _vm._v(\"+\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n            _vm._v(\"'1'\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n            _vm._v(\"+\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n            _vm._v(\"'2'\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\")\")\n          ]),\n          _vm._v(\"\\nconsole\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\".\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n            _vm._v(\"log\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"(\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n            _vm._v(\"'A'\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n            _vm._v(\"-\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n            _vm._v(\"'B'\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n            _vm._v(\"+\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n            _vm._v(\"'2'\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\")\")\n          ]),\n          _vm._v(\"\\nconsole\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\".\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n            _vm._v(\"log\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"(\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n            _vm._v(\"'A'\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n            _vm._v(\"-\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n            _vm._v(\"'B'\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n            _vm._v(\"+\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token number\" } }, [\n            _vm._v(\"2\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\")\")\n          ]),\n          _vm._v(\"\\n\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h3\", { attrs: { id: \"_16-解释下列代码的输出\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#_16-解释下列代码的输出\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" 16. 解释下列代码的输出\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-js extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-js\" } }, [\n        _c(\"code\", [\n          _vm._v(\"console\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\".\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n            _vm._v(\"log\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"(\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n            _vm._v(\"'0 || 1 = '\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n            _vm._v(\"+\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"(\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token number\" } }, [\n            _vm._v(\"0\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n            _vm._v(\"||\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token number\" } }, [\n            _vm._v(\"1\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\")\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\")\")\n          ]),\n          _vm._v(\"\\nconsole\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\".\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n            _vm._v(\"log\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"(\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n            _vm._v(\"'1 || 2 = '\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n            _vm._v(\"+\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"(\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token number\" } }, [\n            _vm._v(\"1\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n            _vm._v(\"||\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token number\" } }, [\n            _vm._v(\"2\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\")\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\")\")\n          ]),\n          _vm._v(\"\\nconsole\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\".\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n            _vm._v(\"log\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"(\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n            _vm._v(\"'0 && 1 = '\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n            _vm._v(\"+\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"(\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token number\" } }, [\n            _vm._v(\"0\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n            _vm._v(\"&&\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token number\" } }, [\n            _vm._v(\"1\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\")\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\")\")\n          ]),\n          _vm._v(\"\\nconsole\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\".\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n            _vm._v(\"log\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"(\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n            _vm._v(\"'1 && 2 = '\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n            _vm._v(\"+\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"(\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token number\" } }, [\n            _vm._v(\"1\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n            _vm._v(\"&&\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token number\" } }, [\n            _vm._v(\"2\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\")\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\")\")\n          ]),\n          _vm._v(\"\\n\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h3\", { attrs: { id: \"_17-解释下面代码的输出\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#_17-解释下面代码的输出\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" 17. 解释下面代码的输出\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-js extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-js\" } }, [\n        _c(\"code\", [\n          _vm._v(\"console\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\".\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n            _vm._v(\"log\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"(\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token boolean\" } }, [\n            _vm._v(\"false\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n            _vm._v(\"==\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n            _vm._v(\"'0'\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\")\")\n          ]),\n          _vm._v(\"\\nconsole\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\".\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n            _vm._v(\"log\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"(\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token boolean\" } }, [\n            _vm._v(\"false\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n            _vm._v(\"===\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n            _vm._v(\"'0'\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\")\")\n          ]),\n          _vm._v(\"\\n\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _c(\"code\", [_vm._v(\"==\")]),\n      _vm._v(\"和\"),\n      _c(\"code\", [_vm._v(\"===\")]),\n      _vm._v(\"的区别，太基础略。\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h2\", { attrs: { id: \"移动端问题\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#移动端问题\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" 移动端问题\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\n      \"h3\",\n      { attrs: { id: \"_1-你怎么提高一个长列表在手机端滑动的流畅度\" } },\n      [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: {\n              href: \"#_1-你怎么提高一个长列表在手机端滑动的流畅度\",\n              \"aria-hidden\": \"true\"\n            }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" 1. 你怎么提高一个长列表在手机端滑动的流畅度\")\n      ]\n    )\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _vm._v(\"这里主要考察的是否知道 \"),\n      _c(\"code\", [_vm._v(\"passive\")]),\n      _vm._v(\"这个属性\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"blockquote\", [\n      _c(\"p\", [\n        _vm._v(\n          \"当你触摸滑动页面时，页面应该跟随手指一起滚动。而此时你绑定了一个 touchstart 事件，你的事件大概执行 200 毫秒。这时浏览器就犯迷糊了：如果你在事件绑定函数中调用了 preventDefault，那么页面就不应该滚动，如果你没有调用 preventDefault，页面就需要滚动。但是你到底调用了还是没有调用，浏览器不知道。只能先执行你的函数，等 200 毫秒后，绑定事件执行完了，浏览器才知道，“哦，原来你没有阻止默认行为，好的，我马上滚”。此时，页面开始滚。\"\n        )\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _vm._v(\"题外话，这里也可以考察你对\"),\n      _c(\"code\", [_vm._v(\"addEventListener\")]),\n      _vm._v(\"api 的熟练度，很多人其实不知道\"),\n      _c(\"code\", [_vm._v(\"addEventListener\")]),\n      _vm._v(\"其实第三个参数除了可以传\"),\n      _c(\"code\", [_vm._v(\"true\")]),\n      _vm._v(\" or \"),\n      _c(\"code\", [_vm._v(\"false\")]),\n      _vm._v(\"，还可以传一个对象。\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-js extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-js\" } }, [\n        _c(\"code\", [\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"{\")\n          ]),\n          _vm._v(\"\\n\\tcapture\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\":\")\n          ]),\n          _vm._v(\" Boolean\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\",\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n            _vm._v(\n              \"// 表示`listener`会在该类型的事件捕获阶段传播到该`EventTarget`时触发\"\n            )\n          ]),\n          _vm._v(\"\\n\\tonce\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\":\")\n          ]),\n          _vm._v(\" Boolean\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\",\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n            _vm._v(\n              \"// 表示`listener`在添加之后最多只调用一次。如果是`true`，`listener`会在其被调用之后自动移除\"\n            )\n          ]),\n          _vm._v(\"\\n\\tpassive\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\":\")\n          ]),\n          _vm._v(\" Boolean\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\",\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n            _vm._v(\n              \"// 表示`listener`永远不会调用`preventDefault()`。如果`listener`仍然调用了这个函数，客户端将会忽略它并抛出一个控制台警告\"\n            )\n          ]),\n          _vm._v(\"\\n\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"}\")\n          ]),\n          _vm._v(\"\\n\")\n        ])\n      ])\n    ])\n  }\n]\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}