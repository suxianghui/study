{"remainingRequest":"D:\\1\\实训一\\study\\study\\node_modules\\vue-loader\\lib\\index.js??ref--1-1!D:\\1\\实训一\\study\\study\\lib\\webpack\\markdownLoader.js??ref--1-2!D:\\1\\实训一\\study\\study\\src\\zh\\vue\\vuex.md?vue&type=template&id=713b8e6a&","dependencies":[{"path":"D:\\1\\实训一\\study\\study\\src\\zh\\vue\\vuex.md","mtime":1557200317094},{"path":"D:\\1\\实训一\\study\\study\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\1\\实训一\\study\\study\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"D:\\1\\实训一\\study\\study\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\1\\实训一\\study\\study\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\1\\实训一\\study\\study\\lib\\webpack\\markdownLoader.js","mtime":1557200316988}],"contextDependencies":[],"result":["\n<div class=\"content\"><h1 id=\"vuex\"><a class=\"header-anchor\" href=\"#vuex\" aria-hidden=\"true\">#</a> Vuex</h1>\n<h5 id=\"_1、什么是vuex？\"><a class=\"header-anchor\" href=\"#_1、什么是vuex？\" aria-hidden=\"true\">#</a> 1、什么是vuex？</h5>\n<ul>\n<li>每一个 Vuex 应用的核心就是 store（仓库）。“store”基本上就是一个容器，它包含着你的应用中大部分的状态 (state)。</li>\n</ul>\n<h5 id=\"_2、初始化vuex\"><a class=\"header-anchor\" href=\"#_2、初始化vuex\" aria-hidden=\"true\">#</a> 2、初始化vuex</h5>\n<p>（1）下载vuex</p>\n<!--beforebegin--><div class=\"language- extra-class\"><!--afterbegin--><pre v-pre class=\"language-text\"><code>cnpm i vuex -D\n</code></pre>\n<!--beforeend--></div><!--afterend--><p>（2）建一个store文件夹（store/index.js）</p>\n<!--beforebegin--><div class=\"language- extra-class\"><!--afterbegin--><pre v-pre class=\"language-text\"><code>// 初始化vuex\n\nimport Vue from &#39;vue&#39;;\nimport Vuex from &#39;vuex&#39;;\n\n// 引入module\nimport app from &#39;./module/app&#39;;\n\nVue.use(Vuex);\n\n// 生成一个vuex实例\nexport default new Vuex.Store({\n  modules: {\n    app\n  }\n})\n</code></pre>\n<!--beforeend--></div><!--afterend--><p>（3）在store文件夹里建一个module文件夹用来存放数据（store/module/app.js）</p>\n<!--beforebegin--><div class=\"language- extra-class\"><!--afterbegin--><pre v-pre class=\"language-text\"><code>// 存放数据的地方\nconst state = {\n  num: 100\n}\n\n// 派生数据（很少用）\nconst getters = {\n    doubleNum(state){\n        return state.num*2\n    }\n}\n\n// 同步改变\nconst mutations = {\n  changeNum(state, payload){\n    state.num = payload;\n  }\n}\n\n// 异步改变\nconst actions = {\n    &lt;!--changeNumAsync(context, payload){--&gt;\n        \n    &lt;!--}--&gt;\n    changeNumAsync({commit}, payload){\n        commit(&#39;changeNum&#39;, payload)\n    }\n}\n\nexport default {\n  // 命名空间\n  namespaced: true, // 配合module使用\n  state,\n  actions,\n  getters,\n  mutations\n}\n</code></pre>\n<!--beforeend--></div><!--afterend--><p>（4）在main.js里面引入store</p>\n<!--beforebegin--><div class=\"language- extra-class\"><!--afterbegin--><pre v-pre class=\"language-text\"><code>import Vue from &#39;vue&#39;\nimport App from &#39;./App.vue&#39;\n\nimport store from &#39;./store&#39;\n\nnew Vue({\n  el: &#39;#app&#39;,\n  store,\n  render: h =&gt; h(App)\n})\n\n</code></pre>\n<!--beforeend--></div><!--afterend--><p>（5）在页面中使用</p>\n<!--beforebegin--><div class=\"language- extra-class\"><!--afterbegin--><pre v-pre class=\"language-text\"><code>&lt;template&gt;\n  &lt;div&gt;\n    &lt;button @click=&quot;changeNum(&#39;+&#39;)&quot;&gt;+&lt;/button&gt;\n    &lt;span&gt;{{num}}&lt;/span&gt;\n    &lt;button @click=&quot;changeNum(&#39;-&#39;)&quot;&gt;-&lt;/button&gt;\n  &lt;/div&gt;\n&lt;/template&gt;\n&lt;script&gt;\n  export default {\n    name: &#39;app&#39;,\n    computed: {\n      num() {\n        return this.$store.state.app.num\n      }\n    },\n    methods: {\n      changeNum(type) {\n        if (type == &#39;+&#39;) {\n          // this.$store.commit(&#39;changeNum&#39;, this.num+1)\n          this.$store.dispatch(&#39;changeNumAsync&#39;, this.num+1)\n        } else {\n          this.$store.commit(&#39;changeNum&#39;, this.num-1)\n        }\n      }\n    },\n    mounted(){\n      console.log(this.$store)\n    }\n  }\n&lt;/script&gt;\n\n</code></pre>\n<!--beforeend--></div><!--afterend--></div>\n",null]}