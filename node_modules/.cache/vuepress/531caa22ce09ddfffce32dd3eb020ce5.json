{"remainingRequest":"D:\\1\\实训一\\study\\study\\node_modules\\vue-loader\\lib\\index.js??ref--1-1!D:\\1\\实训一\\study\\study\\lib\\webpack\\markdownLoader.js??ref--1-2!D:\\1\\实训一\\study\\study\\src\\zh\\miniapp\\小程序组件.md?vue&type=template&id=437c9365&","dependencies":[{"path":"D:\\1\\实训一\\study\\study\\src\\zh\\miniapp\\小程序组件.md","mtime":1557200317077},{"path":"D:\\1\\实训一\\study\\study\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\1\\实训一\\study\\study\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"D:\\1\\实训一\\study\\study\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\1\\实训一\\study\\study\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\1\\实训一\\study\\study\\lib\\webpack\\markdownLoader.js","mtime":1557200316988}],"contextDependencies":[],"result":["\n<div class=\"content\"><h1 id=\"小程序组件\"><a class=\"header-anchor\" href=\"#小程序组件\" aria-hidden=\"true\">#</a> 小程序组件</h1>\n<h5 id=\"什么是组件\"><a class=\"header-anchor\" href=\"#什么是组件\" aria-hidden=\"true\">#</a> 什么是组件</h5>\n<blockquote>\n<p>组件就是将一个功能进行封装，组件是视图层的基本组成单元，有自己独特的功能</p>\n</blockquote>\n<h5 id=\"组件的规范\"><a class=\"header-anchor\" href=\"#组件的规范\" aria-hidden=\"true\">#</a> 组件的规范</h5>\n<ol>\n<li>结构</li>\n<li>样式</li>\n<li>逻辑</li>\n<li>通信方式</li>\n<li>生命周期</li>\n<li>可组合（可以嵌套）</li>\n<li>定义组件</li>\n<li>调用组件（标签的形式）</li>\n</ol>\n<h5 id=\"组件的创建\"><a class=\"header-anchor\" href=\"#组件的创建\" aria-hidden=\"true\">#</a> 组件的创建</h5>\n<!--beforebegin--><div class=\"language- extra-class\"><!--afterbegin--><pre v-pre class=\"language-text\"><code>1.小程序中组件由4个文件组成，.json .wxmll .wxss .js\n2.创建组件实例需要通过Compoent(Object) 函数创建\n3.创建组件需要在组件的json文件中定义  component:true 字段指定为一个组件\n4.组件中的基础选项\n    (1)Properties: 接受的数据\n    (2)Data: 内部数据\n    (3)Methods: 处理函数\n5.使用组件\n6.需要在对应的页面或者组件的json文件中定义 usingComponents: {} 选项\n    usingComponets: {\n        &#39;名-称&#39;: &#39;组件路径&#39;    \n    }\n7.在页面中可以实用  &lt;名-称/&gt;\n8.名称中不能出现大写字母，规则就是(字母_-)\n9.组件的组合可以实用slot插槽来完成，和vue一样，只不过没有作用域插槽， 可以有命名插槽和默认插槽\n10.组件的通信可以通过props传递参数(父子)， 自定义事件（子父）\n    (1)父子 &lt;my-component test=”ssss” /&gt;\n    (2)子父 &lt;my-component bindtest=”testFn” /&gt;  组件内部通过this.triggerEvent(‘test’, {detail:对象})\n</code></pre>\n<!--beforeend--></div><!--afterend--></div>\n",null]}