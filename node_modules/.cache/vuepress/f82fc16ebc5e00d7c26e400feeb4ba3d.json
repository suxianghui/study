{"remainingRequest":"D:\\1\\实训一\\study\\study\\node_modules\\babel-loader\\lib\\index.js??ref--3-1!D:\\1\\实训一\\study\\study\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\1\\实训一\\study\\study\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\1\\实训一\\study\\study\\lib\\default-theme\\NavLinks.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\1\\实训一\\study\\study\\lib\\default-theme\\NavLinks.vue","mtime":1557200316951},{"path":"D:\\1\\实训一\\study\\study\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\1\\实训一\\study\\study\\node_modules\\babel-loader\\lib\\index.js","mtime":1526583314000},{"path":"D:\\1\\实训一\\study\\study\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\1\\实训一\\study\\study\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.constructor\";\nimport \"core-js/modules/es6.regexp.match\";\nimport \"core-js/modules/es6.object.assign\";\nimport _toConsumableArray from \"D:\\\\1\\\\\\u5B9E\\u8BAD\\u4E00\\\\study\\\\study\\\\node_modules\\\\@babel\\\\runtime/helpers/builtin/es6/toConsumableArray\";\nimport \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.object.keys\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport DropdownLink from './DropdownLink.vue';\nimport { resolveNavLinkItem } from './util';\nimport NavLink from './NavLink.vue';\nexport default {\n  components: {\n    NavLink: NavLink,\n    DropdownLink: DropdownLink\n  },\n  computed: {\n    userNav: function userNav() {\n      return this.$themeLocaleConfig.nav || this.$site.themeConfig.nav || [];\n    },\n    nav: function nav() {\n      var _this = this;\n\n      var locales = this.$site.locales;\n\n      if (locales && Object.keys(locales).length > 1) {\n        var currentLink = this.$page.path;\n        var routes = this.$router.options.routes;\n        var themeLocales = this.$site.themeConfig.locales || {};\n        var languageDropdown = {\n          text: this.$themeLocaleConfig.selectText || 'Languages',\n          items: Object.keys(locales).map(function (path) {\n            var locale = locales[path];\n            var text = themeLocales[path] && themeLocales[path].label || locale.lang;\n            var link; // Stay on the current page\n\n            if (locale.lang === _this.$lang) {\n              link = currentLink;\n            } else {\n              // Try to stay on the same page\n              link = currentLink.replace(_this.$localeConfig.path, path); // fallback to homepage\n\n              if (!routes.some(function (route) {\n                return route.path === link;\n              })) {\n                link = path;\n              }\n            }\n\n            return {\n              text: text,\n              link: link\n            };\n          })\n        };\n        return _toConsumableArray(this.userNav).concat([languageDropdown]);\n      }\n\n      return this.userNav;\n    },\n    userLinks: function userLinks() {\n      return (this.nav || []).map(function (link) {\n        return Object.assign(resolveNavLinkItem(link), {\n          items: (link.items || []).map(resolveNavLinkItem)\n        });\n      });\n    },\n    repoLink: function repoLink() {\n      var repo = this.$site.themeConfig.repo;\n\n      if (repo) {\n        return /^https?:/.test(repo) ? repo : \"https://github.com/\".concat(repo);\n      }\n    },\n    repoLabel: function repoLabel() {\n      if (!this.repoLink) return;\n\n      if (this.$site.themeConfig.repoLabel) {\n        return this.$site.themeConfig.repoLabel;\n      }\n\n      var repoHost = this.repoLink.match(/^https?:\\/\\/[^/]+/)[0];\n      var platforms = ['GitHub', 'GitLab', 'Bitbucket'];\n\n      for (var i = 0; i < platforms.length; i++) {\n        var platform = platforms[i];\n\n        if (new RegExp(platform, 'i').test(repoHost)) {\n          return platform;\n        }\n      }\n\n      return 'Source';\n    }\n  }\n};",{"version":3,"sources":["NavLinks.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <nav\r\n    class=\"nav-links\"\r\n    v-if=\"userLinks.length || repoLink\"\r\n  >\r\n    <!-- user links -->\r\n    <div\r\n      class=\"nav-item\"\r\n      v-for=\"item in userLinks\"\r\n      :key=\"item.link\"\r\n    >\r\n      <DropdownLink\r\n        v-if=\"item.type === 'links'\"\r\n        :item=\"item\"\r\n      />\r\n      <NavLink\r\n        v-else\r\n        :item=\"item\"\r\n      />\r\n    </div>\r\n\r\n    <!-- repo link -->\r\n    <a\r\n      v-if=\"repoLink\"\r\n      :href=\"repoLink\"\r\n      class=\"repo-link\"\r\n      target=\"_blank\"\r\n      rel=\"noopener noreferrer\"\r\n    >\r\n      {{ repoLabel }}\r\n      <OutboundLink/>\r\n    </a>\r\n  </nav>\r\n</template>\r\n\r\n<script>\r\nimport DropdownLink from './DropdownLink.vue'\r\nimport { resolveNavLinkItem } from './util'\r\nimport NavLink from './NavLink.vue'\r\n\r\nexport default {\r\n  components: { NavLink, DropdownLink },\r\n\r\n  computed: {\r\n    userNav () {\r\n      return this.$themeLocaleConfig.nav || this.$site.themeConfig.nav || []\r\n    },\r\n\r\n    nav () {\r\n      const { locales } = this.$site\r\n      if (locales && Object.keys(locales).length > 1) {\r\n        const currentLink = this.$page.path\r\n        const routes = this.$router.options.routes\r\n        const themeLocales = this.$site.themeConfig.locales || {}\r\n        const languageDropdown = {\r\n          text: this.$themeLocaleConfig.selectText || 'Languages',\r\n          items: Object.keys(locales).map(path => {\r\n            const locale = locales[path]\r\n            const text = themeLocales[path] && themeLocales[path].label || locale.lang\r\n            let link\r\n            // Stay on the current page\r\n            if (locale.lang === this.$lang) {\r\n              link = currentLink\r\n            } else {\r\n              // Try to stay on the same page\r\n              link = currentLink.replace(this.$localeConfig.path, path)\r\n              // fallback to homepage\r\n              if (!routes.some(route => route.path === link)) {\r\n                link = path\r\n              }\r\n            }\r\n            return { text, link }\r\n          })\r\n        }\r\n        return [...this.userNav, languageDropdown]\r\n      }\r\n      return this.userNav\r\n    },\r\n\r\n    userLinks () {\r\n      return (this.nav || []).map(link => {\r\n        return Object.assign(resolveNavLinkItem(link), {\r\n          items: (link.items || []).map(resolveNavLinkItem)\r\n        })\r\n      })\r\n    },\r\n\r\n    repoLink () {\r\n      const { repo } = this.$site.themeConfig\r\n      if (repo) {\r\n        return /^https?:/.test(repo)\r\n          ? repo\r\n          : `https://github.com/${repo}`\r\n      }\r\n    },\r\n\r\n    repoLabel () {\r\n      if (!this.repoLink) return\r\n      if (this.$site.themeConfig.repoLabel) {\r\n        return this.$site.themeConfig.repoLabel\r\n      }\r\n\r\n      const repoHost = this.repoLink.match(/^https?:\\/\\/[^/]+/)[0]\r\n      const platforms = ['GitHub', 'GitLab', 'Bitbucket']\r\n      for (let i = 0; i < platforms.length; i++) {\r\n        const platform = platforms[i]\r\n        if (new RegExp(platform, 'i').test(repoHost)) {\r\n          return platform\r\n        }\r\n      }\r\n\r\n      return 'Source'\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"stylus\">\r\n@import './styles/config.styl'\r\n\r\n.nav-links\r\n  display inline-block\r\n  a\r\n    line-height 1.4rem\r\n    color inherit\r\n    &:hover, &.router-link-active\r\n      color $accentColor\r\n  .nav-item\r\n    position relative\r\n    display inline-block\r\n    margin-left 1.5rem\r\n    line-height 2rem\r\n    &:first-child\r\n      margin-left 0\r\n  .repo-link\r\n    margin-left 1.5rem\r\n\r\n@media (max-width: $MQMobile)\r\n  .nav-links\r\n    .nav-item, .repo-link\r\n      margin-left 0\r\n\r\n@media (min-width: $MQMobile)\r\n  .nav-links a\r\n    &:hover, &.router-link-active\r\n      color $textColor\r\n  .nav-item > a:not(.external)\r\n    &:hover, &.router-link-active\r\n      margin-bottom -2px\r\n      border-bottom 2px solid lighten($accentColor, 8%)\r\n</style>\r\n"],"sourceRoot":"lib/default-theme"}]}