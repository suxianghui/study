{"remainingRequest":"D:\\1\\实训一\\study\\study\\node_modules\\vue-loader\\lib\\index.js??ref--1-1!D:\\1\\实训一\\study\\study\\lib\\webpack\\markdownLoader.js??ref--1-2!D:\\1\\实训一\\study\\study\\src\\zh\\vue\\Vue组件.md?vue&type=template&id=5cbfe714&","dependencies":[{"path":"D:\\1\\实训一\\study\\study\\src\\zh\\vue\\Vue组件.md","mtime":1557200317092},{"path":"D:\\1\\实训一\\study\\study\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\1\\实训一\\study\\study\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"D:\\1\\实训一\\study\\study\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\1\\实训一\\study\\study\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\1\\实训一\\study\\study\\lib\\webpack\\markdownLoader.js","mtime":1557200316988}],"contextDependencies":[],"result":["\n<div class=\"content\"><h1 id=\"vue组件\"><a class=\"header-anchor\" href=\"#vue组件\" aria-hidden=\"true\">#</a> Vue组件</h1>\n<h4 id=\"_1、组件是什么？\"><a class=\"header-anchor\" href=\"#_1、组件是什么？\" aria-hidden=\"true\">#</a> 1、组件是什么？</h4>\n<ol>\n<li>是vue.js最强大的功能之一</li>\n<li>可以扩展html元素，封装可重用的代码</li>\n</ol>\n<h4 id=\"_2、注册全局组件\"><a class=\"header-anchor\" href=\"#_2、注册全局组件\" aria-hidden=\"true\">#</a> 2、注册全局组件</h4>\n<!--beforebegin--><div class=\"language- extra-class\"><!--afterbegin--><pre v-pre class=\"language-text\"><code>Vue.component(&#39;组件名称&#39;,引入的.vue文件)\n\nmain.js\nimport heads from &#39;src/heads&#39;;\nVue.component(&#39;heads&#39;,heads)\n// 然后在页面直接引用heads标签就可以了\n\n</code></pre>\n<!--beforeend--></div><!--afterend--><h4 id=\"_3、prop\"><a class=\"header-anchor\" href=\"#_3、prop\" aria-hidden=\"true\">#</a> 3、prop</h4>\n<ul>\n<li>是父组件用来传递数据的一个自定义属性</li>\n<li>父组件的数据需要通过props把数据传给子组件，子组件需要显示地用props选项声明'prop''</li>\n</ul>\n<!--beforebegin--><div class=\"language- extra-class\"><!--afterbegin--><pre v-pre class=\"language-text\"><code>参数:\n    props:{\n        Child:{\n            type:Number,\n            required:true  // 默认值是false\n            default:{\n                return{\n                    msg:&#39;hello!&#39;\n                }\n            }\n        }\n    }\n</code></pre>\n<!--beforeend--></div><!--afterend--><h4 id=\"_4、自定义事件\"><a class=\"header-anchor\" href=\"#_4、自定义事件\" aria-hidden=\"true\">#</a> 4、自定义事件</h4>\n<ul>\n<li>$on(even)     监听事件</li>\n<li>$emit(even)   触发事件</li>\n</ul>\n<h4 id=\"_5、组件通讯\"><a class=\"header-anchor\" href=\"#_5、组件通讯\" aria-hidden=\"true\">#</a> 5、组件通讯</h4>\n<!--beforebegin--><div class=\"language- extra-class\"><!--afterbegin--><pre v-pre class=\"language-text\"><code>1、同级目录\n    全局: window.Eventhub = new Vue();\n    发送:methods:{\n            send(){\n                 EventHub.$emit(&#39;HowAre&#39;,this.val)\n            }\n        }\n    接收:mounted(){\n            EventHub.$on(&#39;HowAre&#39;,res=&gt;{\n                this.val = res\n            })\n        }\n2、父级向子级通讯(利用props)\n    父级：\n        data(){\n            return{\n                tit:&#39;加油加油 ！&#39;\n            }\n        }\n    子级：\n        props:[&#39;tit&#39;] 接收\n        &lt;val1 :tit=&quot;tit&quot;&gt;&lt;/val1&gt;\n3、子级向父级通讯(利用回调函数)\n    子级：\n        this.$emit(&#39;solgan&#39;,this.val)\n    父级：\n        &lt;val1 @solgan=&#39;onSolgan&#39;&gt;&lt;/val1&gt;\n         methods:{\n            onSolgan(val){\n                this.solgan = val\n            }\n        }\n    \n</code></pre>\n<!--beforeend--></div><!--afterend--><h4 id=\"_4、组件components-component\"><a class=\"header-anchor\" href=\"#_4、组件components-component\" aria-hidden=\"true\">#</a> 4、组件components/component</h4>\n<ol>\n<li>局部(components)</li>\n</ol>\n<!--beforebegin--><div class=\"language- extra-class\"><!--afterbegin--><pre v-pre class=\"language-text\"><code>多个\ncomponents:{\n    组件名称:{\n        name:\n        data(){\n            \n        },\n        methods:{\n            \n        },\n        beforeCreate:{\n            \n        }\n        template = html字符串\n        // template有且只有一个子元素\n        \n        \n    }\n}\n</code></pre>\n<!--beforeend--></div><!--afterend--><ol start=\"2\">\n<li>全局(component)</li>\n</ol>\n<!--beforebegin--><div class=\"language- extra-class\"><!--afterbegin--><pre v-pre class=\"language-text\"><code>Vue.component(&#39;组件名称&#39;,引入的.vue文件)\n</code></pre>\n<!--beforeend--></div><!--afterend--></div>\n",null]}