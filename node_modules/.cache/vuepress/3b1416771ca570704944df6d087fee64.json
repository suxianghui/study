{"remainingRequest":"D:\\1\\实训一\\study\\study\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!D:\\1\\实训一\\study\\study\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!D:\\1\\实训一\\study\\study\\node_modules\\vue-loader\\lib\\index.js??ref--1-1!D:\\1\\实训一\\study\\study\\lib\\webpack\\markdownLoader.js??ref--1-2!D:\\1\\实训一\\study\\study\\src\\zh\\miniapp\\小程序路由.md?vue&type=template&id=2a9c00f5&","dependencies":[{"path":"D:\\1\\实训一\\study\\study\\src\\zh\\miniapp\\小程序路由.md","mtime":1557200317078},{"path":"D:\\1\\实训一\\study\\study\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\1\\实训一\\study\\study\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"D:\\1\\实训一\\study\\study\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\1\\实训一\\study\\study\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\1\\实训一\\study\\study\\lib\\webpack\\markdownLoader.js","mtime":1557200316988}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _vm._m(0)\n}\nvar staticRenderFns = [\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"content\" }, [\n      _c(\"h1\", { attrs: { id: \"小程序路由\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: { href: \"#小程序路由\", \"aria-hidden\": \"true\" }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" 小程序路由\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"h5\", { attrs: { id: \"_1、路由管理\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: { href: \"#_1、路由管理\", \"aria-hidden\": \"true\" }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" 1、路由管理\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"ul\", [\n        _c(\"li\", [\n          _vm._v(\n            \"在小程序中所有页面的路由全部由框架进行管理，框架以栈的形式维护了当前的所有页面。\"\n          )\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"h5\", { attrs: { id: \"_2、栈（计算机术语）\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: { href: \"#_2、栈（计算机术语）\", \"aria-hidden\": \"true\" }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" 2、栈（计算机术语）\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"ul\", [\n        _c(\"li\", [\n          _vm._v(\n            \"栈（stack）又名堆栈，它是一种运算受限的线性表。其限制是仅允许在表的一端进行插入和删除运算。这一端被称为栈顶，相对地，把另一端称为栈底。向一个栈插入新元素又称作进栈、入栈或压栈，它是把新元素放到栈顶元素的上面，使之成为新的栈顶元素；从一个栈删除元素又称作出栈或退栈，它是把栈顶元素删除掉，使其相邻的元素成为新的栈顶元素。\"\n          )\n        ]),\n        _vm._v(\" \"),\n        _c(\"li\", [\n          _vm._v(\n            \"可进可出（进是添加，处删除），也就意味这小程序中可以跳转新页面，可以后退，但是不能前进\"\n          )\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"h5\", { attrs: { id: \"_3、浏览器如何管理浏览记录\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: {\n              href: \"#_3、浏览器如何管理浏览记录\",\n              \"aria-hidden\": \"true\"\n            }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" 3、浏览器如何管理浏览记录\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"ul\", [\n        _c(\"li\", [\n          _vm._v(\n            \"浏览器以浏览新网页的形式将所有浏览都保留在历史记录，任何浏览都会保存，后退不会删除浏览器记录，也就意味着可以前进\"\n          )\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"language- extra-class\" }, [\n        _c(\"pre\", { pre: true, attrs: { class: \"language-text\" } }, [\n          _c(\"code\", [\n            _vm._v(\n              \"场景\\nA页面    A页面进栈\\nA页面 -> B页面   B页面进栈\\nB页面 ->  C页面  C页面进栈\\nC页面后退    C页面出栈\\nB页面 ->  D页面   D页面进栈\\n[A,B,D]\\n\\nD页面打开  A页面   在一个A页面进栈\\n\"\n            )\n          ])\n        ])\n      ]),\n      _c(\"h5\", { attrs: { id: \"_4、getcurrentpages\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: { href: \"#_4、getcurrentpages\", \"aria-hidden\": \"true\" }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" 4、getCurrentPages()\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"ul\", [\n        _c(\"li\", [\n          _vm._v(\n            \"该函数用于获取当前页面栈的实例，以数组形式按栈的顺序给出，第一个元素为首页，最后一个元素为当前页面。在小程序中栈最多只能维护10个数据\"\n          )\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"h5\", { attrs: { id: \"_5、栈的表现\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: { href: \"#_5、栈的表现\", \"aria-hidden\": \"true\" }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" 5、栈的表现\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"ul\", [\n        _c(\"li\", [_vm._v(\"打开新页面 -> 进栈\")]),\n        _vm._v(\" \"),\n        _c(\"li\", [_vm._v(\"后退 -> 当前页面出栈\")]),\n        _vm._v(\" \"),\n        _c(\"li\", [_vm._v(\"重定向  -> 当期页面出栈新页面入栈\")]),\n        _vm._v(\" \"),\n        _c(\"li\", [_vm._v(\"重加载  -> 页面全部出栈保留当期页面栈\")]),\n        _vm._v(\" \"),\n        _c(\"li\", [_vm._v(\"Tab 切换 ->\\t页面全部出栈，只留下新的 Tab 页面\")])\n      ]),\n      _vm._v(\" \"),\n      _c(\"h5\", { attrs: { id: \"_5、路由跳转方式\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: { href: \"#_5、路由跳转方式\", \"aria-hidden\": \"true\" }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" 5、路由跳转方式\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"ul\", [\n        _c(\"li\", [_vm._v(\"在小程序中路由跳转方式有两种（组件跳转，api跳转）\")])\n      ]),\n      _vm._v(\" \"),\n      _c(\"table\", [\n        _c(\"thead\", [\n          _c(\"tr\", [\n            _c(\"th\", [_vm._v(\"跳转形式\")]),\n            _vm._v(\" \"),\n            _c(\"th\", [_vm._v(\"Api\")]),\n            _vm._v(\" \"),\n            _c(\"th\", [_vm._v(\"组件\")])\n          ])\n        ]),\n        _vm._v(\" \"),\n        _c(\"tbody\", [\n          _c(\"tr\", [\n            _c(\"td\", [_vm._v(\"打开新页面\")]),\n            _vm._v(\" \"),\n            _c(\"td\", [_vm._v(\"wx.navigateTo(‘路径’)\")]),\n            _vm._v(\" \"),\n            _c(\"td\", [_vm._v('<\\\\navigator open-type=\"navigateTo\"/>')])\n          ]),\n          _vm._v(\" \"),\n          _c(\"tr\", [\n            _c(\"td\", [_vm._v(\"页面重定向\")]),\n            _vm._v(\" \"),\n            _c(\"td\", [_vm._v(\"wx.redirectTo\")]),\n            _vm._v(\" \"),\n            _c(\"td\", [_vm._v('<\\\\navigator open-type=\"redirectTo\"/>')])\n          ]),\n          _vm._v(\" \"),\n          _c(\"tr\", [\n            _c(\"td\", [_vm._v(\"页面返回\")]),\n            _vm._v(\" \"),\n            _c(\"td\", [_vm._v(\"wx.navigateBack\")]),\n            _vm._v(\" \"),\n            _c(\"td\", [_vm._v('<\\\\navigator open-type=\"navigateBack\">')])\n          ]),\n          _vm._v(\" \"),\n          _c(\"tr\", [\n            _c(\"td\", [_vm._v(\"Tab 切换\")]),\n            _vm._v(\" \"),\n            _c(\"td\", [_vm._v(\"wx.switchTab\")]),\n            _vm._v(\" \"),\n            _c(\"td\", [_vm._v('<\\\\navigator open-type=\"switchTab\"/>')])\n          ]),\n          _vm._v(\" \"),\n          _c(\"tr\", [\n            _c(\"td\", [_vm._v(\"重启动\")]),\n            _vm._v(\" \"),\n            _c(\"td\", [_vm._v(\"wx.reLaunch\")]),\n            _vm._v(\" \"),\n            _c(\"td\", [_vm._v('<\\\\navigator open-type=\"reLaunch\"/>')])\n          ])\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"h4\", { attrs: { id: \"注意\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: { href: \"#注意\", \"aria-hidden\": \"true\" }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" 注意:\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"ul\", [\n        _c(\"li\", [_vm._v(\"navigateTo, redirectTo 只能打开非 tabBar 页面。\")]),\n        _vm._v(\" \"),\n        _c(\"li\", [_vm._v(\"switchTab 只能打开 tabBar 页面。\")]),\n        _vm._v(\" \"),\n        _c(\"li\", [_vm._v(\"reLaunch 可以打开任意页面。\")]),\n        _vm._v(\" \"),\n        _c(\"li\", [\n          _vm._v(\n            \"页面底部的 tabBar 由页面决定，即只要是定义为 tabBar 的页面，底部都有 tabBar。\"\n          )\n        ]),\n        _vm._v(\" \"),\n        _c(\"li\", [_vm._v(\"调用页面路由带的参数可以在目标页面的onLoad中获取\")]),\n        _vm._v(\" \"),\n        _c(\"li\", [\n          _vm._v(\n            \"页面只有在出栈后才会被卸载也就是执行onUnload, tab页面只有在程序卸载的时候才会卸载\"\n          )\n        ])\n      ])\n    ])\n  }\n]\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}