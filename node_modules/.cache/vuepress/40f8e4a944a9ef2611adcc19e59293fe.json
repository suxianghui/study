{"remainingRequest":"D:\\1\\实训一\\study\\study\\node_modules\\babel-loader\\lib\\index.js??ref--3-1!D:\\1\\实训一\\study\\study\\lib\\default-theme\\util.js","dependencies":[{"path":"D:\\1\\实训一\\study\\study\\lib\\default-theme\\util.js","mtime":1557200316964},{"path":"D:\\1\\实训一\\study\\study\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\1\\实训一\\study\\study\\node_modules\\babel-loader\\lib\\index.js","mtime":1526583314000}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.regexp.split\";\nimport \"core-js/modules/es6.object.assign\";\nimport \"core-js/modules/es6.regexp.match\";\nimport \"core-js/modules/es6.regexp.replace\";\nexport var hashRE = /#.*$/;\nexport var extRE = /\\.(md|html)$/;\nexport var endingSlashRE = /\\/$/;\nexport var outboundRE = /^(https?:|mailto:|tel:)/;\nexport function normalize(path) {\n  return decodeURI(path).replace(hashRE, '').replace(extRE, '');\n}\nexport function getHash(path) {\n  var match = path.match(hashRE);\n\n  if (match) {\n    return match[0];\n  }\n}\nexport function isExternal(path) {\n  return outboundRE.test(path);\n}\nexport function isMailto(path) {\n  return /^mailto:/.test(path);\n}\nexport function isTel(path) {\n  return /^tel:/.test(path);\n}\nexport function ensureExt(path) {\n  if (isExternal(path)) {\n    return path;\n  }\n\n  var hashMatch = path.match(hashRE);\n  var hash = hashMatch ? hashMatch[0] : '';\n  var normalized = normalize(path);\n\n  if (endingSlashRE.test(normalized)) {\n    return path;\n  }\n\n  return normalized + '.html' + hash;\n}\nexport function isActive(route, path) {\n  var routeHash = route.hash;\n  var linkHash = getHash(path);\n\n  if (linkHash && routeHash !== linkHash) {\n    return false;\n  }\n\n  var routePath = normalize(route.path);\n  var pagePath = normalize(path);\n  return routePath === pagePath;\n}\nexport function resolvePage(pages, rawPath, base) {\n  if (base) {\n    rawPath = resolvePath(rawPath, base);\n  }\n\n  var path = normalize(rawPath);\n\n  for (var i = 0; i < pages.length; i++) {\n    if (normalize(pages[i].path) === path) {\n      return Object.assign({}, pages[i], {\n        type: 'page',\n        path: ensureExt(rawPath)\n      });\n    }\n  }\n\n  console.error(\"[vuepress] No matching page found for sidebar item \\\"\".concat(rawPath, \"\\\"\"));\n  return {};\n}\n\nfunction resolvePath(relative, base, append) {\n  var firstChar = relative.charAt(0);\n\n  if (firstChar === '/') {\n    return relative;\n  }\n\n  if (firstChar === '?' || firstChar === '#') {\n    return base + relative;\n  }\n\n  var stack = base.split('/'); // remove trailing segment if:\n  // - not appending\n  // - appending to trailing slash (last segment is empty)\n\n  if (!append || !stack[stack.length - 1]) {\n    stack.pop();\n  } // resolve relative path\n\n\n  var segments = relative.replace(/^\\//, '').split('/');\n\n  for (var i = 0; i < segments.length; i++) {\n    var segment = segments[i];\n\n    if (segment === '..') {\n      stack.pop();\n    } else if (segment !== '.') {\n      stack.push(segment);\n    }\n  } // ensure leading slash\n\n\n  if (stack[0] !== '') {\n    stack.unshift('');\n  }\n\n  return stack.join('/');\n}\n\nexport function resolveSidebarItems(page, route, site, localePath) {\n  var pages = site.pages,\n      themeConfig = site.themeConfig;\n  var localeConfig = localePath && themeConfig.locales ? themeConfig.locales[localePath] || themeConfig : themeConfig;\n  var pageSidebarConfig = page.frontmatter.sidebar || localeConfig.sidebar || themeConfig.sidebar;\n\n  if (pageSidebarConfig === 'auto') {\n    return resolveHeaders(page);\n  }\n\n  var sidebarConfig = localeConfig.sidebar || themeConfig.sidebar;\n\n  if (!sidebarConfig) {\n    return [];\n  } else {\n    var _resolveMatchingConfi = resolveMatchingConfig(route, sidebarConfig),\n        base = _resolveMatchingConfi.base,\n        config = _resolveMatchingConfi.config;\n\n    return config ? config.map(function (item) {\n      return resolveItem(item, pages, base);\n    }) : [];\n  }\n}\n\nfunction resolveHeaders(page) {\n  var headers = groupHeaders(page.headers || []);\n  return [{\n    type: 'group',\n    collapsable: false,\n    title: page.title,\n    children: headers.map(function (h) {\n      return {\n        type: 'auto',\n        title: h.title,\n        basePath: page.path,\n        path: page.path + '#' + h.slug,\n        children: h.children || []\n      };\n    })\n  }];\n}\n\nexport function groupHeaders(headers) {\n  // group h3s under h2\n  headers = headers.map(function (h) {\n    return Object.assign({}, h);\n  });\n  var lastH2;\n  headers.forEach(function (h) {\n    if (h.level === 2) {\n      lastH2 = h;\n    } else if (lastH2) {\n      (lastH2.children || (lastH2.children = [])).push(h);\n    }\n  });\n  return headers.filter(function (h) {\n    return h.level === 2;\n  });\n}\nexport function resolveNavLinkItem(linkItem) {\n  return Object.assign(linkItem, {\n    type: linkItem.items && linkItem.items.length ? 'links' : 'link'\n  });\n}\nexport function resolveMatchingConfig(route, config) {\n  if (Array.isArray(config)) {\n    return {\n      base: '/',\n      config: config\n    };\n  }\n\n  for (var base in config) {\n    if (ensureEndingSlash(route.path).indexOf(base) === 0) {\n      return {\n        base: base,\n        config: config[base]\n      };\n    }\n  }\n\n  return {};\n}\n\nfunction ensureEndingSlash(path) {\n  return /(\\.html|\\/)$/.test(path) ? path : path + '/';\n}\n\nfunction resolveItem(item, pages, base, isNested) {\n  if (typeof item === 'string') {\n    return resolvePage(pages, item, base);\n  } else if (Array.isArray(item)) {\n    return Object.assign(resolvePage(pages, item[0], base), {\n      title: item[1]\n    });\n  } else {\n    if (isNested) {\n      console.error('[vuepress] Nested sidebar groups are not supported. ' + 'Consider using navbar + categories instead.');\n    }\n\n    var children = item.children || [];\n    return {\n      type: 'group',\n      title: item.title,\n      children: children.map(function (child) {\n        return resolveItem(child, pages, base, true);\n      }),\n      collapsable: item.collapsable !== false\n    };\n  }\n}",{"version":3,"sources":["lib\\default-theme\\util.js"],"names":["hashRE","extRE","endingSlashRE","outboundRE","normalize","path","decodeURI","replace","getHash","match","isExternal","test","isMailto","isTel","ensureExt","hashMatch","hash","normalized","isActive","route","routeHash","linkHash","routePath","pagePath","resolvePage","pages","rawPath","base","resolvePath","i","length","Object","assign","type","console","error","relative","append","firstChar","charAt","stack","split","pop","segments","segment","push","unshift","join","resolveSidebarItems","page","site","localePath","themeConfig","localeConfig","locales","pageSidebarConfig","frontmatter","sidebar","resolveHeaders","sidebarConfig","resolveMatchingConfig","config","map","resolveItem","item","headers","groupHeaders","collapsable","title","children","h","basePath","slug","lastH2","forEach","level","filter","resolveNavLinkItem","linkItem","items","Array","isArray","ensureEndingSlash","indexOf","isNested","child"],"mappings":"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","sourceRoot":"D:\\1\\实训一\\study\\study","sourcesContent":["export const hashRE = /#.*$/\r\nexport const extRE = /\\.(md|html)$/\r\nexport const endingSlashRE = /\\/$/\r\nexport const outboundRE = /^(https?:|mailto:|tel:)/\r\n\r\nexport function normalize (path) {\r\n  return decodeURI(path)\r\n    .replace(hashRE, '')\r\n    .replace(extRE, '')\r\n}\r\n\r\nexport function getHash (path) {\r\n  const match = path.match(hashRE)\r\n  if (match) {\r\n    return match[0]\r\n  }\r\n}\r\n\r\nexport function isExternal (path) {\r\n  return outboundRE.test(path)\r\n}\r\n\r\nexport function isMailto (path) {\r\n  return /^mailto:/.test(path)\r\n}\r\n\r\nexport function isTel (path) {\r\n  return /^tel:/.test(path)\r\n}\r\n\r\nexport function ensureExt (path) {\r\n  if (isExternal(path)) {\r\n    return path\r\n  }\r\n  const hashMatch = path.match(hashRE)\r\n  const hash = hashMatch ? hashMatch[0] : ''\r\n  const normalized = normalize(path)\r\n\r\n  if (endingSlashRE.test(normalized)) {\r\n    return path\r\n  }\r\n  return normalized + '.html' + hash\r\n}\r\n\r\nexport function isActive (route, path) {\r\n  const routeHash = route.hash\r\n  const linkHash = getHash(path)\r\n  if (linkHash && routeHash !== linkHash) {\r\n    return false\r\n  }\r\n  const routePath = normalize(route.path)\r\n  const pagePath = normalize(path)\r\n  return routePath === pagePath\r\n}\r\n\r\nexport function resolvePage (pages, rawPath, base) {\r\n  if (base) {\r\n    rawPath = resolvePath(rawPath, base)\r\n  }\r\n  const path = normalize(rawPath)\r\n  for (let i = 0; i < pages.length; i++) {\r\n    if (normalize(pages[i].path) === path) {\r\n      return Object.assign({}, pages[i], {\r\n        type: 'page',\r\n        path: ensureExt(rawPath)\r\n      })\r\n    }\r\n  }\r\n  console.error(`[vuepress] No matching page found for sidebar item \"${rawPath}\"`)\r\n  return {}\r\n}\r\n\r\nfunction resolvePath (relative, base, append) {\r\n  const firstChar = relative.charAt(0)\r\n  if (firstChar === '/') {\r\n    return relative\r\n  }\r\n\r\n  if (firstChar === '?' || firstChar === '#') {\r\n    return base + relative\r\n  }\r\n\r\n  const stack = base.split('/')\r\n\r\n  // remove trailing segment if:\r\n  // - not appending\r\n  // - appending to trailing slash (last segment is empty)\r\n  if (!append || !stack[stack.length - 1]) {\r\n    stack.pop()\r\n  }\r\n\r\n  // resolve relative path\r\n  const segments = relative.replace(/^\\//, '').split('/')\r\n  for (let i = 0; i < segments.length; i++) {\r\n    const segment = segments[i]\r\n    if (segment === '..') {\r\n      stack.pop()\r\n    } else if (segment !== '.') {\r\n      stack.push(segment)\r\n    }\r\n  }\r\n\r\n  // ensure leading slash\r\n  if (stack[0] !== '') {\r\n    stack.unshift('')\r\n  }\r\n\r\n  return stack.join('/')\r\n}\r\n\r\nexport function resolveSidebarItems (page, route, site, localePath) {\r\n  const { pages, themeConfig } = site\r\n\r\n  const localeConfig = localePath && themeConfig.locales\r\n    ? themeConfig.locales[localePath] || themeConfig\r\n    : themeConfig\r\n\r\n  const pageSidebarConfig = page.frontmatter.sidebar || localeConfig.sidebar || themeConfig.sidebar\r\n  if (pageSidebarConfig === 'auto') {\r\n    return resolveHeaders(page)\r\n  }\r\n\r\n  const sidebarConfig = localeConfig.sidebar || themeConfig.sidebar\r\n  if (!sidebarConfig) {\r\n    return []\r\n  } else {\r\n    const { base, config } = resolveMatchingConfig(route, sidebarConfig)\r\n    return config\r\n      ? config.map(item => resolveItem(item, pages, base))\r\n      : []\r\n  }\r\n}\r\n\r\nfunction resolveHeaders (page) {\r\n  const headers = groupHeaders(page.headers || [])\r\n  return [{\r\n    type: 'group',\r\n    collapsable: false,\r\n    title: page.title,\r\n    children: headers.map(h => ({\r\n      type: 'auto',\r\n      title: h.title,\r\n      basePath: page.path,\r\n      path: page.path + '#' + h.slug,\r\n      children: h.children || []\r\n    }))\r\n  }]\r\n}\r\n\r\nexport function groupHeaders (headers) {\r\n  // group h3s under h2\r\n  headers = headers.map(h => Object.assign({}, h))\r\n  let lastH2\r\n  headers.forEach(h => {\r\n    if (h.level === 2) {\r\n      lastH2 = h\r\n    } else if (lastH2) {\r\n      (lastH2.children || (lastH2.children = [])).push(h)\r\n    }\r\n  })\r\n  return headers.filter(h => h.level === 2)\r\n}\r\n\r\nexport function resolveNavLinkItem (linkItem) {\r\n  return Object.assign(linkItem, {\r\n    type: linkItem.items && linkItem.items.length ? 'links' : 'link'\r\n  })\r\n}\r\n\r\nexport function resolveMatchingConfig (route, config) {\r\n  if (Array.isArray(config)) {\r\n    return {\r\n      base: '/',\r\n      config: config\r\n    }\r\n  }\r\n  for (const base in config) {\r\n    if (ensureEndingSlash(route.path).indexOf(base) === 0) {\r\n      return {\r\n        base,\r\n        config: config[base]\r\n      }\r\n    }\r\n  }\r\n  return {}\r\n}\r\n\r\nfunction ensureEndingSlash (path) {\r\n  return /(\\.html|\\/)$/.test(path)\r\n    ? path\r\n    : path + '/'\r\n}\r\n\r\nfunction resolveItem (item, pages, base, isNested) {\r\n  if (typeof item === 'string') {\r\n    return resolvePage(pages, item, base)\r\n  } else if (Array.isArray(item)) {\r\n    return Object.assign(resolvePage(pages, item[0], base), {\r\n      title: item[1]\r\n    })\r\n  } else {\r\n    if (isNested) {\r\n      console.error(\r\n        '[vuepress] Nested sidebar groups are not supported. ' +\r\n        'Consider using navbar + categories instead.'\r\n      )\r\n    }\r\n    const children = item.children || []\r\n    return {\r\n      type: 'group',\r\n      title: item.title,\r\n      children: children.map(child => resolveItem(child, pages, base, true)),\r\n      collapsable: item.collapsable !== false\r\n    }\r\n  }\r\n}\r\n"]}]}