{"remainingRequest":"D:\\1\\实训一\\study\\study\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!D:\\1\\实训一\\study\\study\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!D:\\1\\实训一\\study\\study\\node_modules\\vue-loader\\lib\\index.js??ref--1-1!D:\\1\\实训一\\study\\study\\lib\\webpack\\markdownLoader.js??ref--1-2!D:\\1\\实训一\\study\\study\\src\\zh\\guide\\using-vue.md?vue&type=template&id=45ea500a&","dependencies":[{"path":"D:\\1\\实训一\\study\\study\\src\\zh\\guide\\using-vue.md","mtime":1557200317066},{"path":"D:\\1\\实训一\\study\\study\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\1\\实训一\\study\\study\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"D:\\1\\实训一\\study\\study\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\1\\实训一\\study\\study\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\1\\实训一\\study\\study\\lib\\webpack\\markdownLoader.js","mtime":1557200316988}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    { staticClass: \"content\" },\n    [\n      _vm._m(0),\n      _vm._v(\" \"),\n      _vm._m(1),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _vm._v(\n          \"当你在开发一个 VuePress 应用时，由于所有的页面在生成静态 HTML 时都需要通过 Node.js 服务端渲染，因此所有的 Vue 相关代码都应当遵循 \"\n        ),\n        _c(\n          \"a\",\n          {\n            attrs: {\n              href: \"https://ssr.vuejs.org/zh/universal.html\",\n              target: \"_blank\",\n              rel: \"noopener noreferrer\"\n            }\n          },\n          [_vm._v(\"编写通用代码\"), _c(\"OutboundLink\")],\n          1\n        ),\n        _vm._v(\" 的要求。简而言之，请确保只在 \"),\n        _c(\"code\", [_vm._v(\"beforeMount\")]),\n        _vm._v(\" 或者 \"),\n        _c(\"code\", [_vm._v(\"mounted\")]),\n        _vm._v(\" 访问浏览器 / DOM 的 API。\")\n      ]),\n      _vm._v(\" \"),\n      _vm._m(2),\n      _vm._v(\" \"),\n      _vm._m(3),\n      _vm._m(4),\n      _vm._v(\" \"),\n      _vm._m(5),\n      _vm._m(6),\n      _vm._v(\" \"),\n      _vm._m(7),\n      _vm._v(\" \"),\n      _vm._m(8),\n      _vm._v(\" \"),\n      _vm._m(9),\n      _vm._v(\" \"),\n      _vm._m(10),\n      _vm._m(11),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"language-text\" }, [\n        _c(\"pre\", [_c(\"code\", [_vm._v(_vm._s(1 + 1))])])\n      ]),\n      _vm._v(\" \"),\n      _vm._m(12),\n      _vm._v(\" \"),\n      _c(\"p\", [_vm._v(\"同样地，也可以使用指令:\")]),\n      _vm._v(\" \"),\n      _vm._m(13),\n      _vm._v(\" \"),\n      _vm._m(14),\n      _vm._m(15),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"language-text\" }, [\n        _c(\"pre\", [\n          _c(\n            \"code\",\n            _vm._l(3, function(i) {\n              return _c(\"span\", [_vm._v(_vm._s(i) + \" \")])\n            }),\n            0\n          )\n        ])\n      ]),\n      _vm._v(\" \"),\n      _vm._m(16),\n      _vm._v(\" \"),\n      _c(\n        \"p\",\n        [\n          _vm._v(\"编译后的组件没有私有数据，但可以访问 \"),\n          _c(\n            \"router-link\",\n            { attrs: { to: \"./custom-themes.html#网站和页面的元数据\" } },\n            [_vm._v(\"网站的元数据\")]\n          ),\n          _vm._v(\"，举例来说：\")\n        ],\n        1\n      ),\n      _vm._v(\" \"),\n      _vm._m(17),\n      _vm._v(\" \"),\n      _vm._m(18),\n      _vm._m(19),\n      _vm._v(\" \"),\n      _vm._m(20),\n      _vm._m(21),\n      _vm._v(\" \"),\n      _vm._m(22),\n      _vm._v(\" \"),\n      _vm._m(23),\n      _vm._v(\" \"),\n      _vm._m(24),\n      _vm._m(25),\n      _vm._v(\" \"),\n      _vm._m(26),\n      _vm._v(\" \"),\n      _vm._m(27),\n      _vm._v(\" \"),\n      _vm._m(28),\n      _vm._v(\" \"),\n      _vm._m(29),\n      _c(\"p\", [\n        _vm._v(\n          \"你可以直接使用这些组件在任意的 Markdown 文件中（组件名是通过文件名取到的）：\"\n        )\n      ]),\n      _vm._v(\" \"),\n      _vm._m(30),\n      _c(\"demo-1\"),\n      _vm._v(\" \"),\n      _c(\"OtherComponent\"),\n      _vm._v(\" \"),\n      _c(\"Foo-Bar\"),\n      _vm._v(\" \"),\n      _vm._m(31),\n      _vm._v(\" \"),\n      _vm._m(32),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _vm._v(\"你可以在标题中使用 Vue 组件，但是请留意以下两种方式的不同：\")\n      ]),\n      _vm._v(\" \"),\n      _vm._m(33),\n      _vm._v(\" \"),\n      _vm._m(34),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"tip custom-block\" }, [\n        _c(\"p\", { staticClass: \"custom-block-title\" }, [_vm._v(\"TIP\")]),\n        _vm._v(\" \"),\n        _c(\n          \"p\",\n          [\n            _vm._v(\"输出的 HTML 由 \"),\n            _c(\n              \"a\",\n              {\n                attrs: {\n                  href: \"https://github.com/markdown-it/markdown-it\",\n                  target: \"_blank\",\n                  rel: \"noopener noreferrer\"\n                }\n              },\n              [_vm._v(\"markdown-it\"), _c(\"OutboundLink\")],\n              1\n            ),\n            _vm._v(\" 完成。而解析后的标题由 VuePress 完成，用于\"),\n            _c(\n              \"router-link\",\n              { attrs: { to: \"./../default-theme-config/#侧边栏\" } },\n              [_vm._v(\"侧边栏\")]\n            ),\n            _vm._v(\"以及文档的标题。\")\n          ],\n          1\n        )\n      ]),\n      _vm._v(\" \"),\n      _vm._m(35),\n      _vm._v(\" \"),\n      _vm._m(36),\n      _vm._v(\" \"),\n      _vm._m(37),\n      _c(\"p\", [_vm._v(\"然后你就可以在 Markdown 或是组件中使用如下代码：\")]),\n      _vm._v(\" \"),\n      _vm._m(38),\n      _vm._m(39),\n      _vm._v(\" \"),\n      _vm._m(40),\n      _c(\"div\", { staticClass: \"tip custom-block\" }, [\n        _c(\"p\", { staticClass: \"custom-block-title\" }, [_vm._v(\"TIP\")]),\n        _vm._v(\" \"),\n        _vm._m(41),\n        _vm._v(\" \"),\n        _c(\n          \"p\",\n          [\n            _vm._v(\"对于那些没有内置的预处理器，除了安装对应的依赖，你还需要 \"),\n            _c(\n              \"router-link\",\n              { attrs: { to: \"./../config/#configurewebpack\" } },\n              [_vm._v(\"拓展内部的 Webpack 配置\")]\n            ),\n            _vm._v(\"。\")\n          ],\n          1\n        )\n      ]),\n      _vm._v(\" \"),\n      _vm._m(42),\n      _vm._v(\" \"),\n      _vm._m(43),\n      _vm._v(\" \"),\n      _c(\"p\", { staticClass: \"demo\", class: _vm.$style.example }),\n      _vm._v(\" \"),\n      _vm._m(44),\n      _vm._v(\" \"),\n      _c(\n        \"h3\",\n        { attrs: { id: \"outboundlink\" } },\n        [\n          _c(\n            \"a\",\n            {\n              staticClass: \"header-anchor\",\n              attrs: { href: \"#outboundlink\", \"aria-hidden\": \"true\" }\n            },\n            [_vm._v(\"#\")]\n          ),\n          _vm._v(\" OutboundLink \"),\n          _c(\"Badge\", { attrs: { text: \"stable\" } })\n        ],\n        1\n      ),\n      _vm._v(\" \"),\n      _c(\n        \"p\",\n        [\n          _vm._v(\"(\"),\n          _c(\"OutboundLink\"),\n          _vm._v(\n            \") 用来表明当前是一个外部链接。在 VuePress 中这个组件会紧跟在每一个外部链接后面。\"\n          )\n        ],\n        1\n      ),\n      _vm._v(\" \"),\n      _c(\n        \"h3\",\n        { attrs: { id: \"clientonly\" } },\n        [\n          _c(\n            \"a\",\n            {\n              staticClass: \"header-anchor\",\n              attrs: { href: \"#clientonly\", \"aria-hidden\": \"true\" }\n            },\n            [_vm._v(\"#\")]\n          ),\n          _vm._v(\" ClientOnly \"),\n          _c(\"Badge\", { attrs: { text: \"stable\" } })\n        ],\n        1\n      ),\n      _vm._v(\" \"),\n      _vm._m(45),\n      _vm._v(\" \"),\n      _c(\n        \"h3\",\n        { attrs: { id: \"content\" } },\n        [\n          _c(\n            \"a\",\n            {\n              staticClass: \"header-anchor\",\n              attrs: { href: \"#content\", \"aria-hidden\": \"true\" }\n            },\n            [_vm._v(\"#\")]\n          ),\n          _vm._v(\" Content \"),\n          _c(\"Badge\", { attrs: { text: \"beta\", type: \"warn\" } })\n        ],\n        1\n      ),\n      _vm._v(\" \"),\n      _vm._m(46),\n      _vm._v(\" \"),\n      _c(\n        \"p\",\n        [\n          _vm._v(\"当前的 \"),\n          _c(\"code\", [_vm._v(\".md\")]),\n          _vm._v(\" 文件渲染的内容，当你在使用 \"),\n          _c(\n            \"router-link\",\n            {\n              attrs: { to: \"./../default-theme-config/#特定页面的自定义布局\" }\n            },\n            [_vm._v(\"自定义布局\")]\n          ),\n          _vm._v(\" 时，它将非常有用。\")\n        ],\n        1\n      ),\n      _vm._v(\" \"),\n      _vm._m(47),\n      _vm._m(48),\n      _vm._v(\" \"),\n      _c(\"ul\", [\n        _c(\n          \"li\",\n          [\n            _c(\n              \"router-link\",\n              { attrs: { to: \"./custom-themes.html#获取渲染内容\" } },\n              [_vm._v(\"自定义主题 > 获取渲染内容\")]\n            )\n          ],\n          1\n        )\n      ]),\n      _vm._v(\" \"),\n      _c(\n        \"h3\",\n        { attrs: { id: \"badge\" } },\n        [\n          _c(\n            \"a\",\n            {\n              staticClass: \"header-anchor\",\n              attrs: { href: \"#badge\", \"aria-hidden\": \"true\" }\n            },\n            [_vm._v(\"#\")]\n          ),\n          _vm._v(\" Badge \"),\n          _c(\"Badge\", { attrs: { text: \"beta\", type: \"warn\" } }),\n          _vm._v(\" \"),\n          _c(\"Badge\", { attrs: { text: \"0.10.1+\" } })\n        ],\n        1\n      ),\n      _vm._v(\" \"),\n      _vm._m(49),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _vm._v(\"你可以在标题中，使用这个组件来为某些 API 添加一些状态：\")\n      ]),\n      _vm._v(\" \"),\n      _vm._m(50),\n      _vm._m(51),\n      _vm._v(\" \"),\n      _vm._m(52)\n    ],\n    1\n  )\n}\nvar staticRenderFns = [\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h1\", { attrs: { id: \"在-markdown-中-使用-vue\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#在-markdown-中-使用-vue\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" 在 Markdown 中 使用 Vue\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h2\", { attrs: { id: \"浏览器的-api-访问限制\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#浏览器的-api-访问限制\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" 浏览器的 API 访问限制\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _vm._v(\n        \"如果你正在使用，或者需要展示一个对于 SSR 不怎么友好的组件（比如包含了自定义指令），你可以将它们包裹在内置的 \"\n      ),\n      _c(\"code\", [_vm._v(\"<ClientOnly>\")]),\n      _vm._v(\" 组件中：\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-md extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-md\" } }, [\n        _c(\"code\", [\n          _c(\"span\", { pre: true, attrs: { class: \"token tag\" } }, [\n            _c(\"span\", { pre: true, attrs: { class: \"token tag\" } }, [\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"<\")\n              ]),\n              _vm._v(\"ClientOnly\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\">\")\n            ])\n          ]),\n          _vm._v(\"\\n  \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token tag\" } }, [\n            _c(\"span\", { pre: true, attrs: { class: \"token tag\" } }, [\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"<\")\n              ]),\n              _vm._v(\"NonSSRFriendlyComponent\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"/>\")\n            ])\n          ]),\n          _vm._v(\"\\n\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token tag\" } }, [\n            _c(\"span\", { pre: true, attrs: { class: \"token tag\" } }, [\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"</\")\n              ]),\n              _vm._v(\"ClientOnly\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\">\")\n            ])\n          ]),\n          _vm._v(\"\\n\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _vm._v(\"请注意，这并不能解决一些组件或库在\"),\n      _c(\"strong\", [_vm._v(\"导入\")]),\n      _vm._v(\n        \"时就试图访问浏览器 API 的问题 —— 如果需要使用这样的组件或库，你需要在合适的生命周期钩子中\"\n      ),\n      _c(\"strong\", [_vm._v(\"动态导入\")]),\n      _vm._v(\"它们：\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-vue extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-vue\" } }, [\n        _c(\"code\", [\n          _c(\"span\", { pre: true, attrs: { class: \"token tag\" } }, [\n            _c(\"span\", { pre: true, attrs: { class: \"token tag\" } }, [\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"<\")\n              ]),\n              _vm._v(\"script\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\">\")\n            ])\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token script\" } }, [\n            _c(\n              \"span\",\n              { pre: true, attrs: { class: \"token language-javascript\" } },\n              [\n                _vm._v(\"\\n\"),\n                _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n                  _vm._v(\"export\")\n                ]),\n                _vm._v(\" \"),\n                _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n                  _vm._v(\"default\")\n                ]),\n                _vm._v(\" \"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"{\")]\n                ),\n                _vm._v(\"\\n  \"),\n                _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n                  _vm._v(\"mounted\")\n                ]),\n                _vm._v(\" \"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"(\")]\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\")\")]\n                ),\n                _vm._v(\" \"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"{\")]\n                ),\n                _vm._v(\"\\n    \"),\n                _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n                  _vm._v(\"import\")\n                ]),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"(\")]\n                ),\n                _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n                  _vm._v(\"'./lib-that-access-window-on-import'\")\n                ]),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\")\")]\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\".\")]\n                ),\n                _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n                  _vm._v(\"then\")\n                ]),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"(\")]\n                ),\n                _c(\"span\", { pre: true, attrs: { class: \"token parameter\" } }, [\n                  _vm._v(\"module\")\n                ]),\n                _vm._v(\" \"),\n                _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n                  _vm._v(\"=>\")\n                ]),\n                _vm._v(\" \"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"{\")]\n                ),\n                _vm._v(\"\\n      \"),\n                _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n                  _vm._v(\"// use code\")\n                ]),\n                _vm._v(\"\\n    \"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"}\")]\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\")\")]\n                ),\n                _vm._v(\"\\n  \"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"}\")]\n                ),\n                _vm._v(\"\\n\"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"}\")]\n                ),\n                _vm._v(\"\\n\")\n              ]\n            )\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token tag\" } }, [\n            _c(\"span\", { pre: true, attrs: { class: \"token tag\" } }, [\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"</\")\n              ]),\n              _vm._v(\"script\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\">\")\n            ])\n          ]),\n          _vm._v(\"\\n\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h2\", { attrs: { id: \"模板语法\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#模板语法\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" 模板语法\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h3\", { attrs: { id: \"插值\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#插值\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" 插值\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _vm._v(\n        \"每一个 Markdown 文件将首先被编译成 HTML，接着作为一个 Vue 组件传入 \"\n      ),\n      _c(\"code\", [_vm._v(\"vue-loader\")]),\n      _vm._v(\"，这意味着你可以在文本中使用 Vue 风格的插值：\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [_c(\"strong\", [_vm._v(\"Input\")])])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-md extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-md\" } }, [\n        _c(\"code\", [_vm._v(\"{{ 1 + 1 }}\\n\")])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [_c(\"strong\", [_vm._v(\"Output\")])])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h3\", { attrs: { id: \"指令\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#指令\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" 指令\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [_c(\"strong\", [_vm._v(\"Input\")])])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-md extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-md\" } }, [\n        _c(\"code\", [\n          _c(\"span\", { pre: true, attrs: { class: \"token tag\" } }, [\n            _c(\"span\", { pre: true, attrs: { class: \"token tag\" } }, [\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"<\")\n              ]),\n              _vm._v(\"span\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token attr-name\" } }, [\n              _vm._v(\"v-for\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token attr-value\" } }, [\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"=\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v('\"')\n              ]),\n              _vm._v(\"i in 3\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v('\"')\n              ])\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\">\")\n            ])\n          ]),\n          _vm._v(\"{{ i }} \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token tag\" } }, [\n            _c(\"span\", { pre: true, attrs: { class: \"token tag\" } }, [\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"</\")\n              ]),\n              _vm._v(\"span\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\">\")\n            ])\n          ]),\n          _vm._v(\"\\n\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [_c(\"strong\", [_vm._v(\"Output\")])])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h3\", { attrs: { id: \"访问网站以及页面的数据\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#访问网站以及页面的数据\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" 访问网站以及页面的数据\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [_c(\"strong\", [_vm._v(\"Input\")])])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-md extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-md\" } }, [\n        _c(\"code\", [_vm._v(\"{{ $page }}\\n\")])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [_c(\"strong\", [_vm._v(\"Output\")])])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-json extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-json\" } }, [\n        _c(\"code\", [\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"{\")\n          ]),\n          _vm._v(\"\\n  \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token property\" } }, [\n            _vm._v('\"path\"')\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n            _vm._v(\":\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n            _vm._v('\"/using-vue.html\"')\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\",\")\n          ]),\n          _vm._v(\"\\n  \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token property\" } }, [\n            _vm._v('\"title\"')\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n            _vm._v(\":\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n            _vm._v('\"Using Vue in Markdown\"')\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\",\")\n          ]),\n          _vm._v(\"\\n  \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token property\" } }, [\n            _vm._v('\"frontmatter\"')\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n            _vm._v(\":\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"{\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"}\")\n          ]),\n          _vm._v(\"\\n\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"}\")\n          ]),\n          _vm._v(\"\\n\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h2\", { attrs: { id: \"escaping\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#escaping\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" Escaping\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _vm._v(\"默认情况下，块级 (block) 的代码块将会被自动包裹在 \"),\n      _c(\"code\", [_vm._v(\"v-pre\")]),\n      _vm._v(\n        \" 中。如果你想要在内联 (inline) 的代码块或者普通文本中显示原始的大括号，或者一些 Vue 特定的语法，你需要使用自定义容器 \"\n      ),\n      _c(\"code\", [_vm._v(\"v-pre\")]),\n      _vm._v(\" 来包裹：\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [_c(\"strong\", [_vm._v(\"Input\")])])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-md extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-md\" } }, [\n        _c(\"code\", [\n          _vm._v(\"::: v-pre\\n\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token code keyword\" } }, [\n            _vm._v(\"`{{ This will be displayed as-is }}`\")\n          ]),\n          _vm._v(\"\\n:::\\n\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [_c(\"strong\", [_vm._v(\"Output\")])])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { pre: true }, [\n      _c(\"p\", [_c(\"code\", [_vm._v(\"{{ This will be displayed as-is }}\")])])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h2\", { attrs: { id: \"使用组件\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#使用组件\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" 使用组件\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _vm._v(\"所有在 \"),\n      _c(\"code\", [_vm._v(\".vuepress/components\")]),\n      _vm._v(\" 中找到的 \"),\n      _c(\"code\", [_vm._v(\"*.vue\")]),\n      _vm._v(\" 文件将会自动地被注册为全局的异步组件，如：\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language- extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-text\" } }, [\n        _c(\"code\", [\n          _vm._v(\n            \".\\n└─ .vuepress\\n   └─ components\\n      ├─ demo-1.vue\\n      ├─ OtherComponent.vue\\n      └─ Foo\\n         └─ Bar.vue\\n\"\n          )\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-md extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-md\" } }, [\n        _c(\"code\", [\n          _c(\"span\", { pre: true, attrs: { class: \"token tag\" } }, [\n            _c(\"span\", { pre: true, attrs: { class: \"token tag\" } }, [\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"<\")\n              ]),\n              _vm._v(\"demo-1\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"/>\")\n            ])\n          ]),\n          _vm._v(\"\\n\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token tag\" } }, [\n            _c(\"span\", { pre: true, attrs: { class: \"token tag\" } }, [\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"<\")\n              ]),\n              _vm._v(\"OtherComponent\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"/>\")\n            ])\n          ]),\n          _vm._v(\"\\n\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token tag\" } }, [\n            _c(\"span\", { pre: true, attrs: { class: \"token tag\" } }, [\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"<\")\n              ]),\n              _vm._v(\"Foo-Bar\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"/>\")\n            ])\n          ]),\n          _vm._v(\"\\n\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"warning custom-block\" }, [\n      _c(\"p\", { staticClass: \"custom-block-title\" }, [_vm._v(\"重要！\")]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _vm._v(\n          \"请确保一个自定义组件的名字包含连接符或者是 PascalCase，否则，它将会被视为一个内联元素，并被包裹在一个 \"\n        ),\n        _c(\"code\", [_vm._v(\"<p>\")]),\n        _vm._v(\" 标签中，这将会导致 HTML 渲染紊乱，因为 HTML 标准规定， \"),\n        _c(\"code\", [_vm._v(\"<p>\")]),\n        _vm._v(\" 标签中不允许放置任何块级元素。\")\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h3\", { attrs: { id: \"在标题中使用组件\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#在标题中使用组件\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" 在标题中使用组件\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"table\", [\n      _c(\"thead\", [\n        _c(\"tr\", [\n          _c(\"th\", [_vm._v(\"Markdown\")]),\n          _vm._v(\" \"),\n          _c(\"th\", [_vm._v(\"输出的 HTML\")]),\n          _vm._v(\" \"),\n          _c(\"th\", [_vm._v(\"解析后的标题\")])\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"tbody\", [\n        _c(\"tr\", [\n          _c(\"td\", [\n            _c(\"pre\", { pre: true }, [_c(\"code\", [_vm._v(\" # text <Tag/> \")])])\n          ]),\n          _vm._v(\" \"),\n          _c(\"td\", [_c(\"code\", [_vm._v(\"<h1>text <Tag/></h1>\")])]),\n          _vm._v(\" \"),\n          _c(\"td\", [_c(\"code\", [_vm._v(\"text\")])])\n        ]),\n        _vm._v(\" \"),\n        _c(\"tr\", [\n          _c(\"td\", [\n            _c(\"pre\", { pre: true }, [\n              _c(\"code\", [_vm._v(\" # text `<Tag/>` \")])\n            ])\n          ]),\n          _vm._v(\" \"),\n          _c(\"td\", [\n            _c(\"code\", [_vm._v(\"<h1>text <code>&lt;Tag/&gt;</code></h1>\")])\n          ]),\n          _vm._v(\" \"),\n          _c(\"td\", [_c(\"code\", [_vm._v(\"text <Tag/>\")])])\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _vm._v(\"被 \"),\n      _c(\"code\", [_vm._v(\"<code>\")]),\n      _vm._v(\" 包装的 HTML 将按原样显示，只有未被包装的 HTML 才会被 Vue 解析。\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h2\", { attrs: { id: \"使用预处理器\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#使用预处理器\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" 使用预处理器\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _vm._v(\"VuePress 对以下预处理器已经内置相关的 webpack 配置：\"),\n      _c(\"code\", [_vm._v(\"sass\")]),\n      _vm._v(\"、\"),\n      _c(\"code\", [_vm._v(\"scss\")]),\n      _vm._v(\"、\"),\n      _c(\"code\", [_vm._v(\"less\")]),\n      _vm._v(\"、\"),\n      _c(\"code\", [_vm._v(\"stylus\")]),\n      _vm._v(\" 和 \"),\n      _c(\"code\", [_vm._v(\"pug\")]),\n      _vm._v(\"。要使用它们你只需要在项目中安装对应的依赖即可。例如，要使用 \"),\n      _c(\"code\", [_vm._v(\"sass\")]),\n      _vm._v(\"，需要安装：\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-bash extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-bash\" } }, [\n        _c(\"code\", [\n          _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n            _vm._v(\"yarn\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n            _vm._v(\"add\")\n          ]),\n          _vm._v(\" -D sass-loader node-sass\\n\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-vue extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-vue\" } }, [\n        _c(\"code\", [\n          _c(\"span\", { pre: true, attrs: { class: \"token tag\" } }, [\n            _c(\"span\", { pre: true, attrs: { class: \"token tag\" } }, [\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"<\")\n              ]),\n              _vm._v(\"style\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token attr-name\" } }, [\n              _vm._v(\"lang\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token attr-value\" } }, [\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"=\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v('\"')\n              ]),\n              _vm._v(\"sass\"),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v('\"')\n              ])\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\">\")\n            ])\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token style\" } }, [\n            _c(\"span\", { pre: true, attrs: { class: \"token language-css\" } }, [\n              _vm._v(\"\\n  .title\\n    \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token property\" } }, [\n                _vm._v(\"font-size\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\":\")\n              ]),\n              _vm._v(\" 20px\\n\")\n            ])\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token tag\" } }, [\n            _c(\"span\", { pre: true, attrs: { class: \"token tag\" } }, [\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"</\")\n              ]),\n              _vm._v(\"style\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\">\")\n            ])\n          ]),\n          _vm._v(\"\\n\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _vm._v(\"要在组件中使用 \"),\n      _c(\"code\", [_vm._v('<template lang=\"pug\">')]),\n      _vm._v(\"，则需要安装 \"),\n      _c(\"code\", [_vm._v(\"pug\")]),\n      _vm._v(\" 和 \"),\n      _c(\"code\", [_vm._v(\"pug-plain-loader\")]),\n      _vm._v(\":\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-bash extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-bash\" } }, [\n        _c(\"code\", [\n          _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n            _vm._v(\"yarn\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n            _vm._v(\"add\")\n          ]),\n          _vm._v(\" -D pug pug-plain-loader\\n\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _vm._v(\"需要指出的是，如果你是一个 \"),\n      _c(\"code\", [_vm._v(\"stylus\")]),\n      _vm._v(\" 用户，你并不需要在你的项目中安装 \"),\n      _c(\"code\", [_vm._v(\"stylus\")]),\n      _vm._v(\" 和 \"),\n      _c(\"code\", [_vm._v(\"stylus-loader\")]),\n      _vm._v(\"，因为 VuePress 已经内置了它们。\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h2\", { attrs: { id: \"脚本和样式提升\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#脚本和样式提升\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" 脚本和样式提升\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _vm._v(\n        \"有时，你可以只想在当前页面应用一些 JavaScript 或者 CSS，在这种情况下，你可以直接在 Markdown 文件中使用原生的 \"\n      ),\n      _c(\"code\", [_vm._v(\"<script>\")]),\n      _vm._v(\" 或者 \"),\n      _c(\"code\", [_vm._v(\"<style>\")]),\n      _vm._v(\n        \" 标签，它们将会从编译后的 HTML 文件中提取出来，并作为生成的 Vue 单文件组件的 \"\n      ),\n      _c(\"code\", [_vm._v(\"<script>\")]),\n      _vm._v(\" 和 \"),\n      _c(\"code\", [_vm._v(\"<style>\")]),\n      _vm._v(\" 标签。\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h2\", { attrs: { id: \"内置的组件\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#内置的组件\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" 内置的组件\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _vm._v(\"参考 \"),\n      _c(\n        \"a\",\n        {\n          attrs: {\n            href:\n              \"#%E6%B5%8F%E8%A7%88%E5%99%A8%E7%9A%84-api-%E8%AE%BF%E9%97%AE%E9%99%90%E5%88%B6\"\n          }\n        },\n        [_vm._v(\"浏览器的 API 访问限制\")]\n      ),\n      _vm._v(\"。\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"ul\", [\n      _c(\"li\", [\n        _c(\"p\", [_c(\"strong\", [_vm._v(\"Props\")]), _vm._v(\":\")]),\n        _vm._v(\" \"),\n        _c(\"ul\", [\n          _c(\"li\", [_c(\"code\", [_vm._v(\"custom\")]), _vm._v(\" - boolean\")])\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"li\", [_c(\"p\", [_c(\"strong\", [_vm._v(\"用法\")]), _vm._v(\"：\")])])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-vue extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-vue\" } }, [\n        _c(\"code\", [\n          _c(\"span\", { pre: true, attrs: { class: \"token tag\" } }, [\n            _c(\"span\", { pre: true, attrs: { class: \"token tag\" } }, [\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"<\")\n              ]),\n              _vm._v(\"Content\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"/>\")\n            ])\n          ]),\n          _vm._v(\"\\n\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [_c(\"strong\", [_vm._v(\"参考:\")])])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"ul\", [\n      _c(\"li\", [\n        _c(\"p\", [_c(\"strong\", [_vm._v(\"Props\")]), _vm._v(\":\")]),\n        _vm._v(\" \"),\n        _c(\"ul\", [\n          _c(\"li\", [_c(\"code\", [_vm._v(\"text\")]), _vm._v(\" - string\")]),\n          _vm._v(\" \"),\n          _c(\"li\", [\n            _c(\"code\", [_vm._v(\"type\")]),\n            _vm._v(\" - string, 可选值： \"),\n            _c(\"code\", [_vm._v('\"tip\"|\"warn\"|\"error\"')]),\n            _vm._v(\"，默认值是： \"),\n            _c(\"code\", [_vm._v('\"tip\"')])\n          ]),\n          _vm._v(\" \"),\n          _c(\"li\", [\n            _c(\"code\", [_vm._v(\"vertical\")]),\n            _vm._v(\" - string, 可选值： \"),\n            _c(\"code\", [_vm._v('\"top\"|\"middle\"')]),\n            _vm._v(\"，默认值是： \"),\n            _c(\"code\", [_vm._v('\"top\"')])\n          ])\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"li\", [_c(\"p\", [_c(\"strong\", [_vm._v(\"Usage\")]), _vm._v(\":\")])])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-md extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-md\" } }, [\n        _c(\"code\", [\n          _c(\"span\", { pre: true, attrs: { class: \"token title important\" } }, [\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"###\")\n            ]),\n            _vm._v(\n              ' Badge <Badge text=\"beta\" type=\"warn\"/> <Badge text=\"0.10.1+\"/>'\n            )\n          ]),\n          _vm._v(\"\\n\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [_c(\"strong\", [_vm._v(\"参考:\")])])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"ul\", [\n      _c(\"li\", [\n        _c(\n          \"a\",\n          {\n            attrs: {\n              href:\n                \"#%E5%9C%A8%E6%A0%87%E9%A2%98%E4%B8%AD%E4%BD%BF%E7%94%A8%E7%BB%84%E4%BB%B6\"\n            }\n          },\n          [_vm._v(\"在标题中使用组件\")]\n        )\n      ])\n    ])\n  }\n]\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}