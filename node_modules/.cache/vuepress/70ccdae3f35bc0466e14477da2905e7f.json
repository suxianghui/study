{"remainingRequest":"D:\\1\\实训一\\study\\study\\node_modules\\babel-loader\\lib\\index.js??ref--3-1!D:\\1\\实训一\\study\\study\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\1\\实训一\\study\\study\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\1\\实训一\\study\\study\\lib\\default-theme\\Layout.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\1\\实训一\\study\\study\\lib\\default-theme\\Layout.vue","mtime":1557200316949},{"path":"D:\\1\\实训一\\study\\study\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\1\\实训一\\study\\study\\node_modules\\babel-loader\\lib\\index.js","mtime":1526583314000},{"path":"D:\\1\\实训一\\study\\study\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\1\\实训一\\study\\study\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport Vue from 'vue';\nimport nprogress from 'nprogress';\nimport Home from './Home.vue';\nimport Navbar from './Navbar.vue';\nimport Page from './Page.vue';\nimport Sidebar from './Sidebar.vue';\nimport SWUpdatePopup from './SWUpdatePopup.vue';\nimport { resolveSidebarItems } from './util';\nexport default {\n  components: {\n    Home: Home,\n    Page: Page,\n    Sidebar: Sidebar,\n    Navbar: Navbar,\n    SWUpdatePopup: SWUpdatePopup\n  },\n  data: function data() {\n    return {\n      isSidebarOpen: false,\n      swUpdateEvent: null\n    };\n  },\n  computed: {\n    shouldShowNavbar: function shouldShowNavbar() {\n      var themeConfig = this.$site.themeConfig;\n      var frontmatter = this.$page.frontmatter;\n\n      if (frontmatter.navbar === false || themeConfig.navbar === false) {\n        return false;\n      }\n\n      return this.$title || themeConfig.logo || themeConfig.repo || themeConfig.nav || this.$themeLocaleConfig.nav;\n    },\n    shouldShowSidebar: function shouldShowSidebar() {\n      var frontmatter = this.$page.frontmatter;\n      return !frontmatter.layout && !frontmatter.home && frontmatter.sidebar !== false && this.sidebarItems.length;\n    },\n    sidebarItems: function sidebarItems() {\n      return resolveSidebarItems(this.$page, this.$route, this.$site, this.$localePath);\n    },\n    pageClasses: function pageClasses() {\n      var userPageClass = this.$page.frontmatter.pageClass;\n      return [{\n        'no-navbar': !this.shouldShowNavbar,\n        'sidebar-open': this.isSidebarOpen,\n        'no-sidebar': !this.shouldShowSidebar\n      }, userPageClass];\n    }\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    window.addEventListener('scroll', this.onScroll); // configure progress bar\n\n    nprogress.configure({\n      showSpinner: false\n    });\n    this.$router.beforeEach(function (to, from, next) {\n      if (to.path !== from.path && !Vue.component(to.name)) {\n        nprogress.start();\n      }\n\n      next();\n    });\n    this.$router.afterEach(function () {\n      nprogress.done();\n      _this.isSidebarOpen = false;\n    });\n    this.$on('sw-updated', this.onSWUpdated);\n  },\n  methods: {\n    toggleSidebar: function toggleSidebar(to) {\n      this.isSidebarOpen = typeof to === 'boolean' ? to : !this.isSidebarOpen;\n    },\n    // side swipe\n    onTouchStart: function onTouchStart(e) {\n      this.touchStart = {\n        x: e.changedTouches[0].clientX,\n        y: e.changedTouches[0].clientY\n      };\n    },\n    onTouchEnd: function onTouchEnd(e) {\n      var dx = e.changedTouches[0].clientX - this.touchStart.x;\n      var dy = e.changedTouches[0].clientY - this.touchStart.y;\n\n      if (Math.abs(dx) > Math.abs(dy) && Math.abs(dx) > 40) {\n        if (dx > 0 && this.touchStart.x <= 80) {\n          this.toggleSidebar(true);\n        } else {\n          this.toggleSidebar(false);\n        }\n      }\n    },\n    onSWUpdated: function onSWUpdated(e) {\n      this.swUpdateEvent = e;\n    }\n  }\n};",{"version":3,"sources":["Layout.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div\r\n    class=\"theme-container\"\r\n    :class=\"pageClasses\"\r\n    @touchstart=\"onTouchStart\"\r\n    @touchend=\"onTouchEnd\"\r\n  >\r\n    <Navbar\r\n      v-if=\"shouldShowNavbar\"\r\n      @toggle-sidebar=\"toggleSidebar\"\r\n    />\r\n\r\n    <div\r\n      class=\"sidebar-mask\"\r\n      @click=\"toggleSidebar(false)\"\r\n    ></div>\r\n\r\n    <Sidebar\r\n      :items=\"sidebarItems\"\r\n      @toggle-sidebar=\"toggleSidebar\"\r\n    >\r\n      <slot\r\n        name=\"sidebar-top\"\r\n        slot=\"top\"\r\n      />\r\n      <slot\r\n        name=\"sidebar-bottom\"\r\n        slot=\"bottom\"\r\n      />\r\n    </Sidebar>\r\n\r\n    <div\r\n      class=\"custom-layout\"\r\n      v-if=\"$page.frontmatter.layout\"\r\n    >\r\n      <component :is=\"$page.frontmatter.layout\"/>\r\n    </div>\r\n\r\n    <Home v-else-if=\"$page.frontmatter.home\"/>\r\n\r\n    <Page\r\n      v-else\r\n      :sidebar-items=\"sidebarItems\"\r\n    >\r\n      <slot\r\n        name=\"page-top\"\r\n        slot=\"top\"\r\n      />\r\n      <slot\r\n        name=\"page-bottom\"\r\n        slot=\"bottom\"\r\n      />\r\n    </Page>\r\n\r\n    <SWUpdatePopup :updateEvent=\"swUpdateEvent\"/>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport Vue from 'vue'\r\nimport nprogress from 'nprogress'\r\nimport Home from './Home.vue'\r\nimport Navbar from './Navbar.vue'\r\nimport Page from './Page.vue'\r\nimport Sidebar from './Sidebar.vue'\r\nimport SWUpdatePopup from './SWUpdatePopup.vue'\r\nimport { resolveSidebarItems } from './util'\r\n\r\nexport default {\r\n  components: { Home, Page, Sidebar, Navbar, SWUpdatePopup },\r\n\r\n  data () {\r\n    return {\r\n      isSidebarOpen: false,\r\n      swUpdateEvent: null\r\n    }\r\n  },\r\n\r\n  computed: {\r\n    shouldShowNavbar () {\r\n      const { themeConfig } = this.$site\r\n      const { frontmatter } = this.$page\r\n      if (\r\n        frontmatter.navbar === false ||\r\n        themeConfig.navbar === false) {\r\n        return false\r\n      }\r\n      return (\r\n        this.$title ||\r\n        themeConfig.logo ||\r\n        themeConfig.repo ||\r\n        themeConfig.nav ||\r\n        this.$themeLocaleConfig.nav\r\n      )\r\n    },\r\n\r\n    shouldShowSidebar () {\r\n      const { frontmatter } = this.$page\r\n      return (\r\n        !frontmatter.layout &&\r\n        !frontmatter.home &&\r\n        frontmatter.sidebar !== false &&\r\n        this.sidebarItems.length\r\n      )\r\n    },\r\n\r\n    sidebarItems () {\r\n      return resolveSidebarItems(\r\n        this.$page,\r\n        this.$route,\r\n        this.$site,\r\n        this.$localePath\r\n      )\r\n    },\r\n\r\n    pageClasses () {\r\n      const userPageClass = this.$page.frontmatter.pageClass\r\n      return [\r\n        {\r\n          'no-navbar': !this.shouldShowNavbar,\r\n          'sidebar-open': this.isSidebarOpen,\r\n          'no-sidebar': !this.shouldShowSidebar\r\n        },\r\n        userPageClass\r\n      ]\r\n    }\r\n  },\r\n\r\n  mounted () {\r\n    window.addEventListener('scroll', this.onScroll)\r\n\r\n    // configure progress bar\r\n    nprogress.configure({ showSpinner: false })\r\n\r\n    this.$router.beforeEach((to, from, next) => {\r\n      if (to.path !== from.path && !Vue.component(to.name)) {\r\n        nprogress.start()\r\n      }\r\n      next()\r\n    })\r\n\r\n    this.$router.afterEach(() => {\r\n      nprogress.done()\r\n      this.isSidebarOpen = false\r\n    })\r\n\r\n    this.$on('sw-updated', this.onSWUpdated)\r\n  },\r\n\r\n  methods: {\r\n    toggleSidebar (to) {\r\n      this.isSidebarOpen = typeof to === 'boolean' ? to : !this.isSidebarOpen\r\n    },\r\n\r\n    // side swipe\r\n    onTouchStart (e) {\r\n      this.touchStart = {\r\n        x: e.changedTouches[0].clientX,\r\n        y: e.changedTouches[0].clientY\r\n      }\r\n    },\r\n\r\n    onTouchEnd (e) {\r\n      const dx = e.changedTouches[0].clientX - this.touchStart.x\r\n      const dy = e.changedTouches[0].clientY - this.touchStart.y\r\n      if (Math.abs(dx) > Math.abs(dy) && Math.abs(dx) > 40) {\r\n        if (dx > 0 && this.touchStart.x <= 80) {\r\n          this.toggleSidebar(true)\r\n        } else {\r\n          this.toggleSidebar(false)\r\n        }\r\n      }\r\n    },\r\n\r\n    onSWUpdated (e) {\r\n      this.swUpdateEvent = e\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style src=\"prismjs/themes/prism-tomorrow.css\"></style>\r\n<style src=\"./styles/theme.styl\" lang=\"stylus\"></style>\r\n"],"sourceRoot":"lib/default-theme"}]}