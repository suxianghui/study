{"remainingRequest":"D:\\1\\实训一\\study\\study\\node_modules\\vue-loader\\lib\\index.js??ref--1-1!D:\\1\\实训一\\study\\study\\lib\\webpack\\markdownLoader.js??ref--1-2!D:\\1\\实训一\\study\\study\\src\\zh\\config\\README.md?vue&type=template&id=6fe6d6aa&","dependencies":[{"path":"D:\\1\\实训一\\study\\study\\src\\zh\\config\\README.md","mtime":1557200317057},{"path":"D:\\1\\实训一\\study\\study\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\1\\实训一\\study\\study\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"D:\\1\\实训一\\study\\study\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\1\\实训一\\study\\study\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\1\\实训一\\study\\study\\lib\\webpack\\markdownLoader.js","mtime":1557200316988}],"contextDependencies":[],"result":["\n<div class=\"content\"><h1 id=\"配置\"><a class=\"header-anchor\" href=\"#配置\" aria-hidden=\"true\">#</a> 配置</h1>\n<h2 id=\"基本配置\"><a class=\"header-anchor\" href=\"#基本配置\" aria-hidden=\"true\">#</a> 基本配置</h2>\n<h3 id=\"base\"><a class=\"header-anchor\" href=\"#base\" aria-hidden=\"true\">#</a> base</h3>\n<ul>\n<li>类型: <code>string</code></li>\n<li>默认值: <code>/</code></li>\n</ul>\n<p>部署站点的基础路径，如果你想让你的网站部署到一个子路径下，你将需要设置它。如 Github pages，如果你想将你的网站部署到 <code>https://foo.github.io/bar/</code>，那么 <code>base</code> 应该被设置成 <code>&quot;/bar/&quot;</code>，它的值应当总是以斜杠开始，并以斜杠结束。</p>\n<p><code>base</code> 将会自动地作为前缀插入到所有以 <code>/</code> 开始的其他选项的链接中，所以你只需要指定一次。</p>\n<p><strong>参考:</strong></p>\n<ul>\n<li><router-link to=\"./../guide/assets.html#基础路径\">Base URL</router-link></li>\n<li><router-link to=\"./../guide/deploy.html#github-pages\">部署指南 &gt; Github Pages</router-link></li>\n</ul>\n<h3 id=\"title\"><a class=\"header-anchor\" href=\"#title\" aria-hidden=\"true\">#</a> title</h3>\n<ul>\n<li>类型: <code>string</code></li>\n<li>默认值: <code>undefined</code></li>\n</ul>\n<p>网站的标题，它将会被用作所有页面标题的前缀，同时，默认主题下，它将显示在导航栏（navbar）上。</p>\n<h3 id=\"description\"><a class=\"header-anchor\" href=\"#description\" aria-hidden=\"true\">#</a> description</h3>\n<ul>\n<li>类型: <code>string</code></li>\n<li>默认值: <code>undefined</code></li>\n</ul>\n<p>网站的描述，它将会以 <code>&lt;meta&gt;</code> 标签渲染到当前页面的 HTML 中。</p>\n<h3 id=\"head\"><a class=\"header-anchor\" href=\"#head\" aria-hidden=\"true\">#</a> head</h3>\n<ul>\n<li>类型: <code>Array</code></li>\n<li>默认值: <code>[]</code></li>\n</ul>\n<p>额外的需要被注入到当前页面的 HTML <code>&lt;head&gt;</code> 中的标签，每个标签都可以以 <code>[tagName, { attrName: attrValue }, innerHTML?]</code> 的格式指定，举个例子，增加一个自定义的 favicon：</p>\n<!--beforebegin--><div class=\"language-js extra-class\"><!--afterbegin--><pre v-pre class=\"language-js\"><code>module<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  head<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">[</span><span class=\"token string\">'link'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> rel<span class=\"token punctuation\">:</span> <span class=\"token string\">'icon'</span><span class=\"token punctuation\">,</span> href<span class=\"token punctuation\">:</span> <span class=\"token string\">'/logo.png'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span>\n  <span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<!--beforeend--></div><!--afterend--><h3 id=\"host\"><a class=\"header-anchor\" href=\"#host\" aria-hidden=\"true\">#</a> host</h3>\n<ul>\n<li>Type: <code>string</code></li>\n<li>Default: <code>'0.0.0.0'</code></li>\n</ul>\n<p>指定用于 dev server 的主机名。</p>\n<h3 id=\"port\"><a class=\"header-anchor\" href=\"#port\" aria-hidden=\"true\">#</a> port</h3>\n<ul>\n<li>类型: <code>number</code></li>\n<li>默认值: <code>8080</code></li>\n</ul>\n<p>指定 dev server 的端口。</p>\n<h3 id=\"dest\"><a class=\"header-anchor\" href=\"#dest\" aria-hidden=\"true\">#</a> dest</h3>\n<ul>\n<li>类型: <code>string</code></li>\n<li>默认值: <code>.vuepress/dist</code></li>\n</ul>\n<p>指定 <code>vuepress build</code> 的输出目录。</p>\n<h3 id=\"ga\"><a class=\"header-anchor\" href=\"#ga\" aria-hidden=\"true\">#</a> ga</h3>\n<ul>\n<li>类型: <code>string</code></li>\n<li>默认值: <code>undefined</code></li>\n</ul>\n<p>提供一个 Google Analytics ID 来使 GA 生效。</p>\n<div class=\"tip custom-block\"><p class=\"custom-block-title\">提示</p>\n<p>请留意 <a href=\"https://ec.europa.eu/commission/priorities/justice-and-fundamental-rights/data-protection/2018-reform-eu-data-protection-rules_en\" target=\"_blank\" rel=\"noopener noreferrer\">GDPR (2018年欧盟数据保护规则改革)<OutboundLink/></a>, 在合适或者需要的情况下，考虑将 Google Analytics 设置为<a href=\"https://support.google.com/analytics/answer/2763052?hl=zh-Hans\" target=\"_blank\" rel=\"noopener noreferrer\">匿名化的 IP<OutboundLink/></a>。</p>\n</div>\n<h3 id=\"serviceworker\"><a class=\"header-anchor\" href=\"#serviceworker\" aria-hidden=\"true\">#</a> serviceWorker</h3>\n<ul>\n<li>类型: <code>boolean</code></li>\n<li>默认值: <code>false</code></li>\n</ul>\n<p>如果设置成 <code>true</code>，VuePress 将会自动生成并且注册一个 service worker，它缓存了那些已访问过的页面的内容，用于离线访问（仅在生产环境生效）。</p>\n<p>如果你正在开发一个自定义主题，<code>Layout.vue</code> 组件将会自动触发下述的事件：</p>\n<ul>\n<li><code>sw-ready</code></li>\n<li><code>sw-cached</code></li>\n<li><code>sw-updated</code></li>\n<li><code>sw-offline</code></li>\n<li><code>sw-error</code></li>\n</ul>\n<div class=\"tip custom-block\"><p class=\"custom-block-title\">PWA NOTES</p>\n<p><code>serviceWorker</code> 选项仅仅用来控制 service worker，为了让你的网站完全地兼容 PWA，你需要在 <code>.vuepress/public</code> 提供 Manifest 和 icons，更多细节，请参见 <a href=\"https://developer.mozilla.org/en-US/study/Web/Manifest\" target=\"_blank\" rel=\"noopener noreferrer\">MDN study about the Web App Manifest<OutboundLink/></a>.\n此外，只有您能够使用 SSL 部署您的站点时才能启用此功能，因为 service worker 只能在 HTTPs 的 URL 下注册。</p>\n</div>\n<h3 id=\"locales\"><a class=\"header-anchor\" href=\"#locales\" aria-hidden=\"true\">#</a> locales</h3>\n<ul>\n<li>类型: <code>{ [path: string]: Object }</code></li>\n<li>默认值: <code>undefined</code></li>\n</ul>\n<p>提供多语言支持的语言配置。具体细节请查看 <router-link to=\"./../guide/i18n.html\">多语言支持</router-link>。</p>\n<h3 id=\"shouldprefetch\"><a class=\"header-anchor\" href=\"#shouldprefetch\" aria-hidden=\"true\">#</a> shouldPrefetch</h3>\n<ul>\n<li>类型: <code>Function</code></li>\n<li>默认值: <code>() =&gt; true</code></li>\n</ul>\n<p>一个函数，用来控制对于哪些文件，是需要生成 <code>&lt;link rel=&quot;prefetch&quot;&gt;</code> 资源提示的。请参考 <a href=\"https://ssr.vuejs.org/zh/api/#shouldpreload\" target=\"_blank\" rel=\"noopener noreferrer\">shouldPrefetch<OutboundLink/></a>。</p>\n<h2 id=\"主题\"><a class=\"header-anchor\" href=\"#主题\" aria-hidden=\"true\">#</a> 主题</h2>\n<h3 id=\"theme\"><a class=\"header-anchor\" href=\"#theme\" aria-hidden=\"true\">#</a> theme</h3>\n<ul>\n<li>类型: <code>string</code></li>\n<li>默认值: <code>undefined</code></li>\n</ul>\n<p>当你使用自定义主题的时候，需要指定它。当值为 <code>&quot;foo&quot;</code> 时，VuePress 将会尝试去加载位于 <code>node_modules/vuepress-theme-foo/Layout.vue</code> 的主题组件。</p>\n<h3 id=\"themeconfig\"><a class=\"header-anchor\" href=\"#themeconfig\" aria-hidden=\"true\">#</a> themeConfig</h3>\n<ul>\n<li>类型: <code>Object</code></li>\n<li>默认值: <code>{}</code></li>\n</ul>\n<p>为当前的主题提供一些配置，这些选项依赖于你正在使用的主题。</p>\n<p><strong>也可以参考:</strong></p>\n<ul>\n<li><router-link to=\"./../default-theme-config/\">默认主题</router-link>。</li>\n</ul>\n<h2 id=\"markdown\"><a class=\"header-anchor\" href=\"#markdown\" aria-hidden=\"true\">#</a> Markdown</h2>\n<h3 id=\"markdown-linenumbers\"><a class=\"header-anchor\" href=\"#markdown-linenumbers\" aria-hidden=\"true\">#</a> markdown.lineNumbers</h3>\n<ul>\n<li>类型: <code>boolean</code></li>\n<li>默认值: <code>undefined</code></li>\n</ul>\n<p>是否在每个代码块的左侧显示行号。</p>\n<p><strong>参考:</strong></p>\n<ul>\n<li><router-link to=\"./../guide/markdown.html#行号\">行号</router-link></li>\n</ul>\n<h3 id=\"markdown-anchor\"><a class=\"header-anchor\" href=\"#markdown-anchor\" aria-hidden=\"true\">#</a> markdown.anchor</h3>\n<ul>\n<li>类型: <code>Object</code></li>\n<li>默认值: <code>{ permalink: true, permalinkBefore: true, permalinkSymbol: '#' }</code></li>\n</ul>\n<p><a href=\"https://github.com/valeriangalliat/markdown-it-anchor\" target=\"_blank\" rel=\"noopener noreferrer\">markdown-it-anchor<OutboundLink/></a> 的选项。</p>\n<h3 id=\"markdown-externallinks\"><a class=\"header-anchor\" href=\"#markdown-externallinks\" aria-hidden=\"true\">#</a> markdown.externalLinks</h3>\n<ul>\n<li>Type: <code>Object</code></li>\n<li>Default: <code>{ target: '_blank', rel: 'noopener noreferrer' }</code></li>\n</ul>\n<p>这个键值对将会作为特性被增加到是外部链接的 <code>&lt;a&gt;</code> 标签上，默认的选项将会在新窗口中打开一个该外部链接。</p>\n<h3 id=\"markdown-toc\"><a class=\"header-anchor\" href=\"#markdown-toc\" aria-hidden=\"true\">#</a> markdown.toc</h3>\n<ul>\n<li>类型: <code>Object</code></li>\n<li>默认值: <code>{ includeLevel: [2, 3] }</code></li>\n</ul>\n<p><a href=\"https://github.com/Oktavilla/markdown-it-table-of-contents\" target=\"_blank\" rel=\"noopener noreferrer\">markdown-it-table-of-contents<OutboundLink/></a> 的选项。</p>\n<h3 id=\"markdown-config\"><a class=\"header-anchor\" href=\"#markdown-config\" aria-hidden=\"true\">#</a> markdown.config</h3>\n<ul>\n<li>类型: <code>Function</code></li>\n<li>默认值: <code>undefined</code></li>\n</ul>\n<p>一个用于修改当前的 <a href=\"https://github.com/markdown-it/markdown-it\" target=\"_blank\" rel=\"noopener noreferrer\">markdown-it<OutboundLink/></a> 实例的默认配置，或者应用额外的插件的函数，举例如下：</p>\n<!--beforebegin--><div class=\"language-js extra-class\"><!--afterbegin--><pre v-pre class=\"language-js\"><code>module<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  markdown<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function-variable function\">config</span><span class=\"token punctuation\">:</span> <span class=\"token parameter\">md</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      md<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> breaks<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n      md<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span><span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'markdown-it-xxx'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<!--beforeend--></div><!--afterend--><h2 id=\"构建流程\"><a class=\"header-anchor\" href=\"#构建流程\" aria-hidden=\"true\">#</a> 构建流程</h2>\n<h3 id=\"postcss\"><a class=\"header-anchor\" href=\"#postcss\" aria-hidden=\"true\">#</a> postcss</h3>\n<ul>\n<li>类型: <code>Object</code></li>\n<li>默认值: <code>{ plugins: [require('autoprefixer')] }</code></li>\n</ul>\n<p><a href=\"https://github.com/postcss/postcss-loader\" target=\"_blank\" rel=\"noopener noreferrer\">postcss-loader<OutboundLink/></a> 的选项，请注意，指定这个值，将会覆盖内置的 autoprefixer，所以你需要自己将它加进去。</p>\n<h3 id=\"stylus\"><a class=\"header-anchor\" href=\"#stylus\" aria-hidden=\"true\">#</a> stylus</h3>\n<ul>\n<li>Type: <code>Object</code></li>\n<li>Default: <code>{ preferPathResolver: 'webpack' }</code></li>\n</ul>\n<p><a href=\"https://github.com/shama/stylus-loader\" target=\"_blank\" rel=\"noopener noreferrer\">stylus-loader<OutboundLink/></a> 的选项。</p>\n<h3 id=\"scss\"><a class=\"header-anchor\" href=\"#scss\" aria-hidden=\"true\">#</a> scss</h3>\n<ul>\n<li>Type: <code>Object</code></li>\n<li>Default: <code>{}</code></li>\n</ul>\n<p>加载 <code>*.scss</code> 文件的 <a href=\"https://github.com/postcss/postcss-loader\" target=\"_blank\" rel=\"noopener noreferrer\">sass-loader<OutboundLink/></a> 的选项。</p>\n<h3 id=\"sass\"><a class=\"header-anchor\" href=\"#sass\" aria-hidden=\"true\">#</a> sass</h3>\n<ul>\n<li>Type: <code>Object</code></li>\n<li>Default: <code>{ indentedSyntax: true }</code></li>\n</ul>\n<p>加载 <code>*.sass</code> 文件的 <a href=\"https://github.com/postcss/postcss-loader\" target=\"_blank\" rel=\"noopener noreferrer\">sass-loader<OutboundLink/></a> 的选项。</p>\n<h3 id=\"less\"><a class=\"header-anchor\" href=\"#less\" aria-hidden=\"true\">#</a> less</h3>\n<ul>\n<li>Type: <code>Object</code></li>\n<li>Default: <code>{}</code></li>\n</ul>\n<p><a href=\"https://github.com/webpack-contrib/less-loader\" target=\"_blank\" rel=\"noopener noreferrer\">less-loader<OutboundLink/></a> 的选项。</p>\n<h3 id=\"configurewebpack\"><a class=\"header-anchor\" href=\"#configurewebpack\" aria-hidden=\"true\">#</a> configureWebpack</h3>\n<ul>\n<li>类型: <code>Object | Function</code></li>\n<li>默认值: <code>undefined</code></li>\n</ul>\n<p>用于修改内部的 Webpack 配置。如果给定一个对象，那么它将会被 <a href=\"https://github.com/survivejs/webpack-merge\" target=\"_blank\" rel=\"noopener noreferrer\">webpack-merge<OutboundLink/></a> 合并到最终的配置中，如果给定一个函数，它将会接受 <code>config</code> 作为第一个参数，以及 <code>isServer</code> 作为第二个参数，你可以直接更改 <code>config</code>，也可以返回一个待合并的对象。</p>\n<!--beforebegin--><div class=\"language-js extra-class\"><!--afterbegin--><pre v-pre class=\"language-js\"><code>module<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function-variable function\">configureWebpack</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">config<span class=\"token punctuation\">,</span> isServer</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>isServer<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// 修改客户端的 webpack 配置</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<!--beforeend--></div><!--afterend--><h3 id=\"chainwebpack\"><a class=\"header-anchor\" href=\"#chainwebpack\" aria-hidden=\"true\">#</a> chainWebpack</h3>\n<ul>\n<li>类型: <code>Function</code></li>\n<li>默认值: <code>undefined</code></li>\n</ul>\n<p>通过 <a href=\"https://github.com/mozilla-neutrino/webpack-chain\" target=\"_blank\" rel=\"noopener noreferrer\">webpack-chain<OutboundLink/></a> 来修改内部的 Webpack 配置。</p>\n<!--beforebegin--><div class=\"language-js extra-class\"><!--afterbegin--><pre v-pre class=\"language-js\"><code>module<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function-variable function\">chainWebpack</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">config<span class=\"token punctuation\">,</span> isServer</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// config 是 ChainableConfig 的一个实例</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<!--beforeend--></div><!--afterend--><h2 id=\"浏览器兼容性\"><a class=\"header-anchor\" href=\"#浏览器兼容性\" aria-hidden=\"true\">#</a> 浏览器兼容性</h2>\n<h3 id=\"evergreen\"><a class=\"header-anchor\" href=\"#evergreen\" aria-hidden=\"true\">#</a> evergreen</h3>\n<ul>\n<li>类型: <code>boolean</code></li>\n<li>默认值: <code>false</code></li>\n</ul>\n<p>如果你的对象只有那些 “常青树” 浏览器，你可以将其设置成 <code>true</code>，这将会禁止 ESNext 到 ES5 的转译以及对 IE 的 polyfills，同时会带来更快的构建速度和更小的文件体积。</p>\n</div>\n",null]}