{"remainingRequest":"D:\\1\\实训一\\study\\study\\node_modules\\vue-loader\\lib\\index.js??ref--1-1!D:\\1\\实训一\\study\\study\\lib\\webpack\\markdownLoader.js??ref--1-2!D:\\1\\实训一\\study\\study\\src\\config\\README.md?vue&type=template&id=be03fdea&","dependencies":[{"path":"D:\\1\\实训一\\study\\study\\src\\config\\README.md","mtime":1557200317038},{"path":"D:\\1\\实训一\\study\\study\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\1\\实训一\\study\\study\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"D:\\1\\实训一\\study\\study\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\1\\实训一\\study\\study\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\1\\实训一\\study\\study\\lib\\webpack\\markdownLoader.js","mtime":1557200316988}],"contextDependencies":[],"result":["\n<div class=\"content\"><h1 id=\"配置参考\"><a class=\"header-anchor\" href=\"#配置参考\" aria-hidden=\"true\">#</a> 配置参考</h1>\n<Bit/>\n<h2 id=\"基本配置-basic-config\"><a class=\"header-anchor\" href=\"#基本配置-basic-config\" aria-hidden=\"true\">#</a> 基本配置(basic config)</h2>\n<h3 id=\"base\"><a class=\"header-anchor\" href=\"#base\" aria-hidden=\"true\">#</a> base</h3>\n<ul>\n<li>Type: <code>string</code></li>\n<li>Default: <code>/</code></li>\n</ul>\n<p>网站用来部署的基准 URL。如果你打算在子路径下部署你的站点，例如 GitHub 页面，则需要设置此项。如果你打算将你的网站部署到<code>https://foo.github.io/bar/</code>，则应将 <code>base</code> 设置为 <code>&quot;/bar/&quot;</code>。它应该始终以斜杠开始和结束。</p>\n<p>在其他选项中，<code>base</code> 会自动添加到以 <code>/</code> 开头的所有 URL 中，因此你只需指定一次即可。</p>\n<p><strong>另请参考：</strong></p>\n<ul>\n<li><router-link to=\"./../guide/assets.html#相对-urls\">基准 URL</router-link></li>\n<li><router-link to=\"./../guide/deploy.html#github-页面\">部署教程 &gt; Github 页面</router-link></li>\n</ul>\n<h3 id=\"title\"><a class=\"header-anchor\" href=\"#title\" aria-hidden=\"true\">#</a> title</h3>\n<ul>\n<li>Type: <code>string</code></li>\n<li>Default: <code>undefined</code></li>\n</ul>\n<p>网站的标题。这将是所有页面标题的前缀，并显示在默认主题的导航栏中。</p>\n<h3 id=\"description\"><a class=\"header-anchor\" href=\"#description\" aria-hidden=\"true\">#</a> description</h3>\n<ul>\n<li>Type: <code>string</code></li>\n<li>Default: <code>undefined</code></li>\n</ul>\n<p>网站描述。这将在页面 HTML 中表现为一个 <code>&lt;meta&gt;</code> 标签。</p>\n<h3 id=\"head\"><a class=\"header-anchor\" href=\"#head\" aria-hidden=\"true\">#</a> head</h3>\n<ul>\n<li>Type: <code>Array</code></li>\n<li>Default: <code>[]</code></li>\n</ul>\n<p>被注入页面 HTML <code>&lt;head&gt;</code> 额外的标签。每个标签可以用 <code>[tagName, { attrName: attrValue }, innerHTML?]</code> 的形式指定。例如，要添加自定义图标：</p>\n<!--beforebegin--><div class=\"language-js extra-class\"><!--afterbegin--><pre v-pre class=\"language-js\"><code>module<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  head<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">[</span><span class=\"token string\">'link'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> rel<span class=\"token punctuation\">:</span> <span class=\"token string\">'icon'</span><span class=\"token punctuation\">,</span> href<span class=\"token punctuation\">:</span> <span class=\"token string\">'/logo.png'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span>\n  <span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<!--beforeend--></div><!--afterend--><h3 id=\"host\"><a class=\"header-anchor\" href=\"#host\" aria-hidden=\"true\">#</a> host</h3>\n<ul>\n<li>Type: <code>string</code></li>\n<li>Default: <code>'0.0.0.0'</code></li>\n</ul>\n<p>指定用于 dev 服务器的主机。</p>\n<h3 id=\"port\"><a class=\"header-anchor\" href=\"#port\" aria-hidden=\"true\">#</a> port</h3>\n<ul>\n<li>Type: <code>number</code></li>\n<li>Default: <code>8080</code></li>\n</ul>\n<p>指定用于 dev 服务器的端口。</p>\n<h3 id=\"dest\"><a class=\"header-anchor\" href=\"#dest\" aria-hidden=\"true\">#</a> dest</h3>\n<ul>\n<li>Type: <code>string</code></li>\n<li>Default: <code>.vuepress/dist</code></li>\n</ul>\n<p>指定 <code>vuepress build</code> 的输出目录。</p>\n<h3 id=\"ga\"><a class=\"header-anchor\" href=\"#ga\" aria-hidden=\"true\">#</a> ga</h3>\n<ul>\n<li>Type: <code>string</code></li>\n<li>Default: <code>undefined</code></li>\n</ul>\n<p>提供 Google AnalyticsID 来开启集成功能。</p>\n<div class=\"tip custom-block\"><p class=\"custom-block-title\">提示</p>\n<p>请留意 <a href=\"https://ec.europa.eu/commission/priorities/justice-and-fundamental-rights/data-protection/2018-reform-eu-data-protection-rules_en\" target=\"_blank\" rel=\"noopener noreferrer\">GDPR (2018年欧盟数据保护规则改革)<OutboundLink/></a>, 在合适或者需要的情况下，考虑将 Google Analytics 设置为<a href=\"https://support.google.com/analytics/answer/2763052?hl=zh-Hans\" target=\"_blank\" rel=\"noopener noreferrer\">匿名化的 IP<OutboundLink/></a>。</p>\n</div>\n<h3 id=\"serviceworker\"><a class=\"header-anchor\" href=\"#serviceworker\" aria-hidden=\"true\">#</a> serviceWorker</h3>\n<ul>\n<li>Type: <code>boolean</code></li>\n<li>Default: <code>false</code></li>\n</ul>\n<p>如果设置为 <code>true</code>，VuePress 将自动生成并注册一个 service worker ，这个 worker 将内容缓存以供离线使用（仅在生产环境中启用）。</p>\n<p>如果开发了一个自定义主题，<code>Layout.vue</code> 组件还将触发以下事件：</p>\n<ul>\n<li><code>sw-ready</code></li>\n<li><code>sw-cached</code></li>\n<li><code>sw-updated</code></li>\n<li><code>sw-offline</code></li>\n<li><code>sw-error</code></li>\n</ul>\n<div class=\"tip custom-block\"><p class=\"custom-block-title\">PWA 注意事项</p>\n<p><code>serviceWorker</code> 选项只能处理 service worker。要使你的站点完全符合 PWA，你需要在<code>.vuepress/public</code> 中提供 Web App 清单和图标。有关更多详细信息，请参阅 <a href=\"https://developer.mozilla.org/en-US/docs/Web/Manifest\" target=\"_blank\" rel=\"noopener noreferrer\">MDN 关于 Web 应用程序清单的文档<OutboundLink/></a>。</p>\n<p>此外，只有在你能够使用 SSL 部署你的站点时才能启用此功能，因为 service worker 只能在 HTTPs URLs 下注册。</p>\n</div>\n<h3 id=\"locales\"><a class=\"header-anchor\" href=\"#locales\" aria-hidden=\"true\">#</a> locales</h3>\n<ul>\n<li>Type: <code>{ [path: string]: Object }</code></li>\n<li>Default: <code>undefined</code></li>\n</ul>\n<p>指定用于 i18n 支持，要获取更多细节，请参考<router-link to=\"./../guide/i18n.html\">国际化指南</router-link>。</p>\n<h3 id=\"shouldprefetch\"><a class=\"header-anchor\" href=\"#shouldprefetch\" aria-hidden=\"true\">#</a> shouldPrefetch</h3>\n<ul>\n<li>类型: <code>Function</code></li>\n<li>默认值: <code>() =&gt; true</code></li>\n</ul>\n<p>一个函数，用来控制对于哪些文件，是需要生成 <code>&lt;link rel=&quot;prefetch&quot;&gt;</code> 资源提示的。请参考 <a href=\"https://ssr.vuejs.org/zh/api/#shouldpreload\" target=\"_blank\" rel=\"noopener noreferrer\">shouldPrefetch<OutboundLink/></a>。</p>\n<h2 id=\"主题化-theming\"><a class=\"header-anchor\" href=\"#主题化-theming\" aria-hidden=\"true\">#</a> 主题化(theming)</h2>\n<h3 id=\"theme\"><a class=\"header-anchor\" href=\"#theme\" aria-hidden=\"true\">#</a> theme</h3>\n<ul>\n<li>Type: <code>string</code></li>\n<li>Default: <code>undefined</code></li>\n</ul>\n<p>指定此选项来使用自定义主题。使用 <code>&quot;foo&quot;</code> 的值，VuePress 将尝试在 <code>node_modules/vuepress-theme-foo/Layout.vue</code> 加载主题组件。</p>\n<h3 id=\"themeconfig\"><a class=\"header-anchor\" href=\"#themeconfig\" aria-hidden=\"true\">#</a> themeConfig</h3>\n<ul>\n<li>Type: <code>Object</code></li>\n<li>Default: <code>{}</code></li>\n</ul>\n<p>为使用的主题提供配置选项。这些选项将根据你使用的主题而有所不同。</p>\n<p><strong>另请参阅：</strong></p>\n<ul>\n<li><router-link to=\"./../default-theme-config/\">默认主题配置</router-link>.</li>\n</ul>\n<h2 id=\"markdown\"><a class=\"header-anchor\" href=\"#markdown\" aria-hidden=\"true\">#</a> Markdown</h2>\n<h3 id=\"markdown-linenumbers\"><a class=\"header-anchor\" href=\"#markdown-linenumbers\" aria-hidden=\"true\">#</a> markdown.lineNumbers</h3>\n<ul>\n<li>Type: <code>boolean</code></li>\n<li>Default: <code>undefined</code></li>\n</ul>\n<p>是否在每个代码块的左侧显示行号。</p>\n<p><strong>另请参阅：</strong></p>\n<ul>\n<li><router-link to=\"./../guide/markdown.html#行号\">行号</router-link></li>\n</ul>\n<h3 id=\"markdown-slugify\"><a class=\"header-anchor\" href=\"#markdown-slugify\" aria-hidden=\"true\">#</a> markdown.slugify</h3>\n<ul>\n<li>Type: <code>Function</code></li>\n<li>Default: <a href=\"https://github.com/vuejs/vuepress/blob/master/lib/markdown/slugify.js\" target=\"_blank\" rel=\"noopener noreferrer\">source<OutboundLink/></a></li>\n</ul>\n<p>将标题文本转换为别名(slug)的函数。这会影响标题锚点、目录和侧边栏链接生成的 id 和链接。（译者注：此功能是为了解决非 ASCII 码字符生成链接时的 <a href=\"https://github.com/vuejs/vuepress/issues/45\" target=\"_blank\" rel=\"noopener noreferrer\">bug<OutboundLink/></a>，具体代码查看 /lib/markdown/slugify 的 slugify 函数）</p>\n<h3 id=\"markdown-externallinks\"><a class=\"header-anchor\" href=\"#markdown-externallinks\" aria-hidden=\"true\">#</a> markdown.externalLinks</h3>\n<ul>\n<li>Type: <code>Object</code></li>\n<li>Default: <code>{ target: '_blank', rel: 'noopener noreferrer' }</code></li>\n</ul>\n<p>键和值对将被添加到指向外部链接的 <code>&lt;a&gt;</code> 标签。默认选项将在新窗口中打开外部链接。</p>\n<h3 id=\"markdown-anchor\"><a class=\"header-anchor\" href=\"#markdown-anchor\" aria-hidden=\"true\">#</a> markdown.anchor</h3>\n<ul>\n<li>Type: <code>Object</code></li>\n<li>Default: <code>{ permalink: true, permalinkBefore: true, permalinkSymbol: '#' }</code></li>\n</ul>\n<p><a href=\"https://github.com/valeriangalliat/markdown-it-anchor\" target=\"_blank\" rel=\"noopener noreferrer\">markdown-it-anchor<OutboundLink/></a> 的选项。(注意：如果你想自定义标题 id 的话尽量使用 <code>markdown.slugify</code>。)</p>\n<h3 id=\"markdown-toc\"><a class=\"header-anchor\" href=\"#markdown-toc\" aria-hidden=\"true\">#</a> markdown.toc</h3>\n<ul>\n<li>Type: <code>Object</code></li>\n<li>Default: <code>{ includeLevel: [2, 3] }</code></li>\n</ul>\n<p><a href=\"https://github.com/Oktavilla/markdown-it-table-of-contents\" target=\"_blank\" rel=\"noopener noreferrer\">markdown-it-table-of-contents<OutboundLink/></a> 的选项。(注意：如果你想自定义标题 id 的话尽量使用 <code>markdown.slugify</code>。)</p>\n<h3 id=\"markdown-config\"><a class=\"header-anchor\" href=\"#markdown-config\" aria-hidden=\"true\">#</a> markdown.config</h3>\n<ul>\n<li>Type: <code>Function</code></li>\n<li>Default: <code>undefined</code></li>\n</ul>\n<p>修改默认配置，或将额外的插件应用于渲染源文件的 <a href=\"https://github.com/markdown-it/markdown-it\" target=\"_blank\" rel=\"noopener noreferrer\">markdown-it<OutboundLink/></a> 实例的函数。例如：</p>\n<!--beforebegin--><div class=\"language-js extra-class\"><!--afterbegin--><pre v-pre class=\"language-js\"><code>module<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  markdown<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function-variable function\">config</span><span class=\"token punctuation\">:</span> <span class=\"token parameter\">md</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      md<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> breaks<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n      md<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span><span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'markdown-it-xxx'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<!--beforeend--></div><!--afterend--><h2 id=\"建立管道-build-pipeline\"><a class=\"header-anchor\" href=\"#建立管道-build-pipeline\" aria-hidden=\"true\">#</a> 建立管道(build pipeline)</h2>\n<h3 id=\"postcss\"><a class=\"header-anchor\" href=\"#postcss\" aria-hidden=\"true\">#</a> postcss</h3>\n<ul>\n<li>Type: <code>Object</code></li>\n<li>Default: <code>{ plugins: [require('autoprefixer')] }</code></li>\n</ul>\n<p><a href=\"https://github.com/postcss/postcss-loader\" target=\"_blank\" rel=\"noopener noreferrer\">postcss-loader<OutboundLink/></a> 的选项。注意：指定这个值将会覆盖 autoprefixer，你需要把 autoprefixer 的选项也包含进去。</p>\n<h3 id=\"stylus\"><a class=\"header-anchor\" href=\"#stylus\" aria-hidden=\"true\">#</a> stylus</h3>\n<ul>\n<li>Type: <code>Object</code></li>\n<li>Default: <code>{ preferPathResolver: 'webpack' }</code></li>\n</ul>\n<p>提供给 <a href=\"https://github.com/shama/stylus-loader\" target=\"_blank\" rel=\"noopener noreferrer\">stylus-loader<OutboundLink/></a> 的参数。</p>\n<h3 id=\"scss\"><a class=\"header-anchor\" href=\"#scss\" aria-hidden=\"true\">#</a> scss</h3>\n<ul>\n<li>Type: <code>Object</code></li>\n<li>Default: <code>{}</code></li>\n</ul>\n<p>提供给 <a href=\"https://github.com/webpack-contrib/sass-loader\" target=\"_blank\" rel=\"noopener noreferrer\">sass-loader<OutboundLink/></a> 的参数，用来加载 <code>*.scss</code> 文件。</p>\n<h3 id=\"sass\"><a class=\"header-anchor\" href=\"#sass\" aria-hidden=\"true\">#</a> sass</h3>\n<ul>\n<li>Type: <code>Object</code></li>\n<li>Default: <code>{ indentedSyntax: true }</code></li>\n</ul>\n<p>提供给 <a href=\"https://github.com/webpack-contrib/sass-loader\" target=\"_blank\" rel=\"noopener noreferrer\">sass-loader<OutboundLink/></a> 的参数，用来加载 <code>*.sass</code> 文件。</p>\n<h3 id=\"less\"><a class=\"header-anchor\" href=\"#less\" aria-hidden=\"true\">#</a> less</h3>\n<ul>\n<li>Type: <code>Object</code></li>\n<li>Default: <code>{}</code></li>\n</ul>\n<p>提供给 <a href=\"https://github.com/webpack-contrib/less-loader\" target=\"_blank\" rel=\"noopener noreferrer\">less-loader<OutboundLink/></a> 的参数。</p>\n<h3 id=\"configurewebpack\"><a class=\"header-anchor\" href=\"#configurewebpack\" aria-hidden=\"true\">#</a> configureWebpack</h3>\n<ul>\n<li>Type: <code>Object | Function</code></li>\n<li>Default: <code>undefined</code></li>\n</ul>\n<p>修改内部 webpack 配置。如果该值是一个对象，它将被合并到使用 <a href=\"https://github.com/survivejs/webpack-merge\" target=\"_blank\" rel=\"noopener noreferrer\">webpack-merge<OutboundLink/></a> 的最终配置中；如果该值是一个函数，它将接收 config 作为第一个参数，并将 <code>isServer</code> 这个标志作为第二个参数。你可以直接改变配置，或者返回一个要合并的对象：</p>\n<!--beforebegin--><div class=\"language-js extra-class\"><!--afterbegin--><pre v-pre class=\"language-js\"><code>module<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function-variable function\">configureWebpack</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">config<span class=\"token punctuation\">,</span> isServer</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>isServer<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// mutate the config for client</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<!--beforeend--></div><!--afterend--><h3 id=\"chainwebpack\"><a class=\"header-anchor\" href=\"#chainwebpack\" aria-hidden=\"true\">#</a> chainWebpack</h3>\n<ul>\n<li>Type: <code>Function</code></li>\n<li>Default: <code>undefined</code></li>\n</ul>\n<p>使用 <a href=\"https://github.com/mozilla-neutrino/webpack-chain\" target=\"_blank\" rel=\"noopener noreferrer\">webpack-chain<OutboundLink/></a> 修改内部的 webpack 配置。</p>\n<!--beforebegin--><div class=\"language-js extra-class\"><!--afterbegin--><pre v-pre class=\"language-js\"><code>module<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function-variable function\">chainWebpack</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">config<span class=\"token punctuation\">,</span> isServer</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// config is an instance of ChainableConfig</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<!--beforeend--></div><!--afterend--><h2 id=\"浏览器兼容性-browser-compatibility\"><a class=\"header-anchor\" href=\"#浏览器兼容性-browser-compatibility\" aria-hidden=\"true\">#</a> 浏览器兼容性(browser compatibility)</h2>\n<h3 id=\"evergreen\"><a class=\"header-anchor\" href=\"#evergreen\" aria-hidden=\"true\">#</a> evergreen</h3>\n<ul>\n<li>Type: <code>boolean</code></li>\n<li>Default: <code>false</code></li>\n</ul>\n<p>如果你只针对常青树浏览器，请设置为 <code>true</code> 。这将禁用 IE5 的 ES5 转码和 polyfill，导致更快的构建和更小的文件。</p>\n</div>\n",null]}