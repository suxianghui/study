{"remainingRequest":"D:\\1\\实训一\\study\\study\\node_modules\\vue-loader\\lib\\index.js??ref--1-1!D:\\1\\实训一\\study\\study\\lib\\webpack\\markdownLoader.js??ref--1-2!D:\\1\\实训一\\study\\study\\src\\zh\\guide\\getting-started.md?vue&type=template&id=01e6c1a0&","dependencies":[{"path":"D:\\1\\实训一\\study\\study\\src\\zh\\guide\\getting-started.md","mtime":1557200317063},{"path":"D:\\1\\实训一\\study\\study\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\1\\实训一\\study\\study\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"D:\\1\\实训一\\study\\study\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\1\\实训一\\study\\study\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\1\\实训一\\study\\study\\lib\\webpack\\markdownLoader.js","mtime":1557200316988}],"contextDependencies":[],"result":["\n<div class=\"content\"><h1 id=\"快速上手\"><a class=\"header-anchor\" href=\"#快速上手\" aria-hidden=\"true\">#</a> 快速上手</h1>\n<div class=\"warning custom-block\"><p class=\"custom-block-title\">注意</p>\n<p>请确保你的 Node.js 版本 &gt;= 8。</p>\n</div>\n<h2 id=\"全局安装\"><a class=\"header-anchor\" href=\"#全局安装\" aria-hidden=\"true\">#</a> 全局安装</h2>\n<p>如果你只是想尝试一下 VuePress，你可以全局安装它：</p>\n<!--beforebegin--><div class=\"language-bash extra-class\"><!--afterbegin--><pre v-pre class=\"language-bash\"><code><span class=\"token comment\"># 安装</span>\n<span class=\"token function\">yarn</span> global <span class=\"token function\">add</span> vuepress <span class=\"token comment\"># 或者：npm install -g vuepress</span>\n\n<span class=\"token comment\"># 新建一个 markdown 文件</span>\n<span class=\"token keyword\">echo</span> <span class=\"token string\">\"# Hello VuePress!\"</span> <span class=\"token operator\">></span> README.md\n\n<span class=\"token comment\"># 开始写作</span>\nvuepress dev <span class=\"token keyword\">.</span>\n\n<span class=\"token comment\"># 构建静态文件</span>\nvuepress build <span class=\"token keyword\">.</span>\n</code></pre>\n<!--beforeend--></div><!--afterend--><h2 id=\"现有项目\"><a class=\"header-anchor\" href=\"#现有项目\" aria-hidden=\"true\">#</a> 现有项目</h2>\n<p>如果你想在一个现有项目中使用 VuePress，同时想要在该项目中管理文档，则应该将 VuePress 安装为本地依赖。作为本地依赖安装让你可以使用持续集成工具，或者一些其他服务（比如 Netlify）来帮助你在每次提交代码时自动部署。</p>\n<!--beforebegin--><div class=\"language-bash extra-class\"><!--afterbegin--><pre v-pre class=\"language-bash\"><code><span class=\"token comment\"># 将 VuePress 作为一个本地依赖安装</span>\n<span class=\"token function\">yarn</span> <span class=\"token function\">add</span> -D vuepress <span class=\"token comment\"># 或者：npm install -D vuepress</span>\n\n<span class=\"token comment\"># 新建一个 study 文件夹</span>\n<span class=\"token function\">mkdir</span> study\n\n<span class=\"token comment\"># 新建一个 markdown 文件</span>\n<span class=\"token keyword\">echo</span> <span class=\"token string\">\"# Hello VuePress!\"</span> <span class=\"token operator\">></span> study/README.md\n\n<span class=\"token comment\"># 开始写作</span>\nnpx vuepress dev study\n</code></pre>\n<!--beforeend--></div><!--afterend--><div class=\"warning custom-block\"><p class=\"custom-block-title\">WARNING</p>\n<p>如果你的现有项目依赖了 webpack 3.x，推荐使用 <a href=\"https://yarnpkg.com/en/\" target=\"_blank\" rel=\"noopener noreferrer\">Yarn<OutboundLink/></a> 而不是 npm 来安装 VuePress。因为在这种情形下，npm 会生成错误的依赖树。</p>\n</div>\n<p>接着，在 <code>package.json</code> 里加一些脚本:</p>\n<!--beforebegin--><div class=\"language-json extra-class\"><!--afterbegin--><pre v-pre class=\"language-json\"><code><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"scripts\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"study:dev\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"vuepress dev study\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"study:build\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"vuepress build study\"</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<!--beforeend--></div><!--afterend--><p>然后就可以开始写作了:</p>\n<!--beforebegin--><div class=\"language-bash extra-class\"><!--afterbegin--><pre v-pre class=\"language-bash\"><code><span class=\"token function\">yarn</span> study:dev <span class=\"token comment\"># 或者：npm run study:dev</span>\n</code></pre>\n<!--beforeend--></div><!--afterend--><p>要生成静态的 HTML 文件，运行：</p>\n<!--beforebegin--><div class=\"language-bash extra-class\"><!--afterbegin--><pre v-pre class=\"language-bash\"><code><span class=\"token function\">yarn</span> study:build <span class=\"token comment\"># 或者：npm run study:build</span>\n</code></pre>\n<!--beforeend--></div><!--afterend--><p>默认情况下，文件将会被生成在 <code>.vuepress/dist</code>，当然，你也可以通过 <code>.vuepress/config.js</code> 中的 <code>dest</code> 字段来修改，生成的文件可以部署到任意的静态文件服务器上，参考 <router-link to=\"./deploy.html\">部署</router-link> 来了解更多。</p>\n</div>\n",null]}