{"remainingRequest":"D:\\1\\实训一\\study\\study\\node_modules\\vue-loader\\lib\\index.js??ref--1-1!D:\\1\\实训一\\study\\study\\lib\\webpack\\markdownLoader.js??ref--1-2!D:\\1\\实训一\\study\\study\\src\\guide\\deploy.md?vue&type=template&id=0834f26c&","dependencies":[{"path":"D:\\1\\实训一\\study\\study\\src\\guide\\deploy.md","mtime":1557200317043},{"path":"D:\\1\\实训一\\study\\study\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\1\\实训一\\study\\study\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"D:\\1\\实训一\\study\\study\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\1\\实训一\\study\\study\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\1\\实训一\\study\\study\\lib\\webpack\\markdownLoader.js","mtime":1557200316988}],"contextDependencies":[],"result":["\n<div class=\"content\"><h1 id=\"部署\"><a class=\"header-anchor\" href=\"#部署\" aria-hidden=\"true\">#</a> 部署</h1>\n<p>以下指南基于几个共同的假设：</p>\n<ul>\n<li>将文档放置在项目的 <code>docs</code> 目录中；</li>\n<li>使用默认的构建输出位置（<code>.vuepress/dist</code>）。</li>\n<li>VuePress 是在项目本地的依赖中安装的，并且配置如下的 npm scripts:</li>\n</ul>\n<!--beforebegin--><div class=\"language-json extra-class\"><!--afterbegin--><pre v-pre class=\"language-json\"><code><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"scripts\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"docs:build\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"vuepress build docs\"</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<!--beforeend--></div><!--afterend--><h2 id=\"github-页面\"><a class=\"header-anchor\" href=\"#github-页面\" aria-hidden=\"true\">#</a> GitHub 页面</h2>\n<ol>\n<li>\n<p>在 <code>docs/.vuepress/config.js</code> 设置正确的 <code>base</code>。</p>\n<p>如果你打算部署到 <code>https://&lt;USERNAME&gt;.github.io/</code>，就可以省略这一步，因为 <code>base</code> 默认为 <code>&quot;/&quot;</code>。</p>\n<p>如果你打算部署到 <code>https://&lt;USERNAME&gt;.github.io/&lt;REPO&gt;/</code>（也就是说你的仓库地址是 <code>https://github.com/&lt;USERNAME&gt;/&lt;REPO&gt;</code>），设置 base 为 <code>&quot;/&lt;REPO&gt;/&quot;</code>。</p>\n</li>\n<li>\n<p>在你的项目中，创建一个有以下内容的 <code>deploy.sh</code> 文件（对高亮行适当注释），然后运行它完成部署：</p>\n</li>\n</ol>\n<!--beforebegin--><div class=\"language-bash extra-class\"><!--afterbegin--><div class=\"highlight-lines\"><br><br><br><br><br><br><br><br><br><br><br><br><div class=\"highlighted\">&nbsp;</div><br><br><br><br><br><br><div class=\"highlighted\">&nbsp;</div><br><br><div class=\"highlighted\">&nbsp;</div><br><br><br></div><pre v-pre class=\"language-bash\"><code><span class=\"token comment\">#!/usr/bin/env sh</span>\n\n<span class=\"token comment\"># 终止一个错误</span>\n<span class=\"token keyword\">set</span> -e\n\n<span class=\"token comment\"># 构建</span>\n<span class=\"token function\">npm</span> run docs:build\n\n<span class=\"token comment\"># 进入生成的构建文件夹</span>\n<span class=\"token function\">cd</span> docs/.vuepress/dist\n\n<span class=\"token comment\"># 如果你是要部署到自定义域名</span>\n<span class=\"token comment\"># echo 'www.example.com' > CNAME</span>\n\n<span class=\"token function\">git</span> init\n<span class=\"token function\">git</span> <span class=\"token function\">add</span> -A\n<span class=\"token function\">git</span> commit -m <span class=\"token string\">'deploy'</span>\n\n<span class=\"token comment\"># 如果你想要部署到 https://&lt;USERNAME>.github.io</span>\n<span class=\"token comment\"># git push -f git@github.com:&lt;USERNAME>/&lt;USERNAME>.github.io.git master</span>\n\n<span class=\"token comment\"># 如果你想要部署到 https://&lt;USERNAME>.github.io/&lt;REPO></span>\n<span class=\"token comment\"># git push -f git@github.com:&lt;USERNAME>/&lt;REPO>.git master:gh-pages</span>\n\n<span class=\"token function\">cd</span> -\n</code></pre><!--beforeend--></div><!--afterend--><div class=\"tip custom-block\"><p class=\"custom-block-title\">TIP</p>\n<p>你可以在你的 CI 中，设置每次 push 代码时自动运行上述脚本。</p>\n</div>\n<h2 id=\"gitlab-页面和-gitlab-ci\"><a class=\"header-anchor\" href=\"#gitlab-页面和-gitlab-ci\" aria-hidden=\"true\">#</a> GitLab 页面和 GitLab CI</h2>\n<ol>\n<li>\n<p>在 <code>docs/.vuepress/config.js</code> 设置正确的 <code>base</code>。</p>\n<p>如果你打算部署到 <code>https://&lt;USERNAME&gt;.gitlab.io/</code>，就可以省略这一步，因为 <code>base</code> 默认为 <code>&quot;/&quot;</code>。</p>\n<p>如果你打算部署到 <code>https://&lt;USERNAME or GROUP&gt;.gitlab.io/&lt;REPO&gt;/</code>（也就是说你的仓库地址是 <code>https://gitlab.com/&lt;USERNAME&gt;/&lt;REPO&gt;</code>），设置 base 为 <code>&quot;/&lt;REPO&gt;/&quot;</code>。</p>\n</li>\n<li>\n<p>在 <code>.vuepress/config.js</code> 中设置 <code>dest</code> 到 <code>public</code>.</p>\n</li>\n<li>\n<p>在你项目的根目录下创建一个名为 <code>.gitlab-ci.yml</code> 的文件，无论何时你提交更改，它都会帮助你自动构建和部署：</p>\n</li>\n</ol>\n<!--beforebegin--><div class=\"language-yaml extra-class\"><!--afterbegin--><pre v-pre class=\"language-yaml\"><code><span class=\"token key atrule\">image</span><span class=\"token punctuation\">:</span> node<span class=\"token punctuation\">:</span>9.11.1\n\n<span class=\"token key atrule\">pages</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">cache</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">paths</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> node_modules/\n\n  <span class=\"token key atrule\">script</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> npm install\n  <span class=\"token punctuation\">-</span> npm run docs<span class=\"token punctuation\">:</span>build\n  <span class=\"token key atrule\">artifacts</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">paths</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> public\n  <span class=\"token key atrule\">only</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> master\n</code></pre>\n<!--beforeend--></div><!--afterend--><h2 id=\"netlify\"><a class=\"header-anchor\" href=\"#netlify\" aria-hidden=\"true\">#</a> Netlify</h2>\n<ol>\n<li>在 Netlify 中, 从 GitHub 创建一个新项目，使用以下设置：</li>\n</ol>\n<ul>\n<li><strong>构建命令：</strong> <code>npm run docs:build</code> or <code>yarn docs:build</code></li>\n<li><strong>发布目录：</strong> <code>docs/.vuepress/dist</code></li>\n</ul>\n<ol start=\"2\">\n<li>点击部署按钮！</li>\n</ol>\n<h2 id=\"google-firebase\"><a class=\"header-anchor\" href=\"#google-firebase\" aria-hidden=\"true\">#</a> Google Firebase</h2>\n<ol>\n<li>\n<p>确保你已经安装了 <a href=\"https://www.npmjs.com/package/firebase-tools\" target=\"_blank\" rel=\"noopener noreferrer\">firebase-tools<OutboundLink/></a>。</p>\n</li>\n<li>\n<p>在你项目的根目录下创建 <code>firebase.json</code> 和 <code>.firebaserc</code>，写入以下内容：</p>\n</li>\n</ol>\n<p><code>firebase.json</code>:</p>\n<!--beforebegin--><div class=\"language-json extra-class\"><!--afterbegin--><pre v-pre class=\"language-json\"><code><span class=\"token punctuation\">{</span>\n <span class=\"token property\">\"hosting\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n   <span class=\"token property\">\"public\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"./docs/.vuepress/dist\"</span><span class=\"token punctuation\">,</span>\n   <span class=\"token property\">\"ignore\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<!--beforeend--></div><!--afterend--><p><code>.firebaserc</code>:</p>\n<!--beforebegin--><div class=\"language-js extra-class\"><!--afterbegin--><pre v-pre class=\"language-js\"><code><span class=\"token punctuation\">{</span>\n <span class=\"token string\">\"projects\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n   <span class=\"token string\">\"default\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"&lt;YOUR_FIREBASE_ID>\"</span>\n <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<!--beforeend--></div><!--afterend--><ol start=\"3\">\n<li>执行 <code>yarn docs:build</code> 或 <code>npm run docs:build</code> 之后，使用 <code>firebase deploy</code> 命令来部署。</li>\n</ol>\n<h2 id=\"surge\"><a class=\"header-anchor\" href=\"#surge\" aria-hidden=\"true\">#</a> Surge</h2>\n<ol>\n<li>\n<p>首先先安装好 <a href=\"https://www.npmjs.com/package/surge\" target=\"_blank\" rel=\"noopener noreferrer\">surge<OutboundLink/></a>。</p>\n</li>\n<li>\n<p>运行 <code>yarn docs:build</code> 或 <code>npm run docs:build</code>。</p>\n</li>\n<li>\n<p>要部署到 surge, 运行 <code>surge docs/.vuepress/dist</code> 命令。</p>\n</li>\n</ol>\n<p>你也可以通过 <code>surge docs/.vuepress/dist yourdomain.com</code> 来部署到 [自定义域名(http://surge.sh/help/adding-a-custom-domain)。</p>\n<h2 id=\"heroku\"><a class=\"header-anchor\" href=\"#heroku\" aria-hidden=\"true\">#</a> Heroku</h2>\n<ol>\n<li>\n<p>首先要安装 <a href=\"https://devcenter.heroku.com/articles/heroku-cli\" target=\"_blank\" rel=\"noopener noreferrer\">Heroku CLI<OutboundLink/></a>。</p>\n</li>\n<li>\n<p><a href=\"https://signup.heroku.com\" target=\"_blank\" rel=\"noopener noreferrer\">在这里<OutboundLink/></a>创建一个 Heroku 账号。</p>\n</li>\n<li>\n<p>运行 <code>heroku login</code> 并填写你的 Heroku 证书：</p>\n</li>\n</ol>\n<!--beforebegin--><div class=\"language-bash extra-class\"><!--afterbegin--><pre v-pre class=\"language-bash\"><code>heroku login\n</code></pre>\n<!--beforeend--></div><!--afterend--><ol start=\"4\">\n<li>在你的项目根目录中，创建一个名为 <code>static.json</code> 的文件，里面有下述内容：</li>\n</ol>\n<p><code>static.json</code>:</p>\n<!--beforebegin--><div class=\"language-json extra-class\"><!--afterbegin--><pre v-pre class=\"language-json\"><code><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"root\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"./docs/.vuepress/dist\"</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<!--beforeend--></div><!--afterend--><p>这就是你项目的配置，请参考 <a href=\"https://github.com/heroku/heroku-buildpack-static\" target=\"_blank\" rel=\"noopener noreferrer\">heroku-buildpack-static<OutboundLink/></a> 了解更多。</p>\n<ol start=\"5\">\n<li>配置 Heroku 的 git 远程仓库：</li>\n</ol>\n<!--beforebegin--><div class=\"language-bash extra-class\"><!--afterbegin--><pre v-pre class=\"language-bash\"><code><span class=\"token comment\"># 版本变化</span>\n<span class=\"token function\">git</span> init\n<span class=\"token function\">git</span> <span class=\"token function\">add</span> <span class=\"token keyword\">.</span>\n<span class=\"token function\">git</span> commit -m <span class=\"token string\">\"My site ready for deployment.\"</span>\n\n<span class=\"token comment\"># 用指定的名称创建一个新的 heroku 应用</span>\nheroku apps:create example\n\n<span class=\"token comment\"># 为静态站点设置构建包(buildpack)</span>\nheroku buildpacks:set https://github.com/heroku/heroku-buildpack-static.git\n</code></pre>\n<!--beforeend--></div><!--afterend--><ol start=\"6\">\n<li>部署你的站点</li>\n</ol>\n<!--beforebegin--><div class=\"language-bash extra-class\"><!--afterbegin--><pre v-pre class=\"language-bash\"><code><span class=\"token comment\"># 发布站点</span>\n<span class=\"token function\">git</span> push heroku master\n\n<span class=\"token comment\"># 打开一个浏览器去opens a browser to view the Dashboard version of Heroku CI</span>\nheroku <span class=\"token function\">open</span>\n</code></pre>\n<!--beforeend--></div><!--afterend--><hr>\n<blockquote>\n<p>原文：<a href=\"https://vuepress.vuejs.org/guide/deploy.html\" target=\"_blank\" rel=\"noopener noreferrer\">https://vuepress.vuejs.org/guide/deploy.html<OutboundLink/></a></p>\n</blockquote>\n</div>\n",null]}